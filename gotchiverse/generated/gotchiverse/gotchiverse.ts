// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class DiamondCut extends ethereum.Event {
  get params(): DiamondCut__Params {
    return new DiamondCut__Params(this);
  }
}

export class DiamondCut__Params {
  _event: DiamondCut;

  constructor(event: DiamondCut) {
    this._event = event;
  }

  get _diamondCut(): Array<DiamondCut_diamondCutStruct> {
    return this._event.parameters[0].value.toTupleArray<
      DiamondCut_diamondCutStruct
    >();
  }

  get _init(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _calldata(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class DiamondCut_diamondCutStruct extends ethereum.Tuple {
  get facetAddress(): Address {
    return this[0].toAddress();
  }

  get action(): i32 {
    return this[1].toI32();
  }

  get functionSelectors(): Array<Bytes> {
    return this[2].toBytesArray();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class ChannelAlchemica extends ethereum.Event {
  get params(): ChannelAlchemica__Params {
    return new ChannelAlchemica__Params(this);
  }
}

export class ChannelAlchemica__Params {
  _event: ChannelAlchemica;

  constructor(event: ChannelAlchemica) {
    this._event = event;
  }

  get _realmId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _gotchiId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get _alchemica(): Array<BigInt> {
    return this._event.parameters[2].value.toBigIntArray();
  }

  get _spilloverRate(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get _spilloverRadius(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class ExitAlchemica extends ethereum.Event {
  get params(): ExitAlchemica__Params {
    return new ExitAlchemica__Params(this);
  }
}

export class ExitAlchemica__Params {
  _event: ExitAlchemica;

  constructor(event: ExitAlchemica) {
    this._event = event;
  }

  get _gotchiId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _alchemica(): Array<BigInt> {
    return this._event.parameters[1].value.toBigIntArray();
  }
}

export class StartSurveying extends ethereum.Event {
  get params(): StartSurveying__Params {
    return new StartSurveying__Params(this);
  }
}

export class StartSurveying__Params {
  _event: StartSurveying;

  constructor(event: StartSurveying) {
    this._event = event;
  }

  get _realmId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _round(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class SurveyingRoundProgressed extends ethereum.Event {
  get params(): SurveyingRoundProgressed__Params {
    return new SurveyingRoundProgressed__Params(this);
  }
}

export class SurveyingRoundProgressed__Params {
  _event: SurveyingRoundProgressed;

  constructor(event: SurveyingRoundProgressed) {
    this._event = event;
  }

  get _newRound(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class AavegotchiDiamondUpdated extends ethereum.Event {
  get params(): AavegotchiDiamondUpdated__Params {
    return new AavegotchiDiamondUpdated__Params(this);
  }
}

export class AavegotchiDiamondUpdated__Params {
  _event: AavegotchiDiamondUpdated;

  constructor(event: AavegotchiDiamondUpdated) {
    this._event = event;
  }

  get _aavegotchiDiamond(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class EquipInstallation extends ethereum.Event {
  get params(): EquipInstallation__Params {
    return new EquipInstallation__Params(this);
  }
}

export class EquipInstallation__Params {
  _event: EquipInstallation;

  constructor(event: EquipInstallation) {
    this._event = event;
  }

  get _realmId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _installationId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get _x(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get _y(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class EquipTile extends ethereum.Event {
  get params(): EquipTile__Params {
    return new EquipTile__Params(this);
  }
}

export class EquipTile__Params {
  _event: EquipTile;

  constructor(event: EquipTile) {
    this._event = event;
  }

  get _realmId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _tileId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get _x(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get _y(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class InstallationUpgraded extends ethereum.Event {
  get params(): InstallationUpgraded__Params {
    return new InstallationUpgraded__Params(this);
  }
}

export class InstallationUpgraded__Params {
  _event: InstallationUpgraded;

  constructor(event: InstallationUpgraded) {
    this._event = event;
  }

  get _realmId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _prevInstallationId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get _nextInstallationId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get _coordinateX(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get _coordinateY(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class UnequipInstallation extends ethereum.Event {
  get params(): UnequipInstallation__Params {
    return new UnequipInstallation__Params(this);
  }
}

export class UnequipInstallation__Params {
  _event: UnequipInstallation;

  constructor(event: UnequipInstallation) {
    this._event = event;
  }

  get _realmId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _installationId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get _x(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get _y(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class UnequipTile extends ethereum.Event {
  get params(): UnequipTile__Params {
    return new UnequipTile__Params(this);
  }
}

export class UnequipTile__Params {
  _event: UnequipTile;

  constructor(event: UnequipTile) {
    this._event = event;
  }

  get _realmId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _tileId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get _x(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get _y(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class AlchemicaClaimed extends ethereum.Event {
  get params(): AlchemicaClaimed__Params {
    return new AlchemicaClaimed__Params(this);
  }
}

export class AlchemicaClaimed__Params {
  _event: AlchemicaClaimed;

  constructor(event: AlchemicaClaimed) {
    this._event = event;
  }

  get _realmId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _gotchiId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get _alchemicaType(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get _amount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get _spilloverRate(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get _spilloverRadius(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class ChannelAlchemica1 extends ethereum.Event {
  get params(): ChannelAlchemica1__Params {
    return new ChannelAlchemica1__Params(this);
  }
}

export class ChannelAlchemica1__Params {
  _event: ChannelAlchemica1;

  constructor(event: ChannelAlchemica1) {
    this._event = event;
  }

  get _realmId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _gotchiId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get _alchemica(): Array<BigInt> {
    return this._event.parameters[2].value.toBigIntArray();
  }

  get _spilloverRate(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get _spilloverRadius(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class ExitAlchemica1 extends ethereum.Event {
  get params(): ExitAlchemica1__Params {
    return new ExitAlchemica1__Params(this);
  }
}

export class ExitAlchemica1__Params {
  _event: ExitAlchemica1;

  constructor(event: ExitAlchemica1) {
    this._event = event;
  }

  get _gotchiId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _alchemica(): Array<BigInt> {
    return this._event.parameters[1].value.toBigIntArray();
  }
}

export class SurveyingRoundProgressed1 extends ethereum.Event {
  get params(): SurveyingRoundProgressed1__Params {
    return new SurveyingRoundProgressed1__Params(this);
  }
}

export class SurveyingRoundProgressed1__Params {
  _event: SurveyingRoundProgressed1;

  constructor(event: SurveyingRoundProgressed1) {
    this._event = event;
  }

  get _newRound(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class ParcelAccessRightSet extends ethereum.Event {
  get params(): ParcelAccessRightSet__Params {
    return new ParcelAccessRightSet__Params(this);
  }
}

export class ParcelAccessRightSet__Params {
  _event: ParcelAccessRightSet;

  constructor(event: ParcelAccessRightSet) {
    this._event = event;
  }

  get _realmId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _actionRight(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get _accessRight(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class ResyncParcel extends ethereum.Event {
  get params(): ResyncParcel__Params {
    return new ResyncParcel__Params(this);
  }
}

export class ResyncParcel__Params {
  _event: ResyncParcel;

  constructor(event: ResyncParcel) {
    this._event = event;
  }

  get _realmId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class SetAltarId extends ethereum.Event {
  get params(): SetAltarId__Params {
    return new SetAltarId__Params(this);
  }
}

export class SetAltarId__Params {
  _event: SetAltarId;

  constructor(event: SetAltarId) {
    this._event = event;
  }

  get _realmId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _altarId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Transfer extends ethereum.Event {
  get params(): Transfer__Params {
    return new Transfer__Params(this);
  }
}

export class Transfer__Params {
  _event: Transfer;

  constructor(event: Transfer) {
    this._event = event;
  }

  get _from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _to(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class MintParcel extends ethereum.Event {
  get params(): MintParcel__Params {
    return new MintParcel__Params(this);
  }
}

export class MintParcel__Params {
  _event: MintParcel;

  constructor(event: MintParcel) {
    this._event = event;
  }

  get _owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class SurveyParcel extends ethereum.Event {
  get params(): SurveyParcel__Params {
    return new SurveyParcel__Params(this);
  }
}

export class SurveyParcel__Params {
  _event: SurveyParcel;

  constructor(event: SurveyParcel) {
    this._event = event;
  }

  get _tokenId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _round(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get _alchemicas(): Array<BigInt> {
    return this._event.parameters[2].value.toBigIntArray();
  }
}

export class gotchiverse__facetsResultFacets_Struct extends ethereum.Tuple {
  get facetAddress(): Address {
    return this[0].toAddress();
  }

  get functionSelectors(): Array<Bytes> {
    return this[1].toBytesArray();
  }
}

export class gotchiverse__batchGetGridResultValue0Struct extends ethereum.Tuple {
  get coords(): Array<Array<BigInt>> {
    return this[0].toBigIntMatrix();
  }
}

export class gotchiverse__calculateSpilloverForReservoirResultSpillover_Struct extends ethereum.Tuple {
  get rate(): BigInt {
    return this[0].toBigInt();
  }

  get radius(): BigInt {
    return this[1].toBigInt();
  }
}

export class gotchiverse__getParcelInfoResultOutput_Struct extends ethereum.Tuple {
  get parcelId(): string {
    return this[0].toString();
  }

  get parcelAddress(): string {
    return this[1].toString();
  }

  get owner(): Address {
    return this[2].toAddress();
  }

  get coordinateX(): BigInt {
    return this[3].toBigInt();
  }

  get coordinateY(): BigInt {
    return this[4].toBigInt();
  }

  get size(): BigInt {
    return this[5].toBigInt();
  }

  get district(): BigInt {
    return this[6].toBigInt();
  }

  get boost(): Array<BigInt> {
    return this[7].toBigIntArray();
  }

  get timeRemainingToClaim(): BigInt {
    return this[8].toBigInt();
  }
}

export class gotchiverse extends ethereum.SmartContract {
  static bind(address: Address): gotchiverse {
    return new gotchiverse("gotchiverse", address);
  }

  facetAddress(_functionSelector: Bytes): Address {
    let result = super.call("facetAddress", "facetAddress(bytes4):(address)", [
      ethereum.Value.fromFixedBytes(_functionSelector)
    ]);

    return result[0].toAddress();
  }

  try_facetAddress(_functionSelector: Bytes): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "facetAddress",
      "facetAddress(bytes4):(address)",
      [ethereum.Value.fromFixedBytes(_functionSelector)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  facetAddresses(): Array<Address> {
    let result = super.call(
      "facetAddresses",
      "facetAddresses():(address[])",
      []
    );

    return result[0].toAddressArray();
  }

  try_facetAddresses(): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "facetAddresses",
      "facetAddresses():(address[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  facetFunctionSelectors(_facet: Address): Array<Bytes> {
    let result = super.call(
      "facetFunctionSelectors",
      "facetFunctionSelectors(address):(bytes4[])",
      [ethereum.Value.fromAddress(_facet)]
    );

    return result[0].toBytesArray();
  }

  try_facetFunctionSelectors(
    _facet: Address
  ): ethereum.CallResult<Array<Bytes>> {
    let result = super.tryCall(
      "facetFunctionSelectors",
      "facetFunctionSelectors(address):(bytes4[])",
      [ethereum.Value.fromAddress(_facet)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytesArray());
  }

  facets(): Array<gotchiverse__facetsResultFacets_Struct> {
    let result = super.call("facets", "facets():((address,bytes4[])[])", []);

    return result[0].toTupleArray<gotchiverse__facetsResultFacets_Struct>();
  }

  try_facets(): ethereum.CallResult<
    Array<gotchiverse__facetsResultFacets_Struct>
  > {
    let result = super.tryCall("facets", "facets():((address,bytes4[])[])", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<gotchiverse__facetsResultFacets_Struct>()
    );
  }

  supportsInterface(_interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(_interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(_interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(_interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  balanceOf(_owner: Address): BigInt {
    let result = super.call("balanceOf", "balanceOf(address):(uint256)", [
      ethereum.Value.fromAddress(_owner)
    ]);

    return result[0].toBigInt();
  }

  try_balanceOf(_owner: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("balanceOf", "balanceOf(address):(uint256)", [
      ethereum.Value.fromAddress(_owner)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getApproved(_tokenId: BigInt): Address {
    let result = super.call("getApproved", "getApproved(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(_tokenId)
    ]);

    return result[0].toAddress();
  }

  try_getApproved(_tokenId: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getApproved",
      "getApproved(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(_tokenId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  isApprovedForAll(_owner: Address, _operator: Address): boolean {
    let result = super.call(
      "isApprovedForAll",
      "isApprovedForAll(address,address):(bool)",
      [
        ethereum.Value.fromAddress(_owner),
        ethereum.Value.fromAddress(_operator)
      ]
    );

    return result[0].toBoolean();
  }

  try_isApprovedForAll(
    _owner: Address,
    _operator: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isApprovedForAll",
      "isApprovedForAll(address,address):(bool)",
      [
        ethereum.Value.fromAddress(_owner),
        ethereum.Value.fromAddress(_operator)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  name(): string {
    let result = super.call("name", "name():(string)", []);

    return result[0].toString();
  }

  try_name(): ethereum.CallResult<string> {
    let result = super.tryCall("name", "name():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  ownerOf(_tokenId: BigInt): Address {
    let result = super.call("ownerOf", "ownerOf(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(_tokenId)
    ]);

    return result[0].toAddress();
  }

  try_ownerOf(_tokenId: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall("ownerOf", "ownerOf(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(_tokenId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  symbol(): string {
    let result = super.call("symbol", "symbol():(string)", []);

    return result[0].toString();
  }

  try_symbol(): ethereum.CallResult<string> {
    let result = super.tryCall("symbol", "symbol():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  tokenByIndex(_index: BigInt): BigInt {
    let result = super.call("tokenByIndex", "tokenByIndex(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(_index)
    ]);

    return result[0].toBigInt();
  }

  try_tokenByIndex(_index: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "tokenByIndex",
      "tokenByIndex(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_index)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  tokenIdsOfOwner(_owner: Address): Array<BigInt> {
    let result = super.call(
      "tokenIdsOfOwner",
      "tokenIdsOfOwner(address):(uint256[])",
      [ethereum.Value.fromAddress(_owner)]
    );

    return result[0].toBigIntArray();
  }

  try_tokenIdsOfOwner(_owner: Address): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "tokenIdsOfOwner",
      "tokenIdsOfOwner(address):(uint256[])",
      [ethereum.Value.fromAddress(_owner)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  tokenURI(_tokenId: BigInt): string {
    let result = super.call("tokenURI", "tokenURI(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(_tokenId)
    ]);

    return result[0].toString();
  }

  try_tokenURI(_tokenId: BigInt): ethereum.CallResult<string> {
    let result = super.tryCall("tokenURI", "tokenURI(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(_tokenId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  totalSupply(): BigInt {
    let result = super.call("totalSupply", "totalSupply():(uint256)", []);

    return result[0].toBigInt();
  }

  try_totalSupply(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("totalSupply", "totalSupply():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  batchGetGrid(
    _parcelIds: Array<BigInt>,
    _gridType: BigInt
  ): Array<gotchiverse__batchGetGridResultValue0Struct> {
    let result = super.call(
      "batchGetGrid",
      "batchGetGrid(uint256[],uint256):((uint256[64][64])[])",
      [
        ethereum.Value.fromUnsignedBigIntArray(_parcelIds),
        ethereum.Value.fromUnsignedBigInt(_gridType)
      ]
    );

    return result[0].toTupleArray<
      gotchiverse__batchGetGridResultValue0Struct
    >();
  }

  try_batchGetGrid(
    _parcelIds: Array<BigInt>,
    _gridType: BigInt
  ): ethereum.CallResult<Array<gotchiverse__batchGetGridResultValue0Struct>> {
    let result = super.tryCall(
      "batchGetGrid",
      "batchGetGrid(uint256[],uint256):((uint256[64][64])[])",
      [
        ethereum.Value.fromUnsignedBigIntArray(_parcelIds),
        ethereum.Value.fromUnsignedBigInt(_gridType)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<gotchiverse__batchGetGridResultValue0Struct>()
    );
  }

  getHumbleGrid(_parcelId: BigInt, _gridType: BigInt): Array<Array<BigInt>> {
    let result = super.call(
      "getHumbleGrid",
      "getHumbleGrid(uint256,uint256):(uint256[8][8])",
      [
        ethereum.Value.fromUnsignedBigInt(_parcelId),
        ethereum.Value.fromUnsignedBigInt(_gridType)
      ]
    );

    return result[0].toBigIntMatrix();
  }

  try_getHumbleGrid(
    _parcelId: BigInt,
    _gridType: BigInt
  ): ethereum.CallResult<Array<Array<BigInt>>> {
    let result = super.tryCall(
      "getHumbleGrid",
      "getHumbleGrid(uint256,uint256):(uint256[8][8])",
      [
        ethereum.Value.fromUnsignedBigInt(_parcelId),
        ethereum.Value.fromUnsignedBigInt(_gridType)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntMatrix());
  }

  getPaartnerGrid(_parcelId: BigInt, _gridType: BigInt): Array<Array<BigInt>> {
    let result = super.call(
      "getPaartnerGrid",
      "getPaartnerGrid(uint256,uint256):(uint256[64][64])",
      [
        ethereum.Value.fromUnsignedBigInt(_parcelId),
        ethereum.Value.fromUnsignedBigInt(_gridType)
      ]
    );

    return result[0].toBigIntMatrix();
  }

  try_getPaartnerGrid(
    _parcelId: BigInt,
    _gridType: BigInt
  ): ethereum.CallResult<Array<Array<BigInt>>> {
    let result = super.tryCall(
      "getPaartnerGrid",
      "getPaartnerGrid(uint256,uint256):(uint256[64][64])",
      [
        ethereum.Value.fromUnsignedBigInt(_parcelId),
        ethereum.Value.fromUnsignedBigInt(_gridType)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntMatrix());
  }

  getReasonableGrid(
    _parcelId: BigInt,
    _gridType: BigInt
  ): Array<Array<BigInt>> {
    let result = super.call(
      "getReasonableGrid",
      "getReasonableGrid(uint256,uint256):(uint256[16][16])",
      [
        ethereum.Value.fromUnsignedBigInt(_parcelId),
        ethereum.Value.fromUnsignedBigInt(_gridType)
      ]
    );

    return result[0].toBigIntMatrix();
  }

  try_getReasonableGrid(
    _parcelId: BigInt,
    _gridType: BigInt
  ): ethereum.CallResult<Array<Array<BigInt>>> {
    let result = super.tryCall(
      "getReasonableGrid",
      "getReasonableGrid(uint256,uint256):(uint256[16][16])",
      [
        ethereum.Value.fromUnsignedBigInt(_parcelId),
        ethereum.Value.fromUnsignedBigInt(_gridType)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntMatrix());
  }

  getSpaciousHorizontalGrid(
    _parcelId: BigInt,
    _gridType: BigInt
  ): Array<Array<BigInt>> {
    let result = super.call(
      "getSpaciousHorizontalGrid",
      "getSpaciousHorizontalGrid(uint256,uint256):(uint256[64][32])",
      [
        ethereum.Value.fromUnsignedBigInt(_parcelId),
        ethereum.Value.fromUnsignedBigInt(_gridType)
      ]
    );

    return result[0].toBigIntMatrix();
  }

  try_getSpaciousHorizontalGrid(
    _parcelId: BigInt,
    _gridType: BigInt
  ): ethereum.CallResult<Array<Array<BigInt>>> {
    let result = super.tryCall(
      "getSpaciousHorizontalGrid",
      "getSpaciousHorizontalGrid(uint256,uint256):(uint256[64][32])",
      [
        ethereum.Value.fromUnsignedBigInt(_parcelId),
        ethereum.Value.fromUnsignedBigInt(_gridType)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntMatrix());
  }

  getSpaciousVerticalGrid(
    _parcelId: BigInt,
    _gridType: BigInt
  ): Array<Array<BigInt>> {
    let result = super.call(
      "getSpaciousVerticalGrid",
      "getSpaciousVerticalGrid(uint256,uint256):(uint256[32][64])",
      [
        ethereum.Value.fromUnsignedBigInt(_parcelId),
        ethereum.Value.fromUnsignedBigInt(_gridType)
      ]
    );

    return result[0].toBigIntMatrix();
  }

  try_getSpaciousVerticalGrid(
    _parcelId: BigInt,
    _gridType: BigInt
  ): ethereum.CallResult<Array<Array<BigInt>>> {
    let result = super.tryCall(
      "getSpaciousVerticalGrid",
      "getSpaciousVerticalGrid(uint256,uint256):(uint256[32][64])",
      [
        ethereum.Value.fromUnsignedBigInt(_parcelId),
        ethereum.Value.fromUnsignedBigInt(_gridType)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntMatrix());
  }

  isGridStartPosition(
    _parcelId: BigInt,
    _x: BigInt,
    _y: BigInt,
    _isTile: boolean,
    _id: BigInt
  ): boolean {
    let result = super.call(
      "isGridStartPosition",
      "isGridStartPosition(uint256,uint256,uint256,bool,uint256):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(_parcelId),
        ethereum.Value.fromUnsignedBigInt(_x),
        ethereum.Value.fromUnsignedBigInt(_y),
        ethereum.Value.fromBoolean(_isTile),
        ethereum.Value.fromUnsignedBigInt(_id)
      ]
    );

    return result[0].toBoolean();
  }

  try_isGridStartPosition(
    _parcelId: BigInt,
    _x: BigInt,
    _y: BigInt,
    _isTile: boolean,
    _id: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isGridStartPosition",
      "isGridStartPosition(uint256,uint256,uint256,bool,uint256):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(_parcelId),
        ethereum.Value.fromUnsignedBigInt(_x),
        ethereum.Value.fromUnsignedBigInt(_y),
        ethereum.Value.fromBoolean(_isTile),
        ethereum.Value.fromUnsignedBigInt(_id)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  getAlchemicaAddresses(): Array<Address> {
    let result = super.call(
      "getAlchemicaAddresses",
      "getAlchemicaAddresses():(address[4])",
      []
    );

    return result[0].toAddressArray();
  }

  try_getAlchemicaAddresses(): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "getAlchemicaAddresses",
      "getAlchemicaAddresses():(address[4])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  getAvailableAlchemica(_realmId: BigInt): Array<BigInt> {
    let result = super.call(
      "getAvailableAlchemica",
      "getAvailableAlchemica(uint256):(uint256[4])",
      [ethereum.Value.fromUnsignedBigInt(_realmId)]
    );

    return result[0].toBigIntArray();
  }

  try_getAvailableAlchemica(
    _realmId: BigInt
  ): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "getAvailableAlchemica",
      "getAvailableAlchemica(uint256):(uint256[4])",
      [ethereum.Value.fromUnsignedBigInt(_realmId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  getCapacities(_realmId: BigInt): Array<BigInt> {
    let result = super.call(
      "getCapacities",
      "getCapacities(uint256):(uint256[])",
      [ethereum.Value.fromUnsignedBigInt(_realmId)]
    );

    return result[0].toBigIntArray();
  }

  try_getCapacities(_realmId: BigInt): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "getCapacities",
      "getCapacities(uint256):(uint256[])",
      [ethereum.Value.fromUnsignedBigInt(_realmId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  getHarvestRates(_realmId: BigInt): Array<BigInt> {
    let result = super.call(
      "getHarvestRates",
      "getHarvestRates(uint256):(uint256[])",
      [ethereum.Value.fromUnsignedBigInt(_realmId)]
    );

    return result[0].toBigIntArray();
  }

  try_getHarvestRates(_realmId: BigInt): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "getHarvestRates",
      "getHarvestRates(uint256):(uint256[])",
      [ethereum.Value.fromUnsignedBigInt(_realmId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  getLastChanneled(_gotchiId: BigInt): BigInt {
    let result = super.call(
      "getLastChanneled",
      "getLastChanneled(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_gotchiId)]
    );

    return result[0].toBigInt();
  }

  try_getLastChanneled(_gotchiId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getLastChanneled",
      "getLastChanneled(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_gotchiId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getParcelLastChanneled(_parcelId: BigInt): BigInt {
    let result = super.call(
      "getParcelLastChanneled",
      "getParcelLastChanneled(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_parcelId)]
    );

    return result[0].toBigInt();
  }

  try_getParcelLastChanneled(_parcelId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getParcelLastChanneled",
      "getParcelLastChanneled(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_parcelId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getRealmAlchemica(_realmId: BigInt): Array<BigInt> {
    let result = super.call(
      "getRealmAlchemica",
      "getRealmAlchemica(uint256):(uint256[4])",
      [ethereum.Value.fromUnsignedBigInt(_realmId)]
    );

    return result[0].toBigIntArray();
  }

  try_getRealmAlchemica(_realmId: BigInt): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "getRealmAlchemica",
      "getRealmAlchemica(uint256):(uint256[4])",
      [ethereum.Value.fromUnsignedBigInt(_realmId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  getRoundAlchemica(_realmId: BigInt, _roundId: BigInt): Array<BigInt> {
    let result = super.call(
      "getRoundAlchemica",
      "getRoundAlchemica(uint256,uint256):(uint256[])",
      [
        ethereum.Value.fromUnsignedBigInt(_realmId),
        ethereum.Value.fromUnsignedBigInt(_roundId)
      ]
    );

    return result[0].toBigIntArray();
  }

  try_getRoundAlchemica(
    _realmId: BigInt,
    _roundId: BigInt
  ): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "getRoundAlchemica",
      "getRoundAlchemica(uint256,uint256):(uint256[])",
      [
        ethereum.Value.fromUnsignedBigInt(_realmId),
        ethereum.Value.fromUnsignedBigInt(_roundId)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  getRoundBaseAlchemica(_realmId: BigInt, _roundId: BigInt): Array<BigInt> {
    let result = super.call(
      "getRoundBaseAlchemica",
      "getRoundBaseAlchemica(uint256,uint256):(uint256[])",
      [
        ethereum.Value.fromUnsignedBigInt(_realmId),
        ethereum.Value.fromUnsignedBigInt(_roundId)
      ]
    );

    return result[0].toBigIntArray();
  }

  try_getRoundBaseAlchemica(
    _realmId: BigInt,
    _roundId: BigInt
  ): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "getRoundBaseAlchemica",
      "getRoundBaseAlchemica(uint256,uint256):(uint256[])",
      [
        ethereum.Value.fromUnsignedBigInt(_realmId),
        ethereum.Value.fromUnsignedBigInt(_roundId)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  getTotalAlchemicas(): Array<Array<BigInt>> {
    let result = super.call(
      "getTotalAlchemicas",
      "getTotalAlchemicas():(uint256[4][5])",
      []
    );

    return result[0].toBigIntMatrix();
  }

  try_getTotalAlchemicas(): ethereum.CallResult<Array<Array<BigInt>>> {
    let result = super.tryCall(
      "getTotalAlchemicas",
      "getTotalAlchemicas():(uint256[4][5])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntMatrix());
  }

  getTotalClaimed(_realmId: BigInt): Array<BigInt> {
    let result = super.call(
      "getTotalClaimed",
      "getTotalClaimed(uint256):(uint256[])",
      [ethereum.Value.fromUnsignedBigInt(_realmId)]
    );

    return result[0].toBigIntArray();
  }

  try_getTotalClaimed(_realmId: BigInt): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "getTotalClaimed",
      "getTotalClaimed(uint256):(uint256[])",
      [ethereum.Value.fromUnsignedBigInt(_realmId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  isSurveying(_realmId: BigInt): boolean {
    let result = super.call("isSurveying", "isSurveying(uint256):(bool)", [
      ethereum.Value.fromUnsignedBigInt(_realmId)
    ]);

    return result[0].toBoolean();
  }

  try_isSurveying(_realmId: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall("isSurveying", "isSurveying(uint256):(bool)", [
      ethereum.Value.fromUnsignedBigInt(_realmId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  lastClaimedAlchemica(_realmId: BigInt): BigInt {
    let result = super.call(
      "lastClaimedAlchemica",
      "lastClaimedAlchemica(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_realmId)]
    );

    return result[0].toBigInt();
  }

  try_lastClaimedAlchemica(_realmId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "lastClaimedAlchemica",
      "lastClaimedAlchemica(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_realmId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  buildingFrozen(): boolean {
    let result = super.call("buildingFrozen", "buildingFrozen():(bool)", []);

    return result[0].toBoolean();
  }

  try_buildingFrozen(): ethereum.CallResult<boolean> {
    let result = super.tryCall("buildingFrozen", "buildingFrozen():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  calculateSpilloverForReservoir(
    _realmId: BigInt,
    _alchemicaType: BigInt
  ): gotchiverse__calculateSpilloverForReservoirResultSpillover_Struct {
    let result = super.call(
      "calculateSpilloverForReservoir",
      "calculateSpilloverForReservoir(uint256,uint256):((uint256,uint256))",
      [
        ethereum.Value.fromUnsignedBigInt(_realmId),
        ethereum.Value.fromUnsignedBigInt(_alchemicaType)
      ]
    );

    return changetype<
      gotchiverse__calculateSpilloverForReservoirResultSpillover_Struct
    >(result[0].toTuple());
  }

  try_calculateSpilloverForReservoir(
    _realmId: BigInt,
    _alchemicaType: BigInt
  ): ethereum.CallResult<
    gotchiverse__calculateSpilloverForReservoirResultSpillover_Struct
  > {
    let result = super.tryCall(
      "calculateSpilloverForReservoir",
      "calculateSpilloverForReservoir(uint256,uint256):((uint256,uint256))",
      [
        ethereum.Value.fromUnsignedBigInt(_realmId),
        ethereum.Value.fromUnsignedBigInt(_alchemicaType)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<
        gotchiverse__calculateSpilloverForReservoirResultSpillover_Struct
      >(value[0].toTuple())
    );
  }

  getAlchemicaAddresses1(): Array<Address> {
    let result = super.call(
      "getAlchemicaAddresses",
      "getAlchemicaAddresses():(address[4])",
      []
    );

    return result[0].toAddressArray();
  }

  try_getAlchemicaAddresses1(): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "getAlchemicaAddresses",
      "getAlchemicaAddresses():(address[4])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  getAvailableAlchemica1(_realmId: BigInt): Array<BigInt> {
    let result = super.call(
      "getAvailableAlchemica",
      "getAvailableAlchemica(uint256):(uint256[4])",
      [ethereum.Value.fromUnsignedBigInt(_realmId)]
    );

    return result[0].toBigIntArray();
  }

  try_getAvailableAlchemica1(
    _realmId: BigInt
  ): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "getAvailableAlchemica",
      "getAvailableAlchemica(uint256):(uint256[4])",
      [ethereum.Value.fromUnsignedBigInt(_realmId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  getLastChanneled1(_gotchiId: BigInt): BigInt {
    let result = super.call(
      "getLastChanneled",
      "getLastChanneled(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_gotchiId)]
    );

    return result[0].toBigInt();
  }

  try_getLastChanneled1(_gotchiId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getLastChanneled",
      "getLastChanneled(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_gotchiId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getParcelLastChanneled1(_parcelId: BigInt): BigInt {
    let result = super.call(
      "getParcelLastChanneled",
      "getParcelLastChanneled(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_parcelId)]
    );

    return result[0].toBigInt();
  }

  try_getParcelLastChanneled1(_parcelId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getParcelLastChanneled",
      "getParcelLastChanneled(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_parcelId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getRealmAlchemica1(_realmId: BigInt): Array<BigInt> {
    let result = super.call(
      "getRealmAlchemica",
      "getRealmAlchemica(uint256):(uint256[4])",
      [ethereum.Value.fromUnsignedBigInt(_realmId)]
    );

    return result[0].toBigIntArray();
  }

  try_getRealmAlchemica1(_realmId: BigInt): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "getRealmAlchemica",
      "getRealmAlchemica(uint256):(uint256[4])",
      [ethereum.Value.fromUnsignedBigInt(_realmId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  getRoundAlchemica1(_realmId: BigInt, _roundId: BigInt): Array<BigInt> {
    let result = super.call(
      "getRoundAlchemica",
      "getRoundAlchemica(uint256,uint256):(uint256[])",
      [
        ethereum.Value.fromUnsignedBigInt(_realmId),
        ethereum.Value.fromUnsignedBigInt(_roundId)
      ]
    );

    return result[0].toBigIntArray();
  }

  try_getRoundAlchemica1(
    _realmId: BigInt,
    _roundId: BigInt
  ): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "getRoundAlchemica",
      "getRoundAlchemica(uint256,uint256):(uint256[])",
      [
        ethereum.Value.fromUnsignedBigInt(_realmId),
        ethereum.Value.fromUnsignedBigInt(_roundId)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  getRoundBaseAlchemica1(_realmId: BigInt, _roundId: BigInt): Array<BigInt> {
    let result = super.call(
      "getRoundBaseAlchemica",
      "getRoundBaseAlchemica(uint256,uint256):(uint256[])",
      [
        ethereum.Value.fromUnsignedBigInt(_realmId),
        ethereum.Value.fromUnsignedBigInt(_roundId)
      ]
    );

    return result[0].toBigIntArray();
  }

  try_getRoundBaseAlchemica1(
    _realmId: BigInt,
    _roundId: BigInt
  ): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "getRoundBaseAlchemica",
      "getRoundBaseAlchemica(uint256,uint256):(uint256[])",
      [
        ethereum.Value.fromUnsignedBigInt(_realmId),
        ethereum.Value.fromUnsignedBigInt(_roundId)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  getTotalAlchemicas1(): Array<Array<BigInt>> {
    let result = super.call(
      "getTotalAlchemicas",
      "getTotalAlchemicas():(uint256[4][5])",
      []
    );

    return result[0].toBigIntMatrix();
  }

  try_getTotalAlchemicas1(): ethereum.CallResult<Array<Array<BigInt>>> {
    let result = super.tryCall(
      "getTotalAlchemicas",
      "getTotalAlchemicas():(uint256[4][5])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntMatrix());
  }

  batchGetDistrictParcels(_owner: Address, _district: BigInt): Array<BigInt> {
    let result = super.call(
      "batchGetDistrictParcels",
      "batchGetDistrictParcels(address,uint256):(uint256[])",
      [
        ethereum.Value.fromAddress(_owner),
        ethereum.Value.fromUnsignedBigInt(_district)
      ]
    );

    return result[0].toBigIntArray();
  }

  try_batchGetDistrictParcels(
    _owner: Address,
    _district: BigInt
  ): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "batchGetDistrictParcels",
      "batchGetDistrictParcels(address,uint256):(uint256[])",
      [
        ethereum.Value.fromAddress(_owner),
        ethereum.Value.fromUnsignedBigInt(_district)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  getAltarId(_parcelId: BigInt): BigInt {
    let result = super.call("getAltarId", "getAltarId(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(_parcelId)
    ]);

    return result[0].toBigInt();
  }

  try_getAltarId(_parcelId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall("getAltarId", "getAltarId(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(_parcelId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getParcelInfo(
    _realmId: BigInt
  ): gotchiverse__getParcelInfoResultOutput_Struct {
    let result = super.call(
      "getParcelInfo",
      "getParcelInfo(uint256):((string,string,address,uint256,uint256,uint256,uint256,uint256[4],uint256))",
      [ethereum.Value.fromUnsignedBigInt(_realmId)]
    );

    return changetype<gotchiverse__getParcelInfoResultOutput_Struct>(
      result[0].toTuple()
    );
  }

  try_getParcelInfo(
    _realmId: BigInt
  ): ethereum.CallResult<gotchiverse__getParcelInfoResultOutput_Struct> {
    let result = super.tryCall(
      "getParcelInfo",
      "getParcelInfo(uint256):((string,string,address,uint256,uint256,uint256,uint256,uint256[4],uint256))",
      [ethereum.Value.fromUnsignedBigInt(_realmId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<gotchiverse__getParcelInfoResultOutput_Struct>(
        value[0].toTuple()
      )
    );
  }

  getParcelUpgradeQueueCapacity(_parcelId: BigInt): BigInt {
    let result = super.call(
      "getParcelUpgradeQueueCapacity",
      "getParcelUpgradeQueueCapacity(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_parcelId)]
    );

    return result[0].toBigInt();
  }

  try_getParcelUpgradeQueueCapacity(
    _parcelId: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getParcelUpgradeQueueCapacity",
      "getParcelUpgradeQueueCapacity(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_parcelId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getParcelUpgradeQueueLength(_parcelId: BigInt): BigInt {
    let result = super.call(
      "getParcelUpgradeQueueLength",
      "getParcelUpgradeQueueLength(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_parcelId)]
    );

    return result[0].toBigInt();
  }

  try_getParcelUpgradeQueueLength(
    _parcelId: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getParcelUpgradeQueueLength",
      "getParcelUpgradeQueueLength(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_parcelId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getParcelsAccessRights(
    _parcelIds: Array<BigInt>,
    _actionRights: Array<BigInt>
  ): Array<BigInt> {
    let result = super.call(
      "getParcelsAccessRights",
      "getParcelsAccessRights(uint256[],uint256[]):(uint256[])",
      [
        ethereum.Value.fromUnsignedBigIntArray(_parcelIds),
        ethereum.Value.fromUnsignedBigIntArray(_actionRights)
      ]
    );

    return result[0].toBigIntArray();
  }

  try_getParcelsAccessRights(
    _parcelIds: Array<BigInt>,
    _actionRights: Array<BigInt>
  ): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "getParcelsAccessRights",
      "getParcelsAccessRights(uint256[],uint256[]):(uint256[])",
      [
        ethereum.Value.fromUnsignedBigIntArray(_parcelIds),
        ethereum.Value.fromUnsignedBigIntArray(_actionRights)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  maxSupply(): BigInt {
    let result = super.call("maxSupply", "maxSupply():(uint256)", []);

    return result[0].toBigInt();
  }

  try_maxSupply(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("maxSupply", "maxSupply():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class DiamondCutCall extends ethereum.Call {
  get inputs(): DiamondCutCall__Inputs {
    return new DiamondCutCall__Inputs(this);
  }

  get outputs(): DiamondCutCall__Outputs {
    return new DiamondCutCall__Outputs(this);
  }
}

export class DiamondCutCall__Inputs {
  _call: DiamondCutCall;

  constructor(call: DiamondCutCall) {
    this._call = call;
  }

  get _diamondCut(): Array<DiamondCutCall_diamondCutStruct> {
    return this._call.inputValues[0].value.toTupleArray<
      DiamondCutCall_diamondCutStruct
    >();
  }

  get _init(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _calldata(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class DiamondCutCall__Outputs {
  _call: DiamondCutCall;

  constructor(call: DiamondCutCall) {
    this._call = call;
  }
}

export class DiamondCutCall_diamondCutStruct extends ethereum.Tuple {
  get facetAddress(): Address {
    return this[0].toAddress();
  }

  get action(): i32 {
    return this[1].toI32();
  }

  get functionSelectors(): Array<Bytes> {
    return this[2].toBytesArray();
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get _newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class ApproveCall extends ethereum.Call {
  get inputs(): ApproveCall__Inputs {
    return new ApproveCall__Inputs(this);
  }

  get outputs(): ApproveCall__Outputs {
    return new ApproveCall__Outputs(this);
  }
}

export class ApproveCall__Inputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }

  get _approved(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ApproveCall__Outputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }
}

export class SafeBatchTransferCall extends ethereum.Call {
  get inputs(): SafeBatchTransferCall__Inputs {
    return new SafeBatchTransferCall__Inputs(this);
  }

  get outputs(): SafeBatchTransferCall__Outputs {
    return new SafeBatchTransferCall__Outputs(this);
  }
}

export class SafeBatchTransferCall__Inputs {
  _call: SafeBatchTransferCall;

  constructor(call: SafeBatchTransferCall) {
    this._call = call;
  }

  get _from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _tokenIds(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }

  get _data(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class SafeBatchTransferCall__Outputs {
  _call: SafeBatchTransferCall;

  constructor(call: SafeBatchTransferCall) {
    this._call = call;
  }
}

export class SafeTransferFromCall extends ethereum.Call {
  get inputs(): SafeTransferFromCall__Inputs {
    return new SafeTransferFromCall__Inputs(this);
  }

  get outputs(): SafeTransferFromCall__Outputs {
    return new SafeTransferFromCall__Outputs(this);
  }
}

export class SafeTransferFromCall__Inputs {
  _call: SafeTransferFromCall;

  constructor(call: SafeTransferFromCall) {
    this._call = call;
  }

  get _from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class SafeTransferFromCall__Outputs {
  _call: SafeTransferFromCall;

  constructor(call: SafeTransferFromCall) {
    this._call = call;
  }
}

export class SafeTransferFrom1Call extends ethereum.Call {
  get inputs(): SafeTransferFrom1Call__Inputs {
    return new SafeTransferFrom1Call__Inputs(this);
  }

  get outputs(): SafeTransferFrom1Call__Outputs {
    return new SafeTransferFrom1Call__Outputs(this);
  }
}

export class SafeTransferFrom1Call__Inputs {
  _call: SafeTransferFrom1Call;

  constructor(call: SafeTransferFrom1Call) {
    this._call = call;
  }

  get _from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _data(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class SafeTransferFrom1Call__Outputs {
  _call: SafeTransferFrom1Call;

  constructor(call: SafeTransferFrom1Call) {
    this._call = call;
  }
}

export class SetApprovalForAllCall extends ethereum.Call {
  get inputs(): SetApprovalForAllCall__Inputs {
    return new SetApprovalForAllCall__Inputs(this);
  }

  get outputs(): SetApprovalForAllCall__Outputs {
    return new SetApprovalForAllCall__Outputs(this);
  }
}

export class SetApprovalForAllCall__Inputs {
  _call: SetApprovalForAllCall;

  constructor(call: SetApprovalForAllCall) {
    this._call = call;
  }

  get _operator(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _approved(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetApprovalForAllCall__Outputs {
  _call: SetApprovalForAllCall;

  constructor(call: SetApprovalForAllCall) {
    this._call = call;
  }
}

export class TransferFromCall extends ethereum.Call {
  get inputs(): TransferFromCall__Inputs {
    return new TransferFromCall__Inputs(this);
  }

  get outputs(): TransferFromCall__Outputs {
    return new TransferFromCall__Outputs(this);
  }
}

export class TransferFromCall__Inputs {
  _call: TransferFromCall;

  constructor(call: TransferFromCall) {
    this._call = call;
  }

  get _from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class TransferFromCall__Outputs {
  _call: TransferFromCall;

  constructor(call: TransferFromCall) {
    this._call = call;
  }
}

export class FixGridStartPositionsCall extends ethereum.Call {
  get inputs(): FixGridStartPositionsCall__Inputs {
    return new FixGridStartPositionsCall__Inputs(this);
  }

  get outputs(): FixGridStartPositionsCall__Outputs {
    return new FixGridStartPositionsCall__Outputs(this);
  }
}

export class FixGridStartPositionsCall__Inputs {
  _call: FixGridStartPositionsCall;

  constructor(call: FixGridStartPositionsCall) {
    this._call = call;
  }

  get _parcelIds(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }

  get _x(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }

  get _y(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }

  get _isTile(): boolean {
    return this._call.inputValues[3].value.toBoolean();
  }

  get _ids(): Array<BigInt> {
    return this._call.inputValues[4].value.toBigIntArray();
  }
}

export class FixGridStartPositionsCall__Outputs {
  _call: FixGridStartPositionsCall;

  constructor(call: FixGridStartPositionsCall) {
    this._call = call;
  }
}

export class BatchTransferAlchemicaCall extends ethereum.Call {
  get inputs(): BatchTransferAlchemicaCall__Inputs {
    return new BatchTransferAlchemicaCall__Inputs(this);
  }

  get outputs(): BatchTransferAlchemicaCall__Outputs {
    return new BatchTransferAlchemicaCall__Outputs(this);
  }
}

export class BatchTransferAlchemicaCall__Inputs {
  _call: BatchTransferAlchemicaCall;

  constructor(call: BatchTransferAlchemicaCall) {
    this._call = call;
  }

  get _targets(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get _amounts(): Array<Array<BigInt>> {
    return this._call.inputValues[1].value.toBigIntMatrix();
  }
}

export class BatchTransferAlchemicaCall__Outputs {
  _call: BatchTransferAlchemicaCall;

  constructor(call: BatchTransferAlchemicaCall) {
    this._call = call;
  }
}

export class BatchTransferTokensToGotchisCall extends ethereum.Call {
  get inputs(): BatchTransferTokensToGotchisCall__Inputs {
    return new BatchTransferTokensToGotchisCall__Inputs(this);
  }

  get outputs(): BatchTransferTokensToGotchisCall__Outputs {
    return new BatchTransferTokensToGotchisCall__Outputs(this);
  }
}

export class BatchTransferTokensToGotchisCall__Inputs {
  _call: BatchTransferTokensToGotchisCall;

  constructor(call: BatchTransferTokensToGotchisCall) {
    this._call = call;
  }

  get _gotchiIds(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }

  get _tokenAddresses(): Array<Address> {
    return this._call.inputValues[1].value.toAddressArray();
  }

  get _amounts(): Array<Array<BigInt>> {
    return this._call.inputValues[2].value.toBigIntMatrix();
  }
}

export class BatchTransferTokensToGotchisCall__Outputs {
  _call: BatchTransferTokensToGotchisCall;

  constructor(call: BatchTransferTokensToGotchisCall) {
    this._call = call;
  }
}

export class ChannelAlchemicaCall extends ethereum.Call {
  get inputs(): ChannelAlchemicaCall__Inputs {
    return new ChannelAlchemicaCall__Inputs(this);
  }

  get outputs(): ChannelAlchemicaCall__Outputs {
    return new ChannelAlchemicaCall__Outputs(this);
  }
}

export class ChannelAlchemicaCall__Inputs {
  _call: ChannelAlchemicaCall;

  constructor(call: ChannelAlchemicaCall) {
    this._call = call;
  }

  get _realmId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _gotchiId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _lastChanneled(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _signature(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class ChannelAlchemicaCall__Outputs {
  _call: ChannelAlchemicaCall;

  constructor(call: ChannelAlchemicaCall) {
    this._call = call;
  }
}

export class ClaimAvailableAlchemicaCall extends ethereum.Call {
  get inputs(): ClaimAvailableAlchemicaCall__Inputs {
    return new ClaimAvailableAlchemicaCall__Inputs(this);
  }

  get outputs(): ClaimAvailableAlchemicaCall__Outputs {
    return new ClaimAvailableAlchemicaCall__Outputs(this);
  }
}

export class ClaimAvailableAlchemicaCall__Inputs {
  _call: ClaimAvailableAlchemicaCall;

  constructor(call: ClaimAvailableAlchemicaCall) {
    this._call = call;
  }

  get _realmId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _gotchiId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _signature(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class ClaimAvailableAlchemicaCall__Outputs {
  _call: ClaimAvailableAlchemicaCall;

  constructor(call: ClaimAvailableAlchemicaCall) {
    this._call = call;
  }
}

export class ProgressSurveyingRoundCall extends ethereum.Call {
  get inputs(): ProgressSurveyingRoundCall__Inputs {
    return new ProgressSurveyingRoundCall__Inputs(this);
  }

  get outputs(): ProgressSurveyingRoundCall__Outputs {
    return new ProgressSurveyingRoundCall__Outputs(this);
  }
}

export class ProgressSurveyingRoundCall__Inputs {
  _call: ProgressSurveyingRoundCall;

  constructor(call: ProgressSurveyingRoundCall) {
    this._call = call;
  }
}

export class ProgressSurveyingRoundCall__Outputs {
  _call: ProgressSurveyingRoundCall;

  constructor(call: ProgressSurveyingRoundCall) {
    this._call = call;
  }
}

export class SetChannelingLimitsCall extends ethereum.Call {
  get inputs(): SetChannelingLimitsCall__Inputs {
    return new SetChannelingLimitsCall__Inputs(this);
  }

  get outputs(): SetChannelingLimitsCall__Outputs {
    return new SetChannelingLimitsCall__Outputs(this);
  }
}

export class SetChannelingLimitsCall__Inputs {
  _call: SetChannelingLimitsCall;

  constructor(call: SetChannelingLimitsCall) {
    this._call = call;
  }

  get _altarLevel(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }

  get _limits(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }
}

export class SetChannelingLimitsCall__Outputs {
  _call: SetChannelingLimitsCall;

  constructor(call: SetChannelingLimitsCall) {
    this._call = call;
  }
}

export class SetTotalAlchemicasCall extends ethereum.Call {
  get inputs(): SetTotalAlchemicasCall__Inputs {
    return new SetTotalAlchemicasCall__Inputs(this);
  }

  get outputs(): SetTotalAlchemicasCall__Outputs {
    return new SetTotalAlchemicasCall__Outputs(this);
  }
}

export class SetTotalAlchemicasCall__Inputs {
  _call: SetTotalAlchemicasCall;

  constructor(call: SetTotalAlchemicasCall) {
    this._call = call;
  }

  get _totalAlchemicas(): Array<Array<BigInt>> {
    return this._call.inputValues[0].value.toBigIntMatrix();
  }
}

export class SetTotalAlchemicasCall__Outputs {
  _call: SetTotalAlchemicasCall;

  constructor(call: SetTotalAlchemicasCall) {
    this._call = call;
  }
}

export class SetVarsCall extends ethereum.Call {
  get inputs(): SetVarsCall__Inputs {
    return new SetVarsCall__Inputs(this);
  }

  get outputs(): SetVarsCall__Outputs {
    return new SetVarsCall__Outputs(this);
  }
}

export class SetVarsCall__Inputs {
  _call: SetVarsCall;

  constructor(call: SetVarsCall) {
    this._call = call;
  }

  get _alchemicas(): Array<Array<BigInt>> {
    return this._call.inputValues[0].value.toBigIntMatrix();
  }

  get _boostMultipliers(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }

  get _greatPortalCapacity(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }

  get _installationsDiamond(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _vrfCoordinator(): Address {
    return this._call.inputValues[4].value.toAddress();
  }

  get _linkAddress(): Address {
    return this._call.inputValues[5].value.toAddress();
  }

  get _alchemicaAddresses(): Array<Address> {
    return this._call.inputValues[6].value.toAddressArray();
  }

  get _gltrAddress(): Address {
    return this._call.inputValues[7].value.toAddress();
  }

  get _backendPubKey(): Bytes {
    return this._call.inputValues[8].value.toBytes();
  }

  get _gameManager(): Address {
    return this._call.inputValues[9].value.toAddress();
  }

  get _tileDiamond(): Address {
    return this._call.inputValues[10].value.toAddress();
  }

  get _aavegotchiDiamond(): Address {
    return this._call.inputValues[11].value.toAddress();
  }
}

export class SetVarsCall__Outputs {
  _call: SetVarsCall;

  constructor(call: SetVarsCall) {
    this._call = call;
  }
}

export class StartSurveyingCall extends ethereum.Call {
  get inputs(): StartSurveyingCall__Inputs {
    return new StartSurveyingCall__Inputs(this);
  }

  get outputs(): StartSurveyingCall__Outputs {
    return new StartSurveyingCall__Outputs(this);
  }
}

export class StartSurveyingCall__Inputs {
  _call: StartSurveyingCall;

  constructor(call: StartSurveyingCall) {
    this._call = call;
  }

  get _realmId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class StartSurveyingCall__Outputs {
  _call: StartSurveyingCall;

  constructor(call: StartSurveyingCall) {
    this._call = call;
  }
}

export class AddUpgradeQueueLengthCall extends ethereum.Call {
  get inputs(): AddUpgradeQueueLengthCall__Inputs {
    return new AddUpgradeQueueLengthCall__Inputs(this);
  }

  get outputs(): AddUpgradeQueueLengthCall__Outputs {
    return new AddUpgradeQueueLengthCall__Outputs(this);
  }
}

export class AddUpgradeQueueLengthCall__Inputs {
  _call: AddUpgradeQueueLengthCall;

  constructor(call: AddUpgradeQueueLengthCall) {
    this._call = call;
  }

  get _realmId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class AddUpgradeQueueLengthCall__Outputs {
  _call: AddUpgradeQueueLengthCall;

  constructor(call: AddUpgradeQueueLengthCall) {
    this._call = call;
  }
}

export class EquipInstallationCall extends ethereum.Call {
  get inputs(): EquipInstallationCall__Inputs {
    return new EquipInstallationCall__Inputs(this);
  }

  get outputs(): EquipInstallationCall__Outputs {
    return new EquipInstallationCall__Outputs(this);
  }
}

export class EquipInstallationCall__Inputs {
  _call: EquipInstallationCall;

  constructor(call: EquipInstallationCall) {
    this._call = call;
  }

  get _realmId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _gotchiId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _installationId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _x(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _y(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get _signature(): Bytes {
    return this._call.inputValues[5].value.toBytes();
  }
}

export class EquipInstallationCall__Outputs {
  _call: EquipInstallationCall;

  constructor(call: EquipInstallationCall) {
    this._call = call;
  }
}

export class EquipTileCall extends ethereum.Call {
  get inputs(): EquipTileCall__Inputs {
    return new EquipTileCall__Inputs(this);
  }

  get outputs(): EquipTileCall__Outputs {
    return new EquipTileCall__Outputs(this);
  }
}

export class EquipTileCall__Inputs {
  _call: EquipTileCall;

  constructor(call: EquipTileCall) {
    this._call = call;
  }

  get _realmId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _gotchiId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _tileId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _x(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _y(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get _signature(): Bytes {
    return this._call.inputValues[5].value.toBytes();
  }
}

export class EquipTileCall__Outputs {
  _call: EquipTileCall;

  constructor(call: EquipTileCall) {
    this._call = call;
  }
}

export class FixGridCall extends ethereum.Call {
  get inputs(): FixGridCall__Inputs {
    return new FixGridCall__Inputs(this);
  }

  get outputs(): FixGridCall__Outputs {
    return new FixGridCall__Outputs(this);
  }
}

export class FixGridCall__Inputs {
  _call: FixGridCall;

  constructor(call: FixGridCall) {
    this._call = call;
  }

  get _realmId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _installationId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _x(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }

  get _y(): Array<BigInt> {
    return this._call.inputValues[3].value.toBigIntArray();
  }

  get tile(): boolean {
    return this._call.inputValues[4].value.toBoolean();
  }
}

export class FixGridCall__Outputs {
  _call: FixGridCall;

  constructor(call: FixGridCall) {
    this._call = call;
  }
}

export class MintParcelsCall extends ethereum.Call {
  get inputs(): MintParcelsCall__Inputs {
    return new MintParcelsCall__Inputs(this);
  }

  get outputs(): MintParcelsCall__Outputs {
    return new MintParcelsCall__Outputs(this);
  }
}

export class MintParcelsCall__Inputs {
  _call: MintParcelsCall;

  constructor(call: MintParcelsCall) {
    this._call = call;
  }

  get _to(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get _tokenIds(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }

  get _metadata(): Array<MintParcelsCall_metadataStruct> {
    return this._call.inputValues[2].value.toTupleArray<
      MintParcelsCall_metadataStruct
    >();
  }
}

export class MintParcelsCall__Outputs {
  _call: MintParcelsCall;

  constructor(call: MintParcelsCall) {
    this._call = call;
  }
}

export class MintParcelsCall_metadataStruct extends ethereum.Tuple {
  get coordinateX(): BigInt {
    return this[0].toBigInt();
  }

  get coordinateY(): BigInt {
    return this[1].toBigInt();
  }

  get district(): BigInt {
    return this[2].toBigInt();
  }

  get parcelId(): string {
    return this[3].toString();
  }

  get parcelAddress(): string {
    return this[4].toString();
  }

  get size(): BigInt {
    return this[5].toBigInt();
  }

  get boost(): Array<BigInt> {
    return this[6].toBigIntArray();
  }
}

export class MoveInstallationCall extends ethereum.Call {
  get inputs(): MoveInstallationCall__Inputs {
    return new MoveInstallationCall__Inputs(this);
  }

  get outputs(): MoveInstallationCall__Outputs {
    return new MoveInstallationCall__Outputs(this);
  }
}

export class MoveInstallationCall__Inputs {
  _call: MoveInstallationCall;

  constructor(call: MoveInstallationCall) {
    this._call = call;
  }

  get _realmId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _installationId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _x0(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _y0(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _x1(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get _y1(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }
}

export class MoveInstallationCall__Outputs {
  _call: MoveInstallationCall;

  constructor(call: MoveInstallationCall) {
    this._call = call;
  }
}

export class MoveTileCall extends ethereum.Call {
  get inputs(): MoveTileCall__Inputs {
    return new MoveTileCall__Inputs(this);
  }

  get outputs(): MoveTileCall__Outputs {
    return new MoveTileCall__Outputs(this);
  }
}

export class MoveTileCall__Inputs {
  _call: MoveTileCall;

  constructor(call: MoveTileCall) {
    this._call = call;
  }

  get _realmId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _tileId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _x0(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _y0(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _x1(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get _y1(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }
}

export class MoveTileCall__Outputs {
  _call: MoveTileCall;

  constructor(call: MoveTileCall) {
    this._call = call;
  }
}

export class SetFreezeBuildingCall extends ethereum.Call {
  get inputs(): SetFreezeBuildingCall__Inputs {
    return new SetFreezeBuildingCall__Inputs(this);
  }

  get outputs(): SetFreezeBuildingCall__Outputs {
    return new SetFreezeBuildingCall__Outputs(this);
  }
}

export class SetFreezeBuildingCall__Inputs {
  _call: SetFreezeBuildingCall;

  constructor(call: SetFreezeBuildingCall) {
    this._call = call;
  }

  get _freezeBuilding(): boolean {
    return this._call.inputValues[0].value.toBoolean();
  }
}

export class SetFreezeBuildingCall__Outputs {
  _call: SetFreezeBuildingCall;

  constructor(call: SetFreezeBuildingCall) {
    this._call = call;
  }
}

export class SubUpgradeQueueLengthCall extends ethereum.Call {
  get inputs(): SubUpgradeQueueLengthCall__Inputs {
    return new SubUpgradeQueueLengthCall__Inputs(this);
  }

  get outputs(): SubUpgradeQueueLengthCall__Outputs {
    return new SubUpgradeQueueLengthCall__Outputs(this);
  }
}

export class SubUpgradeQueueLengthCall__Inputs {
  _call: SubUpgradeQueueLengthCall;

  constructor(call: SubUpgradeQueueLengthCall) {
    this._call = call;
  }

  get _realmId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SubUpgradeQueueLengthCall__Outputs {
  _call: SubUpgradeQueueLengthCall;

  constructor(call: SubUpgradeQueueLengthCall) {
    this._call = call;
  }
}

export class UnequipInstallationCall extends ethereum.Call {
  get inputs(): UnequipInstallationCall__Inputs {
    return new UnequipInstallationCall__Inputs(this);
  }

  get outputs(): UnequipInstallationCall__Outputs {
    return new UnequipInstallationCall__Outputs(this);
  }
}

export class UnequipInstallationCall__Inputs {
  _call: UnequipInstallationCall;

  constructor(call: UnequipInstallationCall) {
    this._call = call;
  }

  get _realmId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _gotchiId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _installationId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _x(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _y(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get _signature(): Bytes {
    return this._call.inputValues[5].value.toBytes();
  }
}

export class UnequipInstallationCall__Outputs {
  _call: UnequipInstallationCall;

  constructor(call: UnequipInstallationCall) {
    this._call = call;
  }
}

export class UnequipTileCall extends ethereum.Call {
  get inputs(): UnequipTileCall__Inputs {
    return new UnequipTileCall__Inputs(this);
  }

  get outputs(): UnequipTileCall__Outputs {
    return new UnequipTileCall__Outputs(this);
  }
}

export class UnequipTileCall__Inputs {
  _call: UnequipTileCall;

  constructor(call: UnequipTileCall) {
    this._call = call;
  }

  get _realmId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _gotchiId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _tileId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _x(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _y(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get _signature(): Bytes {
    return this._call.inputValues[5].value.toBytes();
  }
}

export class UnequipTileCall__Outputs {
  _call: UnequipTileCall;

  constructor(call: UnequipTileCall) {
    this._call = call;
  }
}

export class UpgradeInstallationCall extends ethereum.Call {
  get inputs(): UpgradeInstallationCall__Inputs {
    return new UpgradeInstallationCall__Inputs(this);
  }

  get outputs(): UpgradeInstallationCall__Outputs {
    return new UpgradeInstallationCall__Outputs(this);
  }
}

export class UpgradeInstallationCall__Inputs {
  _call: UpgradeInstallationCall;

  constructor(call: UpgradeInstallationCall) {
    this._call = call;
  }

  get _realmId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _prevInstallationId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _nextInstallationId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _coordinateX(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _coordinateY(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }
}

export class UpgradeInstallationCall__Outputs {
  _call: UpgradeInstallationCall;

  constructor(call: UpgradeInstallationCall) {
    this._call = call;
  }
}

export class BatchTransferAlchemica1Call extends ethereum.Call {
  get inputs(): BatchTransferAlchemica1Call__Inputs {
    return new BatchTransferAlchemica1Call__Inputs(this);
  }

  get outputs(): BatchTransferAlchemica1Call__Outputs {
    return new BatchTransferAlchemica1Call__Outputs(this);
  }
}

export class BatchTransferAlchemica1Call__Inputs {
  _call: BatchTransferAlchemica1Call;

  constructor(call: BatchTransferAlchemica1Call) {
    this._call = call;
  }

  get _targets(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get _amounts(): Array<Array<BigInt>> {
    return this._call.inputValues[1].value.toBigIntMatrix();
  }
}

export class BatchTransferAlchemica1Call__Outputs {
  _call: BatchTransferAlchemica1Call;

  constructor(call: BatchTransferAlchemica1Call) {
    this._call = call;
  }
}

export class BatchTransferTokensToGotchis1Call extends ethereum.Call {
  get inputs(): BatchTransferTokensToGotchis1Call__Inputs {
    return new BatchTransferTokensToGotchis1Call__Inputs(this);
  }

  get outputs(): BatchTransferTokensToGotchis1Call__Outputs {
    return new BatchTransferTokensToGotchis1Call__Outputs(this);
  }
}

export class BatchTransferTokensToGotchis1Call__Inputs {
  _call: BatchTransferTokensToGotchis1Call;

  constructor(call: BatchTransferTokensToGotchis1Call) {
    this._call = call;
  }

  get _gotchiIds(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }

  get _tokenAddresses(): Array<Address> {
    return this._call.inputValues[1].value.toAddressArray();
  }

  get _amounts(): Array<Array<BigInt>> {
    return this._call.inputValues[2].value.toBigIntMatrix();
  }
}

export class BatchTransferTokensToGotchis1Call__Outputs {
  _call: BatchTransferTokensToGotchis1Call;

  constructor(call: BatchTransferTokensToGotchis1Call) {
    this._call = call;
  }
}

export class ChannelAlchemica1Call extends ethereum.Call {
  get inputs(): ChannelAlchemica1Call__Inputs {
    return new ChannelAlchemica1Call__Inputs(this);
  }

  get outputs(): ChannelAlchemica1Call__Outputs {
    return new ChannelAlchemica1Call__Outputs(this);
  }
}

export class ChannelAlchemica1Call__Inputs {
  _call: ChannelAlchemica1Call;

  constructor(call: ChannelAlchemica1Call) {
    this._call = call;
  }

  get _realmId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _gotchiId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _lastChanneled(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _signature(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class ChannelAlchemica1Call__Outputs {
  _call: ChannelAlchemica1Call;

  constructor(call: ChannelAlchemica1Call) {
    this._call = call;
  }
}

export class SetChannelingLimits1Call extends ethereum.Call {
  get inputs(): SetChannelingLimits1Call__Inputs {
    return new SetChannelingLimits1Call__Inputs(this);
  }

  get outputs(): SetChannelingLimits1Call__Outputs {
    return new SetChannelingLimits1Call__Outputs(this);
  }
}

export class SetChannelingLimits1Call__Inputs {
  _call: SetChannelingLimits1Call;

  constructor(call: SetChannelingLimits1Call) {
    this._call = call;
  }

  get _altarLevel(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }

  get _limits(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }
}

export class SetChannelingLimits1Call__Outputs {
  _call: SetChannelingLimits1Call;

  constructor(call: SetChannelingLimits1Call) {
    this._call = call;
  }
}

export class SetVars1Call extends ethereum.Call {
  get inputs(): SetVars1Call__Inputs {
    return new SetVars1Call__Inputs(this);
  }

  get outputs(): SetVars1Call__Outputs {
    return new SetVars1Call__Outputs(this);
  }
}

export class SetVars1Call__Inputs {
  _call: SetVars1Call;

  constructor(call: SetVars1Call) {
    this._call = call;
  }

  get _alchemicas(): Array<Array<BigInt>> {
    return this._call.inputValues[0].value.toBigIntMatrix();
  }

  get _boostMultipliers(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }

  get _greatPortalCapacity(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }

  get _installationsDiamond(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _vrfCoordinator(): Address {
    return this._call.inputValues[4].value.toAddress();
  }

  get _linkAddress(): Address {
    return this._call.inputValues[5].value.toAddress();
  }

  get _alchemicaAddresses(): Array<Address> {
    return this._call.inputValues[6].value.toAddressArray();
  }

  get _gltrAddress(): Address {
    return this._call.inputValues[7].value.toAddress();
  }

  get _backendPubKey(): Bytes {
    return this._call.inputValues[8].value.toBytes();
  }

  get _gameManager(): Address {
    return this._call.inputValues[9].value.toAddress();
  }

  get _tileDiamond(): Address {
    return this._call.inputValues[10].value.toAddress();
  }

  get _aavegotchiDiamond(): Address {
    return this._call.inputValues[11].value.toAddress();
  }
}

export class SetVars1Call__Outputs {
  _call: SetVars1Call;

  constructor(call: SetVars1Call) {
    this._call = call;
  }
}

export class ResyncParcelCall extends ethereum.Call {
  get inputs(): ResyncParcelCall__Inputs {
    return new ResyncParcelCall__Inputs(this);
  }

  get outputs(): ResyncParcelCall__Outputs {
    return new ResyncParcelCall__Outputs(this);
  }
}

export class ResyncParcelCall__Inputs {
  _call: ResyncParcelCall;

  constructor(call: ResyncParcelCall) {
    this._call = call;
  }

  get _tokenIds(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }
}

export class ResyncParcelCall__Outputs {
  _call: ResyncParcelCall;

  constructor(call: ResyncParcelCall) {
    this._call = call;
  }
}

export class SetAltarIdCall extends ethereum.Call {
  get inputs(): SetAltarIdCall__Inputs {
    return new SetAltarIdCall__Inputs(this);
  }

  get outputs(): SetAltarIdCall__Outputs {
    return new SetAltarIdCall__Outputs(this);
  }
}

export class SetAltarIdCall__Inputs {
  _call: SetAltarIdCall;

  constructor(call: SetAltarIdCall) {
    this._call = call;
  }

  get _parcelId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _altarId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetAltarIdCall__Outputs {
  _call: SetAltarIdCall;

  constructor(call: SetAltarIdCall) {
    this._call = call;
  }
}

export class SetGameActiveCall extends ethereum.Call {
  get inputs(): SetGameActiveCall__Inputs {
    return new SetGameActiveCall__Inputs(this);
  }

  get outputs(): SetGameActiveCall__Outputs {
    return new SetGameActiveCall__Outputs(this);
  }
}

export class SetGameActiveCall__Inputs {
  _call: SetGameActiveCall;

  constructor(call: SetGameActiveCall) {
    this._call = call;
  }

  get _gameActive(): boolean {
    return this._call.inputValues[0].value.toBoolean();
  }
}

export class SetGameActiveCall__Outputs {
  _call: SetGameActiveCall;

  constructor(call: SetGameActiveCall) {
    this._call = call;
  }
}

export class SetParcelsAccessRightsCall extends ethereum.Call {
  get inputs(): SetParcelsAccessRightsCall__Inputs {
    return new SetParcelsAccessRightsCall__Inputs(this);
  }

  get outputs(): SetParcelsAccessRightsCall__Outputs {
    return new SetParcelsAccessRightsCall__Outputs(this);
  }
}

export class SetParcelsAccessRightsCall__Inputs {
  _call: SetParcelsAccessRightsCall;

  constructor(call: SetParcelsAccessRightsCall) {
    this._call = call;
  }

  get _realmIds(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }

  get _actionRights(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }

  get _accessRights(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }
}

export class SetParcelsAccessRightsCall__Outputs {
  _call: SetParcelsAccessRightsCall;

  constructor(call: SetParcelsAccessRightsCall) {
    this._call = call;
  }
}

export class RawFulfillRandomWordsCall extends ethereum.Call {
  get inputs(): RawFulfillRandomWordsCall__Inputs {
    return new RawFulfillRandomWordsCall__Inputs(this);
  }

  get outputs(): RawFulfillRandomWordsCall__Outputs {
    return new RawFulfillRandomWordsCall__Outputs(this);
  }
}

export class RawFulfillRandomWordsCall__Inputs {
  _call: RawFulfillRandomWordsCall;

  constructor(call: RawFulfillRandomWordsCall) {
    this._call = call;
  }

  get requestId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get randomWords(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }
}

export class RawFulfillRandomWordsCall__Outputs {
  _call: RawFulfillRandomWordsCall;

  constructor(call: RawFulfillRandomWordsCall) {
    this._call = call;
  }
}

export class SetConfigCall extends ethereum.Call {
  get inputs(): SetConfigCall__Inputs {
    return new SetConfigCall__Inputs(this);
  }

  get outputs(): SetConfigCall__Outputs {
    return new SetConfigCall__Outputs(this);
  }
}

export class SetConfigCall__Inputs {
  _call: SetConfigCall;

  constructor(call: SetConfigCall) {
    this._call = call;
  }

  get _requestConfig(): SetConfigCall_requestConfigStruct {
    return changetype<SetConfigCall_requestConfigStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }

  get _vrfCoordinator(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class SetConfigCall__Outputs {
  _call: SetConfigCall;

  constructor(call: SetConfigCall) {
    this._call = call;
  }
}

export class SetConfigCall_requestConfigStruct extends ethereum.Tuple {
  get subId(): BigInt {
    return this[0].toBigInt();
  }

  get callbackGasLimit(): BigInt {
    return this[1].toBigInt();
  }

  get requestConfirmations(): i32 {
    return this[2].toI32();
  }

  get numWords(): BigInt {
    return this[3].toBigInt();
  }

  get keyHash(): Bytes {
    return this[4].toBytes();
  }
}

export class SubscribeCall extends ethereum.Call {
  get inputs(): SubscribeCall__Inputs {
    return new SubscribeCall__Inputs(this);
  }

  get outputs(): SubscribeCall__Outputs {
    return new SubscribeCall__Outputs(this);
  }
}

export class SubscribeCall__Inputs {
  _call: SubscribeCall;

  constructor(call: SubscribeCall) {
    this._call = call;
  }
}

export class SubscribeCall__Outputs {
  _call: SubscribeCall;

  constructor(call: SubscribeCall) {
    this._call = call;
  }
}

export class TopUpSubscriptionCall extends ethereum.Call {
  get inputs(): TopUpSubscriptionCall__Inputs {
    return new TopUpSubscriptionCall__Inputs(this);
  }

  get outputs(): TopUpSubscriptionCall__Outputs {
    return new TopUpSubscriptionCall__Outputs(this);
  }
}

export class TopUpSubscriptionCall__Inputs {
  _call: TopUpSubscriptionCall;

  constructor(call: TopUpSubscriptionCall) {
    this._call = call;
  }

  get amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class TopUpSubscriptionCall__Outputs {
  _call: TopUpSubscriptionCall;

  constructor(call: TopUpSubscriptionCall) {
    this._call = call;
  }
}
