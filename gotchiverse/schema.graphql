type Player @entity {
    "player address"
    id: ID!
    parcels: [Parcel!]! @derivedFrom(field: "owner")
    parcelsCount: Int!
    installations: [Installation!]! @derivedFrom(field: "owner")
    tiles: [Tile!]! @derivedFrom(field: "owner")
}

type Parcel @entity {
    "parcel token id"
    id: ID!
    tokenId: BigInt!
    parcelId: String
    parcelHash: String
    owner: Player
    district: BigInt
    size: BigInt
    coordinateX: BigInt
    coordinateY: BigInt

    lastChanneled: Int
    lastClaimed: Int

    fudBoost: BigInt
    fomoBoost: BigInt
    alphaBoost: BigInt
    kekBoost: BigInt

    "parcel current alchemica"
    alchemica: [BigInt!]!

    surveys: [Survey!] @derivedFrom(field: "parcel")
    installations: [Installation!]!
    tiles: [Tile!]!

    auctionId: String
    timesTraded: BigInt!
    historicalPrices: [BigInt!]
    listings: [ERC721Listing!] @derivedFrom(field: "parcel")
    activeListing: BigInt
}

type Survey @entity {
    id: ID!
    surveyed: Bytes! # address
    parcel: Parcel!
    round: Int!
    fud: BigInt!
    fomo: BigInt!
    alpha: BigInt!
    kek: BigInt!
}

type Installation @entity {
    id: ID!
    installationId: Int!
    equipped: Boolean!
    parcel: Parcel
    owner: Player!
    x: Int!
    y: Int!
}

type Tile @entity {
    id: ID!
    tileId: Int!
    equipped: Boolean!
    parcel: Parcel
    owner: Player!
    x: Int!
    y: Int!
}

type Gotchi @entity {
    id: ID!
    lastChanneled: Int!
}

type ERC721Listing @entity {
    id: ID!
    category: BigInt! # 0 = Closed Portal, 1 = VRF Pending, 2 = Open Portal, 3 = Aavegotchi
    erc721TokenAddress: Bytes! # The token address of the NFT
    tokenId: BigInt! # The token ID of the NFT
    seller: Bytes! # The creator of the listing
    buyer: Bytes
    recipient: Bytes
    timeCreated: BigInt! # Time at which listed was created
    timePurchased: BigInt # Time when the listing was purchased
    cancelled: Boolean # If the listing is cancelled
    priceInWei: BigInt! # How much the listing is (in GHST)
    parcel: Parcel # if the listing is for a parcel, this will be populated
    blockCreated: BigInt!

    fudBoost: BigInt # boost of parcels
    fomoBoost: BigInt # boost of parcels
    alphaBoost: BigInt # boost of parcels
    kekBoost: BigInt # boost of parcels
    district: BigInt # district of parcel
    coordinateX: BigInt # coordinate x of parcel
    coordinateY: BigInt # coordinate y of parcel
    size: BigInt # size of parcel
    parcelHash: String # address/hash of parcel
    nameLowerCase: String
    amountEquippedWearables: Int
    soldBefore: Boolean
    claimedAt: BigInt
}
