// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class PetOperatorApprovalForAll extends ethereum.Event {
  get params(): PetOperatorApprovalForAll__Params {
    return new PetOperatorApprovalForAll__Params(this);
  }
}

export class PetOperatorApprovalForAll__Params {
  _event: PetOperatorApprovalForAll;

  constructor(event: PetOperatorApprovalForAll) {
    this._event = event;
  }

  get _owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _operator(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _approved(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }
}

export class ClaimAavegotchi extends ethereum.Event {
  get params(): ClaimAavegotchi__Params {
    return new ClaimAavegotchi__Params(this);
  }
}

export class ClaimAavegotchi__Params {
  _event: ClaimAavegotchi;

  constructor(event: ClaimAavegotchi) {
    this._event = event;
  }

  get _tokenId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class LockAavegotchi extends ethereum.Event {
  get params(): LockAavegotchi__Params {
    return new LockAavegotchi__Params(this);
  }
}

export class LockAavegotchi__Params {
  _event: LockAavegotchi;

  constructor(event: LockAavegotchi) {
    this._event = event;
  }

  get _tokenId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _time(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class SetAavegotchiName extends ethereum.Event {
  get params(): SetAavegotchiName__Params {
    return new SetAavegotchiName__Params(this);
  }
}

export class SetAavegotchiName__Params {
  _event: SetAavegotchiName;

  constructor(event: SetAavegotchiName) {
    this._event = event;
  }

  get _tokenId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _oldName(): string {
    return this._event.parameters[1].value.toString();
  }

  get _newName(): string {
    return this._event.parameters[2].value.toString();
  }
}

export class SetBatchId extends ethereum.Event {
  get params(): SetBatchId__Params {
    return new SetBatchId__Params(this);
  }
}

export class SetBatchId__Params {
  _event: SetBatchId;

  constructor(event: SetBatchId) {
    this._event = event;
  }

  get _batchId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get tokenIds(): Array<BigInt> {
    return this._event.parameters[1].value.toBigIntArray();
  }
}

export class SpendSkillpoints extends ethereum.Event {
  get params(): SpendSkillpoints__Params {
    return new SpendSkillpoints__Params(this);
  }
}

export class SpendSkillpoints__Params {
  _event: SpendSkillpoints;

  constructor(event: SpendSkillpoints) {
    this._event = event;
  }

  get _tokenId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _values(): Array<i32> {
    return this._event.parameters[1].value.toI32Array();
  }
}

export class UnLockAavegotchi extends ethereum.Event {
  get params(): UnLockAavegotchi__Params {
    return new UnLockAavegotchi__Params(this);
  }
}

export class UnLockAavegotchi__Params {
  _event: UnLockAavegotchi;

  constructor(event: UnLockAavegotchi) {
    this._event = event;
  }

  get _tokenId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _time(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class AddedAavegotchiBatch extends ethereum.Event {
  get params(): AddedAavegotchiBatch__Params {
    return new AddedAavegotchiBatch__Params(this);
  }
}

export class AddedAavegotchiBatch__Params {
  _event: AddedAavegotchiBatch;

  constructor(event: AddedAavegotchiBatch) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get tokenIds(): Array<BigInt> {
    return this._event.parameters[1].value.toBigIntArray();
  }
}

export class AddedItemsBatch extends ethereum.Event {
  get params(): AddedItemsBatch__Params {
    return new AddedItemsBatch__Params(this);
  }
}

export class AddedItemsBatch__Params {
  _event: AddedItemsBatch;

  constructor(event: AddedItemsBatch) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get ids(): Array<BigInt> {
    return this._event.parameters[1].value.toBigIntArray();
  }

  get values(): Array<BigInt> {
    return this._event.parameters[2].value.toBigIntArray();
  }
}

export class WithdrawnBatch extends ethereum.Event {
  get params(): WithdrawnBatch__Params {
    return new WithdrawnBatch__Params(this);
  }
}

export class WithdrawnBatch__Params {
  _event: WithdrawnBatch;

  constructor(event: WithdrawnBatch) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get tokenIds(): Array<BigInt> {
    return this._event.parameters[1].value.toBigIntArray();
  }
}

export class WithdrawnItems extends ethereum.Event {
  get params(): WithdrawnItems__Params {
    return new WithdrawnItems__Params(this);
  }
}

export class WithdrawnItems__Params {
  _event: WithdrawnItems;

  constructor(event: WithdrawnItems) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get ids(): Array<BigInt> {
    return this._event.parameters[1].value.toBigIntArray();
  }

  get values(): Array<BigInt> {
    return this._event.parameters[2].value.toBigIntArray();
  }
}

export class DecreaseStake extends ethereum.Event {
  get params(): DecreaseStake__Params {
    return new DecreaseStake__Params(this);
  }
}

export class DecreaseStake__Params {
  _event: DecreaseStake;

  constructor(event: DecreaseStake) {
    this._event = event;
  }

  get _tokenId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _reduceAmount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class ExperienceTransfer extends ethereum.Event {
  get params(): ExperienceTransfer__Params {
    return new ExperienceTransfer__Params(this);
  }
}

export class ExperienceTransfer__Params {
  _event: ExperienceTransfer;

  constructor(event: ExperienceTransfer) {
    this._event = event;
  }

  get _fromTokenId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _toTokenId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get experience(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class IncreaseStake extends ethereum.Event {
  get params(): IncreaseStake__Params {
    return new IncreaseStake__Params(this);
  }
}

export class IncreaseStake__Params {
  _event: IncreaseStake;

  constructor(event: IncreaseStake) {
    this._event = event;
  }

  get _tokenId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _stakeAmount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class AddCollateralType extends ethereum.Event {
  get params(): AddCollateralType__Params {
    return new AddCollateralType__Params(this);
  }
}

export class AddCollateralType__Params {
  _event: AddCollateralType;

  constructor(event: AddCollateralType) {
    this._event = event;
  }

  get _collateralType(): AddCollateralType_collateralTypeStruct {
    return changetype<AddCollateralType_collateralTypeStruct>(
      this._event.parameters[0].value.toTuple()
    );
  }
}

export class AddCollateralType_collateralTypeStruct extends ethereum.Tuple {
  get collateralType(): Address {
    return this[0].toAddress();
  }

  get collateralTypeInfo(): AddCollateralType_collateralTypeCollateralTypeInfoStruct {
    return changetype<AddCollateralType_collateralTypeCollateralTypeInfoStruct>(
      this[1].toTuple()
    );
  }
}

export class AddCollateralType_collateralTypeCollateralTypeInfoStruct extends ethereum.Tuple {
  get modifiers(): Array<i32> {
    return this[0].toI32Array();
  }

  get primaryColor(): Bytes {
    return this[1].toBytes();
  }

  get secondaryColor(): Bytes {
    return this[2].toBytes();
  }

  get cheekColor(): Bytes {
    return this[3].toBytes();
  }

  get svgId(): i32 {
    return this[4].toI32();
  }

  get eyeShapeSvgId(): i32 {
    return this[5].toI32();
  }

  get conversionRate(): i32 {
    return this[6].toI32();
  }

  get delisted(): boolean {
    return this[7].toBoolean();
  }
}

export class AddItemType extends ethereum.Event {
  get params(): AddItemType__Params {
    return new AddItemType__Params(this);
  }
}

export class AddItemType__Params {
  _event: AddItemType;

  constructor(event: AddItemType) {
    this._event = event;
  }

  get _itemType(): AddItemType_itemTypeStruct {
    return changetype<AddItemType_itemTypeStruct>(
      this._event.parameters[0].value.toTuple()
    );
  }
}

export class AddItemType_itemTypeStruct extends ethereum.Tuple {
  get name(): string {
    return this[0].toString();
  }

  get description(): string {
    return this[1].toString();
  }

  get author(): string {
    return this[2].toString();
  }

  get traitModifiers(): Array<i32> {
    return this[3].toI32Array();
  }

  get slotPositions(): Array<boolean> {
    return this[4].toBooleanArray();
  }

  get allowedCollaterals(): Array<i32> {
    return this[5].toI32Array();
  }

  get dimensions(): AddItemType_itemTypeDimensionsStruct {
    return changetype<AddItemType_itemTypeDimensionsStruct>(this[6].toTuple());
  }

  get ghstPrice(): BigInt {
    return this[7].toBigInt();
  }

  get maxQuantity(): BigInt {
    return this[8].toBigInt();
  }

  get totalQuantity(): BigInt {
    return this[9].toBigInt();
  }

  get svgId(): BigInt {
    return this[10].toBigInt();
  }

  get rarityScoreModifier(): i32 {
    return this[11].toI32();
  }

  get canPurchaseWithGhst(): boolean {
    return this[12].toBoolean();
  }

  get minLevel(): i32 {
    return this[13].toI32();
  }

  get canBeTransferred(): boolean {
    return this[14].toBoolean();
  }

  get category(): i32 {
    return this[15].toI32();
  }

  get kinshipBonus(): i32 {
    return this[16].toI32();
  }

  get experienceBonus(): BigInt {
    return this[17].toBigInt();
  }
}

export class AddItemType_itemTypeDimensionsStruct extends ethereum.Tuple {
  get x(): i32 {
    return this[0].toI32();
  }

  get y(): i32 {
    return this[1].toI32();
  }

  get width(): i32 {
    return this[2].toI32();
  }

  get height(): i32 {
    return this[3].toI32();
  }
}

export class AddWearableSet extends ethereum.Event {
  get params(): AddWearableSet__Params {
    return new AddWearableSet__Params(this);
  }
}

export class AddWearableSet__Params {
  _event: AddWearableSet;

  constructor(event: AddWearableSet) {
    this._event = event;
  }

  get _wearableSet(): AddWearableSet_wearableSetStruct {
    return changetype<AddWearableSet_wearableSetStruct>(
      this._event.parameters[0].value.toTuple()
    );
  }
}

export class AddWearableSet_wearableSetStruct extends ethereum.Tuple {
  get name(): string {
    return this[0].toString();
  }

  get allowedCollaterals(): Array<i32> {
    return this[1].toI32Array();
  }

  get wearableIds(): Array<i32> {
    return this[2].toI32Array();
  }

  get traitsBonuses(): Array<i32> {
    return this[3].toI32Array();
  }
}

export class CreateHaunt extends ethereum.Event {
  get params(): CreateHaunt__Params {
    return new CreateHaunt__Params(this);
  }
}

export class CreateHaunt__Params {
  _event: CreateHaunt;

  constructor(event: CreateHaunt) {
    this._event = event;
  }

  get _hauntId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _hauntMaxSize(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get _portalPrice(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get _bodyColor(): Bytes {
    return this._event.parameters[3].value.toBytes();
  }
}

export class DaoTransferred extends ethereum.Event {
  get params(): DaoTransferred__Params {
    return new DaoTransferred__Params(this);
  }
}

export class DaoTransferred__Params {
  _event: DaoTransferred;

  constructor(event: DaoTransferred) {
    this._event = event;
  }

  get previousDao(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newDao(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class DaoTreasuryTransferred extends ethereum.Event {
  get params(): DaoTreasuryTransferred__Params {
    return new DaoTreasuryTransferred__Params(this);
  }
}

export class DaoTreasuryTransferred__Params {
  _event: DaoTreasuryTransferred;

  constructor(event: DaoTreasuryTransferred) {
    this._event = event;
  }

  get previousDaoTreasury(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newDaoTreasury(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class GameManagerAdded extends ethereum.Event {
  get params(): GameManagerAdded__Params {
    return new GameManagerAdded__Params(this);
  }
}

export class GameManagerAdded__Params {
  _event: GameManagerAdded;

  constructor(event: GameManagerAdded) {
    this._event = event;
  }

  get gameManager_(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get limit_(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get refreshTime_(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class GameManagerRemoved extends ethereum.Event {
  get params(): GameManagerRemoved__Params {
    return new GameManagerRemoved__Params(this);
  }
}

export class GameManagerRemoved__Params {
  _event: GameManagerRemoved;

  constructor(event: GameManagerRemoved) {
    this._event = event;
  }

  get gameManager_(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class GrantExperience extends ethereum.Event {
  get params(): GrantExperience__Params {
    return new GrantExperience__Params(this);
  }
}

export class GrantExperience__Params {
  _event: GrantExperience;

  constructor(event: GrantExperience) {
    this._event = event;
  }

  get _tokenIds(): Array<BigInt> {
    return this._event.parameters[0].value.toBigIntArray();
  }

  get _xpValues(): Array<BigInt> {
    return this._event.parameters[1].value.toBigIntArray();
  }
}

export class ItemManagerAdded extends ethereum.Event {
  get params(): ItemManagerAdded__Params {
    return new ItemManagerAdded__Params(this);
  }
}

export class ItemManagerAdded__Params {
  _event: ItemManagerAdded;

  constructor(event: ItemManagerAdded) {
    this._event = event;
  }

  get newItemManager_(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class ItemManagerRemoved extends ethereum.Event {
  get params(): ItemManagerRemoved__Params {
    return new ItemManagerRemoved__Params(this);
  }
}

export class ItemManagerRemoved__Params {
  _event: ItemManagerRemoved;

  constructor(event: ItemManagerRemoved) {
    this._event = event;
  }

  get itemManager_(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class ItemModifiersSet extends ethereum.Event {
  get params(): ItemModifiersSet__Params {
    return new ItemModifiersSet__Params(this);
  }
}

export class ItemModifiersSet__Params {
  _event: ItemModifiersSet;

  constructor(event: ItemModifiersSet) {
    this._event = event;
  }

  get _wearableId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _traitModifiers(): Array<i32> {
    return this._event.parameters[1].value.toI32Array();
  }

  get _rarityScoreModifier(): i32 {
    return this._event.parameters[2].value.toI32();
  }
}

export class ItemTypeMaxQuantity extends ethereum.Event {
  get params(): ItemTypeMaxQuantity__Params {
    return new ItemTypeMaxQuantity__Params(this);
  }
}

export class ItemTypeMaxQuantity__Params {
  _event: ItemTypeMaxQuantity;

  constructor(event: ItemTypeMaxQuantity) {
    this._event = event;
  }

  get _itemIds(): Array<BigInt> {
    return this._event.parameters[0].value.toBigIntArray();
  }

  get _maxQuanities(): Array<BigInt> {
    return this._event.parameters[1].value.toBigIntArray();
  }
}

export class RemoveExperience extends ethereum.Event {
  get params(): RemoveExperience__Params {
    return new RemoveExperience__Params(this);
  }
}

export class RemoveExperience__Params {
  _event: RemoveExperience;

  constructor(event: RemoveExperience) {
    this._event = event;
  }

  get _tokenIds(): Array<BigInt> {
    return this._event.parameters[0].value.toBigIntArray();
  }

  get _xpValues(): Array<BigInt> {
    return this._event.parameters[1].value.toBigIntArray();
  }
}

export class UpdateCollateralModifiers extends ethereum.Event {
  get params(): UpdateCollateralModifiers__Params {
    return new UpdateCollateralModifiers__Params(this);
  }
}

export class UpdateCollateralModifiers__Params {
  _event: UpdateCollateralModifiers;

  constructor(event: UpdateCollateralModifiers) {
    this._event = event;
  }

  get _oldModifiers(): Array<i32> {
    return this._event.parameters[0].value.toI32Array();
  }

  get _newModifiers(): Array<i32> {
    return this._event.parameters[1].value.toI32Array();
  }
}

export class UpdateWearableSet extends ethereum.Event {
  get params(): UpdateWearableSet__Params {
    return new UpdateWearableSet__Params(this);
  }
}

export class UpdateWearableSet__Params {
  _event: UpdateWearableSet;

  constructor(event: UpdateWearableSet) {
    this._event = event;
  }

  get _setId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _wearableSet(): UpdateWearableSet_wearableSetStruct {
    return changetype<UpdateWearableSet_wearableSetStruct>(
      this._event.parameters[1].value.toTuple()
    );
  }
}

export class UpdateWearableSet_wearableSetStruct extends ethereum.Tuple {
  get name(): string {
    return this[0].toString();
  }

  get allowedCollaterals(): Array<i32> {
    return this[1].toI32Array();
  }

  get wearableIds(): Array<i32> {
    return this[2].toI32Array();
  }

  get traitsBonuses(): Array<i32> {
    return this[3].toI32Array();
  }
}

export class WearableSlotPositionsSet extends ethereum.Event {
  get params(): WearableSlotPositionsSet__Params {
    return new WearableSlotPositionsSet__Params(this);
  }
}

export class WearableSlotPositionsSet__Params {
  _event: WearableSlotPositionsSet;

  constructor(event: WearableSlotPositionsSet) {
    this._event = event;
  }

  get _wearableId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _slotPositions(): Array<boolean> {
    return this._event.parameters[1].value.toBooleanArray();
  }
}

export class ChangedListingFee extends ethereum.Event {
  get params(): ChangedListingFee__Params {
    return new ChangedListingFee__Params(this);
  }
}

export class ChangedListingFee__Params {
  _event: ChangedListingFee;

  constructor(event: ChangedListingFee) {
    this._event = event;
  }

  get listingFeeInWei(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class ERC1155ExecutedListing extends ethereum.Event {
  get params(): ERC1155ExecutedListing__Params {
    return new ERC1155ExecutedListing__Params(this);
  }
}

export class ERC1155ExecutedListing__Params {
  _event: ERC1155ExecutedListing;

  constructor(event: ERC1155ExecutedListing) {
    this._event = event;
  }

  get listingId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get seller(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get buyer(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get erc1155TokenAddress(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get erc1155TypeId(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get category(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get _quantity(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get priceInWei(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }

  get time(): BigInt {
    return this._event.parameters[8].value.toBigInt();
  }
}

export class ERC1155ListingAdd extends ethereum.Event {
  get params(): ERC1155ListingAdd__Params {
    return new ERC1155ListingAdd__Params(this);
  }
}

export class ERC1155ListingAdd__Params {
  _event: ERC1155ListingAdd;

  constructor(event: ERC1155ListingAdd) {
    this._event = event;
  }

  get listingId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get seller(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get erc1155TokenAddress(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get erc1155TypeId(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get category(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get quantity(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get priceInWei(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get time(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }
}

export class ERC1155ListingCancelled extends ethereum.Event {
  get params(): ERC1155ListingCancelled__Params {
    return new ERC1155ListingCancelled__Params(this);
  }
}

export class ERC1155ListingCancelled__Params {
  _event: ERC1155ListingCancelled;

  constructor(event: ERC1155ListingCancelled) {
    this._event = event;
  }

  get listingId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class ERC721ExecutedListing extends ethereum.Event {
  get params(): ERC721ExecutedListing__Params {
    return new ERC721ExecutedListing__Params(this);
  }
}

export class ERC721ExecutedListing__Params {
  _event: ERC721ExecutedListing;

  constructor(event: ERC721ExecutedListing) {
    this._event = event;
  }

  get listingId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get seller(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get buyer(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get erc721TokenAddress(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get erc721TokenId(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get category(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get priceInWei(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get time(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }
}

export class ERC721ListingAdd extends ethereum.Event {
  get params(): ERC721ListingAdd__Params {
    return new ERC721ListingAdd__Params(this);
  }
}

export class ERC721ListingAdd__Params {
  _event: ERC721ListingAdd;

  constructor(event: ERC721ListingAdd) {
    this._event = event;
  }

  get listingId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get seller(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get erc721TokenAddress(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get erc721TokenId(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get category(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get time(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class Erc20Deposited extends ethereum.Event {
  get params(): Erc20Deposited__Params {
    return new Erc20Deposited__Params(this);
  }
}

export class Erc20Deposited__Params {
  _event: Erc20Deposited;

  constructor(event: Erc20Deposited) {
    this._event = event;
  }

  get _tokenId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _erc20Contract(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _from(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get _to(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get _depositAmount(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class TransferEscrow extends ethereum.Event {
  get params(): TransferEscrow__Params {
    return new TransferEscrow__Params(this);
  }
}

export class TransferEscrow__Params {
  _event: TransferEscrow;

  constructor(event: TransferEscrow) {
    this._event = event;
  }

  get _tokenId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _erc20Contract(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _from(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get _to(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get _transferAmount(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class EquipWearables extends ethereum.Event {
  get params(): EquipWearables__Params {
    return new EquipWearables__Params(this);
  }
}

export class EquipWearables__Params {
  _event: EquipWearables;

  constructor(event: EquipWearables) {
    this._event = event;
  }

  get _tokenId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _oldWearables(): Array<i32> {
    return this._event.parameters[1].value.toI32Array();
  }

  get _newWearables(): Array<i32> {
    return this._event.parameters[2].value.toI32Array();
  }
}

export class TransferToParent extends ethereum.Event {
  get params(): TransferToParent__Params {
    return new TransferToParent__Params(this);
  }
}

export class TransferToParent__Params {
  _event: TransferToParent;

  constructor(event: TransferToParent) {
    this._event = event;
  }

  get _toContract(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _toTokenId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get _tokenTypeId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get _value(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class UseConsumables extends ethereum.Event {
  get params(): UseConsumables__Params {
    return new UseConsumables__Params(this);
  }
}

export class UseConsumables__Params {
  _event: UseConsumables;

  constructor(event: UseConsumables) {
    this._event = event;
  }

  get _tokenId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _itemIds(): Array<BigInt> {
    return this._event.parameters[1].value.toBigIntArray();
  }

  get _quantities(): Array<BigInt> {
    return this._event.parameters[2].value.toBigIntArray();
  }
}

export class MetaTransactionExecuted extends ethereum.Event {
  get params(): MetaTransactionExecuted__Params {
    return new MetaTransactionExecuted__Params(this);
  }
}

export class MetaTransactionExecuted__Params {
  _event: MetaTransactionExecuted;

  constructor(event: MetaTransactionExecuted) {
    this._event = event;
  }

  get userAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get relayerAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get functionSignature(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class BuyPortals extends ethereum.Event {
  get params(): BuyPortals__Params {
    return new BuyPortals__Params(this);
  }
}

export class BuyPortals__Params {
  _event: BuyPortals;

  constructor(event: BuyPortals) {
    this._event = event;
  }

  get _from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _to(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get _numAavegotchisToPurchase(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get _totalPrice(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class Xingyun extends ethereum.Event {
  get params(): Xingyun__Params {
    return new Xingyun__Params(this);
  }
}

export class Xingyun__Params {
  _event: Xingyun;

  constructor(event: Xingyun) {
    this._event = event;
  }

  get _from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _to(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get _numAavegotchisToPurchase(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get _totalPrice(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class MintPortals extends ethereum.Event {
  get params(): MintPortals__Params {
    return new MintPortals__Params(this);
  }
}

export class MintPortals__Params {
  _event: MintPortals;

  constructor(event: MintPortals) {
    this._event = event;
  }

  get _from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _to(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get _numAavegotchisToPurchase(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get _hauntId(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class PurchaseItemsWithGhst extends ethereum.Event {
  get params(): PurchaseItemsWithGhst__Params {
    return new PurchaseItemsWithGhst__Params(this);
  }
}

export class PurchaseItemsWithGhst__Params {
  _event: PurchaseItemsWithGhst;

  constructor(event: PurchaseItemsWithGhst) {
    this._event = event;
  }

  get _buyer(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _to(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _itemIds(): Array<BigInt> {
    return this._event.parameters[2].value.toBigIntArray();
  }

  get _quantities(): Array<BigInt> {
    return this._event.parameters[3].value.toBigIntArray();
  }

  get _totalPrice(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class PurchaseItemsWithVouchers extends ethereum.Event {
  get params(): PurchaseItemsWithVouchers__Params {
    return new PurchaseItemsWithVouchers__Params(this);
  }
}

export class PurchaseItemsWithVouchers__Params {
  _event: PurchaseItemsWithVouchers;

  constructor(event: PurchaseItemsWithVouchers) {
    this._event = event;
  }

  get _buyer(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _to(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _itemIds(): Array<BigInt> {
    return this._event.parameters[2].value.toBigIntArray();
  }

  get _quantities(): Array<BigInt> {
    return this._event.parameters[3].value.toBigIntArray();
  }
}

export class PurchaseTransferItemsWithGhst extends ethereum.Event {
  get params(): PurchaseTransferItemsWithGhst__Params {
    return new PurchaseTransferItemsWithGhst__Params(this);
  }
}

export class PurchaseTransferItemsWithGhst__Params {
  _event: PurchaseTransferItemsWithGhst;

  constructor(event: PurchaseTransferItemsWithGhst) {
    this._event = event;
  }

  get _buyer(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _to(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _itemIds(): Array<BigInt> {
    return this._event.parameters[2].value.toBigIntArray();
  }

  get _quantities(): Array<BigInt> {
    return this._event.parameters[3].value.toBigIntArray();
  }

  get _totalPrice(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class OpenPortals extends ethereum.Event {
  get params(): OpenPortals__Params {
    return new OpenPortals__Params(this);
  }
}

export class OpenPortals__Params {
  _event: OpenPortals;

  constructor(event: OpenPortals) {
    this._event = event;
  }

  get _tokenIds(): Array<BigInt> {
    return this._event.parameters[0].value.toBigIntArray();
  }
}

export class PortalOpened extends ethereum.Event {
  get params(): PortalOpened__Params {
    return new PortalOpened__Params(this);
  }
}

export class PortalOpened__Params {
  _event: PortalOpened;

  constructor(event: PortalOpened) {
    this._event = event;
  }

  get tokenId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class VrfRandomNumber extends ethereum.Event {
  get params(): VrfRandomNumber__Params {
    return new VrfRandomNumber__Params(this);
  }
}

export class VrfRandomNumber__Params {
  _event: VrfRandomNumber;

  constructor(event: VrfRandomNumber) {
    this._event = event;
  }

  get tokenId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get randomNumber(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get _vrfTimeSet(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class MigrateVouchers extends ethereum.Event {
  get params(): MigrateVouchers__Params {
    return new MigrateVouchers__Params(this);
  }
}

export class MigrateVouchers__Params {
  _event: MigrateVouchers;

  constructor(event: MigrateVouchers) {
    this._event = event;
  }

  get _owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _ids(): Array<BigInt> {
    return this._event.parameters[1].value.toBigIntArray();
  }

  get _values(): Array<BigInt> {
    return this._event.parameters[2].value.toBigIntArray();
  }
}

export class AavegotchiInteract extends ethereum.Event {
  get params(): AavegotchiInteract__Params {
    return new AavegotchiInteract__Params(this);
  }
}

export class AavegotchiInteract__Params {
  _event: AavegotchiInteract;

  constructor(event: AavegotchiInteract) {
    this._event = event;
  }

  get _tokenId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get kinship(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class ERC1155ListingCancelled1 extends ethereum.Event {
  get params(): ERC1155ListingCancelled1__Params {
    return new ERC1155ListingCancelled1__Params(this);
  }
}

export class ERC1155ListingCancelled1__Params {
  _event: ERC1155ListingCancelled1;

  constructor(event: ERC1155ListingCancelled1) {
    this._event = event;
  }

  get listingId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get category(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get time(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class ERC1155ListingRemoved extends ethereum.Event {
  get params(): ERC1155ListingRemoved__Params {
    return new ERC1155ListingRemoved__Params(this);
  }
}

export class ERC1155ListingRemoved__Params {
  _event: ERC1155ListingRemoved;

  constructor(event: ERC1155ListingRemoved) {
    this._event = event;
  }

  get listingId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get category(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get time(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class UpdateERC1155Listing extends ethereum.Event {
  get params(): UpdateERC1155Listing__Params {
    return new UpdateERC1155Listing__Params(this);
  }
}

export class UpdateERC1155Listing__Params {
  _event: UpdateERC1155Listing;

  constructor(event: UpdateERC1155Listing) {
    this._event = event;
  }

  get listingId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get quantity(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get priceInWei(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get time(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class ERC721ListingCancelled extends ethereum.Event {
  get params(): ERC721ListingCancelled__Params {
    return new ERC721ListingCancelled__Params(this);
  }
}

export class ERC721ListingCancelled__Params {
  _event: ERC721ListingCancelled;

  constructor(event: ERC721ListingCancelled) {
    this._event = event;
  }

  get listingId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get category(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get time(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class ERC721ListingRemoved extends ethereum.Event {
  get params(): ERC721ListingRemoved__Params {
    return new ERC721ListingRemoved__Params(this);
  }
}

export class ERC721ListingRemoved__Params {
  _event: ERC721ListingRemoved;

  constructor(event: ERC721ListingRemoved) {
    this._event = event;
  }

  get listingId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get category(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get time(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class StoreSvg extends ethereum.Event {
  get params(): StoreSvg__Params {
    return new StoreSvg__Params(this);
  }
}

export class StoreSvg__Params {
  _event: StoreSvg;

  constructor(event: StoreSvg) {
    this._event = event;
  }

  get _typesAndSizes(): Array<StoreSvg_typesAndSizesStruct> {
    return this._event.parameters[0].value.toTupleArray<
      StoreSvg_typesAndSizesStruct
    >();
  }
}

export class StoreSvg_typesAndSizesStruct extends ethereum.Tuple {
  get svgType(): Bytes {
    return this[0].toBytes();
  }

  get sizes(): Array<BigInt> {
    return this[1].toBigIntArray();
  }
}

export class UpdateSvg extends ethereum.Event {
  get params(): UpdateSvg__Params {
    return new UpdateSvg__Params(this);
  }
}

export class UpdateSvg__Params {
  _event: UpdateSvg;

  constructor(event: UpdateSvg) {
    this._event = event;
  }

  get _typesAndIdsAndSizes(): Array<UpdateSvg_typesAndIdsAndSizesStruct> {
    return this._event.parameters[0].value.toTupleArray<
      UpdateSvg_typesAndIdsAndSizesStruct
    >();
  }
}

export class UpdateSvg_typesAndIdsAndSizesStruct extends ethereum.Tuple {
  get svgType(): Bytes {
    return this[0].toBytes();
  }

  get ids(): Array<BigInt> {
    return this[1].toBigIntArray();
  }

  get sizes(): Array<BigInt> {
    return this[2].toBigIntArray();
  }
}

export class DiamondCut extends ethereum.Event {
  get params(): DiamondCut__Params {
    return new DiamondCut__Params(this);
  }
}

export class DiamondCut__Params {
  _event: DiamondCut;

  constructor(event: DiamondCut) {
    this._event = event;
  }

  get _diamondCut(): Array<DiamondCut_diamondCutStruct> {
    return this._event.parameters[0].value.toTupleArray<
      DiamondCut_diamondCutStruct
    >();
  }

  get _init(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _calldata(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class DiamondCut_diamondCutStruct extends ethereum.Tuple {
  get facetAddress(): Address {
    return this[0].toAddress();
  }

  get action(): i32 {
    return this[1].toI32();
  }

  get functionSelectors(): Array<Bytes> {
    return this[2].toBytesArray();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class ApprovalForAll extends ethereum.Event {
  get params(): ApprovalForAll__Params {
    return new ApprovalForAll__Params(this);
  }
}

export class ApprovalForAll__Params {
  _event: ApprovalForAll;

  constructor(event: ApprovalForAll) {
    this._event = event;
  }

  get _owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _operator(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _approved(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }
}

export class TransferBatch extends ethereum.Event {
  get params(): TransferBatch__Params {
    return new TransferBatch__Params(this);
  }
}

export class TransferBatch__Params {
  _event: TransferBatch;

  constructor(event: TransferBatch) {
    this._event = event;
  }

  get _operator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _from(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _to(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get _ids(): Array<BigInt> {
    return this._event.parameters[3].value.toBigIntArray();
  }

  get _values(): Array<BigInt> {
    return this._event.parameters[4].value.toBigIntArray();
  }
}

export class TransferFromParent extends ethereum.Event {
  get params(): TransferFromParent__Params {
    return new TransferFromParent__Params(this);
  }
}

export class TransferFromParent__Params {
  _event: TransferFromParent;

  constructor(event: TransferFromParent) {
    this._event = event;
  }

  get _fromContract(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _fromTokenId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get _tokenTypeId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get _value(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class TransferSingle extends ethereum.Event {
  get params(): TransferSingle__Params {
    return new TransferSingle__Params(this);
  }
}

export class TransferSingle__Params {
  _event: TransferSingle;

  constructor(event: TransferSingle) {
    this._event = event;
  }

  get _operator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _from(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _to(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get _id(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get _value(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class TransferToParent1 extends ethereum.Event {
  get params(): TransferToParent1__Params {
    return new TransferToParent1__Params(this);
  }
}

export class TransferToParent1__Params {
  _event: TransferToParent1;

  constructor(event: TransferToParent1) {
    this._event = event;
  }

  get _toContract(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _toTokenId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get _tokenTypeId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get _value(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class URI extends ethereum.Event {
  get params(): URI__Params {
    return new URI__Params(this);
  }
}

export class URI__Params {
  _event: URI;

  constructor(event: URI) {
    this._event = event;
  }

  get _value(): string {
    return this._event.parameters[0].value.toString();
  }

  get _id(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Approval extends ethereum.Event {
  get params(): Approval__Params {
    return new Approval__Params(this);
  }
}

export class Approval__Params {
  _event: Approval;

  constructor(event: Approval) {
    this._event = event;
  }

  get _owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _approved(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class ApprovalForAll1 extends ethereum.Event {
  get params(): ApprovalForAll1__Params {
    return new ApprovalForAll1__Params(this);
  }
}

export class ApprovalForAll1__Params {
  _event: ApprovalForAll1;

  constructor(event: ApprovalForAll1) {
    this._event = event;
  }

  get _owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _operator(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _approved(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }
}

export class Transfer extends ethereum.Event {
  get params(): Transfer__Params {
    return new Transfer__Params(this);
  }
}

export class Transfer__Params {
  _event: Transfer;

  constructor(event: Transfer) {
    this._event = event;
  }

  get _from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _to(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class UpdateItemPrice extends ethereum.Event {
  get params(): UpdateItemPrice__Params {
    return new UpdateItemPrice__Params(this);
  }
}

export class UpdateItemPrice__Params {
  _event: UpdateItemPrice;

  constructor(event: UpdateItemPrice) {
    this._event = event;
  }

  get _itemId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _priceInWei(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class GotchiLendingAdd extends ethereum.Event {
  get params(): GotchiLendingAdd__Params {
    return new GotchiLendingAdd__Params(this);
  }
}

export class GotchiLendingAdd__Params {
  _event: GotchiLendingAdd;

  constructor(event: GotchiLendingAdd) {
    this._event = event;
  }

  get listingId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class GotchiLendingEnd extends ethereum.Event {
  get params(): GotchiLendingEnd__Params {
    return new GotchiLendingEnd__Params(this);
  }
}

export class GotchiLendingEnd__Params {
  _event: GotchiLendingEnd;

  constructor(event: GotchiLendingEnd) {
    this._event = event;
  }

  get listingId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class GotchiLendingExecute extends ethereum.Event {
  get params(): GotchiLendingExecute__Params {
    return new GotchiLendingExecute__Params(this);
  }
}

export class GotchiLendingExecute__Params {
  _event: GotchiLendingExecute;

  constructor(event: GotchiLendingExecute) {
    this._event = event;
  }

  get listingId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class WhitelistCreated extends ethereum.Event {
  get params(): WhitelistCreated__Params {
    return new WhitelistCreated__Params(this);
  }
}

export class WhitelistCreated__Params {
  _event: WhitelistCreated;

  constructor(event: WhitelistCreated) {
    this._event = event;
  }

  get whitelistId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class WhitelistUpdated extends ethereum.Event {
  get params(): WhitelistUpdated__Params {
    return new WhitelistUpdated__Params(this);
  }
}

export class WhitelistUpdated__Params {
  _event: WhitelistUpdated;

  constructor(event: WhitelistUpdated) {
    this._event = event;
  }

  get whitelistId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class WhitelistOwnershipTransferred extends ethereum.Event {
  get params(): WhitelistOwnershipTransferred__Params {
    return new WhitelistOwnershipTransferred__Params(this);
  }
}

export class WhitelistOwnershipTransferred__Params {
  _event: WhitelistOwnershipTransferred;

  constructor(event: WhitelistOwnershipTransferred) {
    this._event = event;
  }

  get whitelistId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class GotchiLendingCancel extends ethereum.Event {
  get params(): GotchiLendingCancel__Params {
    return new GotchiLendingCancel__Params(this);
  }
}

export class GotchiLendingCancel__Params {
  _event: GotchiLendingCancel;

  constructor(event: GotchiLendingCancel) {
    this._event = event;
  }

  get listingId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get time(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class GotchiLendingClaim extends ethereum.Event {
  get params(): GotchiLendingClaim__Params {
    return new GotchiLendingClaim__Params(this);
  }
}

export class GotchiLendingClaim__Params {
  _event: GotchiLendingClaim;

  constructor(event: GotchiLendingClaim) {
    this._event = event;
  }

  get listingId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get tokenAddresses(): Array<Address> {
    return this._event.parameters[1].value.toAddressArray();
  }

  get amounts(): Array<BigInt> {
    return this._event.parameters[2].value.toBigIntArray();
  }
}

export class ERC721ExecutedToRecipient extends ethereum.Event {
  get params(): ERC721ExecutedToRecipient__Params {
    return new ERC721ExecutedToRecipient__Params(this);
  }
}

export class ERC721ExecutedToRecipient__Params {
  _event: ERC721ExecutedToRecipient;

  constructor(event: ERC721ExecutedToRecipient) {
    this._event = event;
  }

  get listingId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get buyer(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get recipient(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class ERC1155ExecutedToRecipient extends ethereum.Event {
  get params(): ERC1155ExecutedToRecipient__Params {
    return new ERC1155ExecutedToRecipient__Params(this);
  }
}

export class ERC1155ExecutedToRecipient__Params {
  _event: ERC1155ExecutedToRecipient;

  constructor(event: ERC1155ExecutedToRecipient) {
    this._event = event;
  }

  get listingId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get buyer(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get recipient(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class GotchiLendingAdded extends ethereum.Event {
  get params(): GotchiLendingAdded__Params {
    return new GotchiLendingAdded__Params(this);
  }
}

export class GotchiLendingAdded__Params {
  _event: GotchiLendingAdded;

  constructor(event: GotchiLendingAdded) {
    this._event = event;
  }

  get listingId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get lender(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get initialCost(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get period(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get revenueSplit(): Array<i32> {
    return this._event.parameters[5].value.toI32Array();
  }

  get originalOwner(): Address {
    return this._event.parameters[6].value.toAddress();
  }

  get thirdParty(): Address {
    return this._event.parameters[7].value.toAddress();
  }

  get whitelistId(): BigInt {
    return this._event.parameters[8].value.toBigInt();
  }

  get revenueTokens(): Array<Address> {
    return this._event.parameters[9].value.toAddressArray();
  }

  get timeCreated(): BigInt {
    return this._event.parameters[10].value.toBigInt();
  }
}

export class GotchiLendingCanceled extends ethereum.Event {
  get params(): GotchiLendingCanceled__Params {
    return new GotchiLendingCanceled__Params(this);
  }
}

export class GotchiLendingCanceled__Params {
  _event: GotchiLendingCanceled;

  constructor(event: GotchiLendingCanceled) {
    this._event = event;
  }

  get listingId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get lender(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get initialCost(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get period(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get revenueSplit(): Array<i32> {
    return this._event.parameters[5].value.toI32Array();
  }

  get originalOwner(): Address {
    return this._event.parameters[6].value.toAddress();
  }

  get thirdParty(): Address {
    return this._event.parameters[7].value.toAddress();
  }

  get whitelistId(): BigInt {
    return this._event.parameters[8].value.toBigInt();
  }

  get revenueTokens(): Array<Address> {
    return this._event.parameters[9].value.toAddressArray();
  }

  get timeCanceled(): BigInt {
    return this._event.parameters[10].value.toBigInt();
  }
}

export class GotchiLendingClaimed extends ethereum.Event {
  get params(): GotchiLendingClaimed__Params {
    return new GotchiLendingClaimed__Params(this);
  }
}

export class GotchiLendingClaimed__Params {
  _event: GotchiLendingClaimed;

  constructor(event: GotchiLendingClaimed) {
    this._event = event;
  }

  get listingId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get lender(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get borrower(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get initialCost(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get period(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get revenueSplit(): Array<i32> {
    return this._event.parameters[6].value.toI32Array();
  }

  get originalOwner(): Address {
    return this._event.parameters[7].value.toAddress();
  }

  get thirdParty(): Address {
    return this._event.parameters[8].value.toAddress();
  }

  get whitelistId(): BigInt {
    return this._event.parameters[9].value.toBigInt();
  }

  get revenueTokens(): Array<Address> {
    return this._event.parameters[10].value.toAddressArray();
  }

  get amounts(): Array<BigInt> {
    return this._event.parameters[11].value.toBigIntArray();
  }

  get timeClaimed(): BigInt {
    return this._event.parameters[12].value.toBigInt();
  }
}

export class GotchiLendingEnded extends ethereum.Event {
  get params(): GotchiLendingEnded__Params {
    return new GotchiLendingEnded__Params(this);
  }
}

export class GotchiLendingEnded__Params {
  _event: GotchiLendingEnded;

  constructor(event: GotchiLendingEnded) {
    this._event = event;
  }

  get listingId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get lender(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get borrower(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get initialCost(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get period(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get revenueSplit(): Array<i32> {
    return this._event.parameters[6].value.toI32Array();
  }

  get originalOwner(): Address {
    return this._event.parameters[7].value.toAddress();
  }

  get thirdParty(): Address {
    return this._event.parameters[8].value.toAddress();
  }

  get whitelistId(): BigInt {
    return this._event.parameters[9].value.toBigInt();
  }

  get revenueTokens(): Array<Address> {
    return this._event.parameters[10].value.toAddressArray();
  }

  get timeEnded(): BigInt {
    return this._event.parameters[11].value.toBigInt();
  }
}

export class GotchiLendingExecuted extends ethereum.Event {
  get params(): GotchiLendingExecuted__Params {
    return new GotchiLendingExecuted__Params(this);
  }
}

export class GotchiLendingExecuted__Params {
  _event: GotchiLendingExecuted;

  constructor(event: GotchiLendingExecuted) {
    this._event = event;
  }

  get listingId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get lender(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get borrower(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get initialCost(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get period(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get revenueSplit(): Array<i32> {
    return this._event.parameters[6].value.toI32Array();
  }

  get originalOwner(): Address {
    return this._event.parameters[7].value.toAddress();
  }

  get thirdParty(): Address {
    return this._event.parameters[8].value.toAddress();
  }

  get whitelistId(): BigInt {
    return this._event.parameters[9].value.toBigInt();
  }

  get revenueTokens(): Array<Address> {
    return this._event.parameters[10].value.toAddressArray();
  }

  get timeAgreed(): BigInt {
    return this._event.parameters[11].value.toBigInt();
  }
}

export class WhitelistAccessRightSet extends ethereum.Event {
  get params(): WhitelistAccessRightSet__Params {
    return new WhitelistAccessRightSet__Params(this);
  }
}

export class WhitelistAccessRightSet__Params {
  _event: WhitelistAccessRightSet;

  constructor(event: WhitelistAccessRightSet) {
    this._event = event;
  }

  get whitelistId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get actionRight(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get accessRight(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class AavegotchiDiamond__allAavegotchisOfOwnerResultAavegotchiInfos_Struct extends ethereum.Tuple {
  get tokenId(): BigInt {
    return this[0].toBigInt();
  }

  get name(): string {
    return this[1].toString();
  }

  get owner(): Address {
    return this[2].toAddress();
  }

  get randomNumber(): BigInt {
    return this[3].toBigInt();
  }

  get status(): BigInt {
    return this[4].toBigInt();
  }

  get numericTraits(): Array<i32> {
    return this[5].toI32Array();
  }

  get modifiedNumericTraits(): Array<i32> {
    return this[6].toI32Array();
  }

  get equippedWearables(): Array<i32> {
    return this[7].toI32Array();
  }

  get collateral(): Address {
    return this[8].toAddress();
  }

  get escrow(): Address {
    return this[9].toAddress();
  }

  get stakedAmount(): BigInt {
    return this[10].toBigInt();
  }

  get minimumStake(): BigInt {
    return this[11].toBigInt();
  }

  get kinship(): BigInt {
    return this[12].toBigInt();
  }

  get lastInteracted(): BigInt {
    return this[13].toBigInt();
  }

  get experience(): BigInt {
    return this[14].toBigInt();
  }

  get toNextLevel(): BigInt {
    return this[15].toBigInt();
  }

  get usedSkillPoints(): BigInt {
    return this[16].toBigInt();
  }

  get level(): BigInt {
    return this[17].toBigInt();
  }

  get hauntId(): BigInt {
    return this[18].toBigInt();
  }

  get baseRarityScore(): BigInt {
    return this[19].toBigInt();
  }

  get modifiedRarityScore(): BigInt {
    return this[20].toBigInt();
  }

  get locked(): boolean {
    return this[21].toBoolean();
  }

  get items(): Array<
    AavegotchiDiamond__allAavegotchisOfOwnerResultAavegotchiInfos_ItemsStruct
  > {
    return this[22].toTupleArray<
      AavegotchiDiamond__allAavegotchisOfOwnerResultAavegotchiInfos_ItemsStruct
    >();
  }
}

export class AavegotchiDiamond__allAavegotchisOfOwnerResultAavegotchiInfos_ItemsStruct extends ethereum.Tuple {
  get balance(): BigInt {
    return this[0].toBigInt();
  }

  get itemId(): BigInt {
    return this[1].toBigInt();
  }

  get itemType(): AavegotchiDiamond__allAavegotchisOfOwnerResultAavegotchiInfos_ItemsItemTypeStruct {
    return changetype<
      AavegotchiDiamond__allAavegotchisOfOwnerResultAavegotchiInfos_ItemsItemTypeStruct
    >(this[2].toTuple());
  }
}

export class AavegotchiDiamond__allAavegotchisOfOwnerResultAavegotchiInfos_ItemsItemTypeStruct extends ethereum.Tuple {
  get name(): string {
    return this[0].toString();
  }

  get description(): string {
    return this[1].toString();
  }

  get author(): string {
    return this[2].toString();
  }

  get traitModifiers(): Array<i32> {
    return this[3].toI32Array();
  }

  get slotPositions(): Array<boolean> {
    return this[4].toBooleanArray();
  }

  get allowedCollaterals(): Array<i32> {
    return this[5].toI32Array();
  }

  get dimensions(): AavegotchiDiamond__allAavegotchisOfOwnerResultAavegotchiInfos_ItemsItemTypeDimensionsStruct {
    return changetype<
      AavegotchiDiamond__allAavegotchisOfOwnerResultAavegotchiInfos_ItemsItemTypeDimensionsStruct
    >(this[6].toTuple());
  }

  get ghstPrice(): BigInt {
    return this[7].toBigInt();
  }

  get maxQuantity(): BigInt {
    return this[8].toBigInt();
  }

  get totalQuantity(): BigInt {
    return this[9].toBigInt();
  }

  get svgId(): BigInt {
    return this[10].toBigInt();
  }

  get rarityScoreModifier(): i32 {
    return this[11].toI32();
  }

  get canPurchaseWithGhst(): boolean {
    return this[12].toBoolean();
  }

  get minLevel(): i32 {
    return this[13].toI32();
  }

  get canBeTransferred(): boolean {
    return this[14].toBoolean();
  }

  get category(): i32 {
    return this[15].toI32();
  }

  get kinshipBonus(): i32 {
    return this[16].toI32();
  }

  get experienceBonus(): BigInt {
    return this[17].toBigInt();
  }
}

export class AavegotchiDiamond__allAavegotchisOfOwnerResultAavegotchiInfos_ItemsItemTypeDimensionsStruct extends ethereum.Tuple {
  get x(): i32 {
    return this[0].toI32();
  }

  get y(): i32 {
    return this[1].toI32();
  }

  get width(): i32 {
    return this[2].toI32();
  }

  get height(): i32 {
    return this[3].toI32();
  }
}

export class AavegotchiDiamond__getAavegotchiResultAavegotchiInfo_Struct extends ethereum.Tuple {
  get tokenId(): BigInt {
    return this[0].toBigInt();
  }

  get name(): string {
    return this[1].toString();
  }

  get owner(): Address {
    return this[2].toAddress();
  }

  get randomNumber(): BigInt {
    return this[3].toBigInt();
  }

  get status(): BigInt {
    return this[4].toBigInt();
  }

  get numericTraits(): Array<i32> {
    return this[5].toI32Array();
  }

  get modifiedNumericTraits(): Array<i32> {
    return this[6].toI32Array();
  }

  get equippedWearables(): Array<i32> {
    return this[7].toI32Array();
  }

  get collateral(): Address {
    return this[8].toAddress();
  }

  get escrow(): Address {
    return this[9].toAddress();
  }

  get stakedAmount(): BigInt {
    return this[10].toBigInt();
  }

  get minimumStake(): BigInt {
    return this[11].toBigInt();
  }

  get kinship(): BigInt {
    return this[12].toBigInt();
  }

  get lastInteracted(): BigInt {
    return this[13].toBigInt();
  }

  get experience(): BigInt {
    return this[14].toBigInt();
  }

  get toNextLevel(): BigInt {
    return this[15].toBigInt();
  }

  get usedSkillPoints(): BigInt {
    return this[16].toBigInt();
  }

  get level(): BigInt {
    return this[17].toBigInt();
  }

  get hauntId(): BigInt {
    return this[18].toBigInt();
  }

  get baseRarityScore(): BigInt {
    return this[19].toBigInt();
  }

  get modifiedRarityScore(): BigInt {
    return this[20].toBigInt();
  }

  get locked(): boolean {
    return this[21].toBoolean();
  }

  get items(): Array<
    AavegotchiDiamond__getAavegotchiResultAavegotchiInfo_ItemsStruct
  > {
    return this[22].toTupleArray<
      AavegotchiDiamond__getAavegotchiResultAavegotchiInfo_ItemsStruct
    >();
  }
}

export class AavegotchiDiamond__getAavegotchiResultAavegotchiInfo_ItemsStruct extends ethereum.Tuple {
  get balance(): BigInt {
    return this[0].toBigInt();
  }

  get itemId(): BigInt {
    return this[1].toBigInt();
  }

  get itemType(): AavegotchiDiamond__getAavegotchiResultAavegotchiInfo_ItemsItemTypeStruct {
    return changetype<
      AavegotchiDiamond__getAavegotchiResultAavegotchiInfo_ItemsItemTypeStruct
    >(this[2].toTuple());
  }
}

export class AavegotchiDiamond__getAavegotchiResultAavegotchiInfo_ItemsItemTypeStruct extends ethereum.Tuple {
  get name(): string {
    return this[0].toString();
  }

  get description(): string {
    return this[1].toString();
  }

  get author(): string {
    return this[2].toString();
  }

  get traitModifiers(): Array<i32> {
    return this[3].toI32Array();
  }

  get slotPositions(): Array<boolean> {
    return this[4].toBooleanArray();
  }

  get allowedCollaterals(): Array<i32> {
    return this[5].toI32Array();
  }

  get dimensions(): AavegotchiDiamond__getAavegotchiResultAavegotchiInfo_ItemsItemTypeDimensionsStruct {
    return changetype<
      AavegotchiDiamond__getAavegotchiResultAavegotchiInfo_ItemsItemTypeDimensionsStruct
    >(this[6].toTuple());
  }

  get ghstPrice(): BigInt {
    return this[7].toBigInt();
  }

  get maxQuantity(): BigInt {
    return this[8].toBigInt();
  }

  get totalQuantity(): BigInt {
    return this[9].toBigInt();
  }

  get svgId(): BigInt {
    return this[10].toBigInt();
  }

  get rarityScoreModifier(): i32 {
    return this[11].toI32();
  }

  get canPurchaseWithGhst(): boolean {
    return this[12].toBoolean();
  }

  get minLevel(): i32 {
    return this[13].toI32();
  }

  get canBeTransferred(): boolean {
    return this[14].toBoolean();
  }

  get category(): i32 {
    return this[15].toI32();
  }

  get kinshipBonus(): i32 {
    return this[16].toI32();
  }

  get experienceBonus(): BigInt {
    return this[17].toBigInt();
  }
}

export class AavegotchiDiamond__getAavegotchiResultAavegotchiInfo_ItemsItemTypeDimensionsStruct extends ethereum.Tuple {
  get x(): i32 {
    return this[0].toI32();
  }

  get y(): i32 {
    return this[1].toI32();
  }

  get width(): i32 {
    return this[2].toI32();
  }

  get height(): i32 {
    return this[3].toI32();
  }
}

export class AavegotchiDiamond__currentHauntResultHaunt_Struct extends ethereum.Tuple {
  get hauntMaxSize(): BigInt {
    return this[0].toBigInt();
  }

  get portalPrice(): BigInt {
    return this[1].toBigInt();
  }

  get bodyColor(): Bytes {
    return this[2].toBytes();
  }

  get totalCount(): i32 {
    return this[3].toI32();
  }
}

export class AavegotchiDiamond__currentHauntResult {
  value0: BigInt;
  value1: AavegotchiDiamond__currentHauntResultHaunt_Struct;

  constructor(
    value0: BigInt,
    value1: AavegotchiDiamond__currentHauntResultHaunt_Struct
  ) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromTuple(this.value1));
    return map;
  }

  getHauntId_(): BigInt {
    return this.value0;
  }

  getHaunt_(): AavegotchiDiamond__currentHauntResultHaunt_Struct {
    return this.value1;
  }
}

export class AavegotchiDiamond__modifiedTraitsAndRarityScoreResult {
  value0: Array<i32>;
  value1: BigInt;

  constructor(value0: Array<i32>, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromI32Array(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getNumericTraits_(): Array<i32> {
    return this.value0;
  }

  getRarityScore_(): BigInt {
    return this.value1;
  }
}

export class AavegotchiDiamond__portalAavegotchiTraitsResultPortalAavegotchiTraits_Struct extends ethereum.Tuple {
  get randomNumber(): BigInt {
    return this[0].toBigInt();
  }

  get numericTraits(): Array<i32> {
    return this[1].toI32Array();
  }

  get collateralType(): Address {
    return this[2].toAddress();
  }

  get minimumStake(): BigInt {
    return this[3].toBigInt();
  }
}

export class AavegotchiDiamond__revenueSharesResultValue0Struct extends ethereum.Tuple {
  get burnAddress(): Address {
    return this[0].toAddress();
  }

  get daoAddress(): Address {
    return this[1].toAddress();
  }

  get rarityFarming(): Address {
    return this[2].toAddress();
  }

  get pixelCraft(): Address {
    return this[3].toAddress();
  }
}

export class AavegotchiDiamond__tokenIdsWithKinshipResultTokenIdsWithKinship_Struct extends ethereum.Tuple {
  get tokenId(): BigInt {
    return this[0].toBigInt();
  }

  get kinship(): BigInt {
    return this[1].toBigInt();
  }

  get lastInteracted(): BigInt {
    return this[2].toBigInt();
  }
}

export class AavegotchiDiamond__collateralBalanceResult {
  value0: Address;
  value1: Address;
  value2: BigInt;

  constructor(value0: Address, value1: Address, value2: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    return map;
  }

  getCollateralType_(): Address {
    return this.value0;
  }

  getEscrow_(): Address {
    return this.value1;
  }

  getBalance_(): BigInt {
    return this.value2;
  }
}

export class AavegotchiDiamond__collateralInfoResultCollateralInfo_Struct extends ethereum.Tuple {
  get collateralType(): Address {
    return this[0].toAddress();
  }

  get collateralTypeInfo(): AavegotchiDiamond__collateralInfoResultCollateralInfo_CollateralTypeInfoStruct {
    return changetype<
      AavegotchiDiamond__collateralInfoResultCollateralInfo_CollateralTypeInfoStruct
    >(this[1].toTuple());
  }
}

export class AavegotchiDiamond__collateralInfoResultCollateralInfo_CollateralTypeInfoStruct extends ethereum.Tuple {
  get modifiers(): Array<i32> {
    return this[0].toI32Array();
  }

  get primaryColor(): Bytes {
    return this[1].toBytes();
  }

  get secondaryColor(): Bytes {
    return this[2].toBytes();
  }

  get cheekColor(): Bytes {
    return this[3].toBytes();
  }

  get svgId(): i32 {
    return this[4].toI32();
  }

  get eyeShapeSvgId(): i32 {
    return this[5].toI32();
  }

  get conversionRate(): i32 {
    return this[6].toI32();
  }

  get delisted(): boolean {
    return this[7].toBoolean();
  }
}

export class AavegotchiDiamond__getCollateralInfoResultCollateralInfo_Struct extends ethereum.Tuple {
  get collateralType(): Address {
    return this[0].toAddress();
  }

  get collateralTypeInfo(): AavegotchiDiamond__getCollateralInfoResultCollateralInfo_CollateralTypeInfoStruct {
    return changetype<
      AavegotchiDiamond__getCollateralInfoResultCollateralInfo_CollateralTypeInfoStruct
    >(this[1].toTuple());
  }
}

export class AavegotchiDiamond__getCollateralInfoResultCollateralInfo_CollateralTypeInfoStruct extends ethereum.Tuple {
  get modifiers(): Array<i32> {
    return this[0].toI32Array();
  }

  get primaryColor(): Bytes {
    return this[1].toBytes();
  }

  get secondaryColor(): Bytes {
    return this[2].toBytes();
  }

  get cheekColor(): Bytes {
    return this[3].toBytes();
  }

  get svgId(): i32 {
    return this[4].toI32();
  }

  get eyeShapeSvgId(): i32 {
    return this[5].toI32();
  }

  get conversionRate(): i32 {
    return this[6].toI32();
  }

  get delisted(): boolean {
    return this[7].toBoolean();
  }
}

export class AavegotchiDiamond__createHauntWithPayloadInput_payloadStruct extends ethereum.Tuple {
  get _hauntMaxSize(): i32 {
    return this[0].toI32();
  }

  get _portalPrice(): BigInt {
    return this[1].toBigInt();
  }

  get _bodyColor(): Bytes {
    return this[2].toBytes();
  }

  get _collateralTypes(): Array<
    AavegotchiDiamond__createHauntWithPayloadInput_payload_collateralTypesStruct
  > {
    return this[3].toTupleArray<
      AavegotchiDiamond__createHauntWithPayloadInput_payload_collateralTypesStruct
    >();
  }

  get _collateralSvg(): string {
    return this[4].toString();
  }

  get _collateralTypesAndSizes(): Array<
    AavegotchiDiamond__createHauntWithPayloadInput_payload_collateralTypesAndSizesStruct
  > {
    return this[5].toTupleArray<
      AavegotchiDiamond__createHauntWithPayloadInput_payload_collateralTypesAndSizesStruct
    >();
  }

  get _eyeShapeSvg(): string {
    return this[6].toString();
  }

  get _eyeShapeTypesAndSizes(): Array<
    AavegotchiDiamond__createHauntWithPayloadInput_payload_eyeShapeTypesAndSizesStruct
  > {
    return this[7].toTupleArray<
      AavegotchiDiamond__createHauntWithPayloadInput_payload_eyeShapeTypesAndSizesStruct
    >();
  }
}

export class AavegotchiDiamond__createHauntWithPayloadInput_payload_collateralTypesStruct extends ethereum.Tuple {
  get collateralType(): Address {
    return this[0].toAddress();
  }

  get collateralTypeInfo(): AavegotchiDiamond__createHauntWithPayloadInput_payload_collateralTypesCollateralTypeInfoStruct {
    return changetype<
      AavegotchiDiamond__createHauntWithPayloadInput_payload_collateralTypesCollateralTypeInfoStruct
    >(this[1].toTuple());
  }
}

export class AavegotchiDiamond__createHauntWithPayloadInput_payload_collateralTypesCollateralTypeInfoStruct extends ethereum.Tuple {
  get modifiers(): Array<i32> {
    return this[0].toI32Array();
  }

  get primaryColor(): Bytes {
    return this[1].toBytes();
  }

  get secondaryColor(): Bytes {
    return this[2].toBytes();
  }

  get cheekColor(): Bytes {
    return this[3].toBytes();
  }

  get svgId(): i32 {
    return this[4].toI32();
  }

  get eyeShapeSvgId(): i32 {
    return this[5].toI32();
  }

  get conversionRate(): i32 {
    return this[6].toI32();
  }

  get delisted(): boolean {
    return this[7].toBoolean();
  }
}

export class AavegotchiDiamond__createHauntWithPayloadInput_payload_collateralTypesAndSizesStruct extends ethereum.Tuple {
  get svgType(): Bytes {
    return this[0].toBytes();
  }

  get sizes(): Array<BigInt> {
    return this[1].toBigIntArray();
  }
}

export class AavegotchiDiamond__createHauntWithPayloadInput_payload_eyeShapeTypesAndSizesStruct extends ethereum.Tuple {
  get svgType(): Bytes {
    return this[0].toBytes();
  }

  get sizes(): Array<BigInt> {
    return this[1].toBigIntArray();
  }
}

export class AavegotchiDiamond__getERC1155ListingResultListing_Struct extends ethereum.Tuple {
  get listingId(): BigInt {
    return this[0].toBigInt();
  }

  get seller(): Address {
    return this[1].toAddress();
  }

  get erc1155TokenAddress(): Address {
    return this[2].toAddress();
  }

  get erc1155TypeId(): BigInt {
    return this[3].toBigInt();
  }

  get category(): BigInt {
    return this[4].toBigInt();
  }

  get quantity(): BigInt {
    return this[5].toBigInt();
  }

  get priceInWei(): BigInt {
    return this[6].toBigInt();
  }

  get timeCreated(): BigInt {
    return this[7].toBigInt();
  }

  get timeLastPurchased(): BigInt {
    return this[8].toBigInt();
  }

  get sourceListingId(): BigInt {
    return this[9].toBigInt();
  }

  get sold(): boolean {
    return this[10].toBoolean();
  }

  get cancelled(): boolean {
    return this[11].toBoolean();
  }
}

export class AavegotchiDiamond__getERC1155ListingFromTokenResultListing_Struct extends ethereum.Tuple {
  get listingId(): BigInt {
    return this[0].toBigInt();
  }

  get seller(): Address {
    return this[1].toAddress();
  }

  get erc1155TokenAddress(): Address {
    return this[2].toAddress();
  }

  get erc1155TypeId(): BigInt {
    return this[3].toBigInt();
  }

  get category(): BigInt {
    return this[4].toBigInt();
  }

  get quantity(): BigInt {
    return this[5].toBigInt();
  }

  get priceInWei(): BigInt {
    return this[6].toBigInt();
  }

  get timeCreated(): BigInt {
    return this[7].toBigInt();
  }

  get timeLastPurchased(): BigInt {
    return this[8].toBigInt();
  }

  get sourceListingId(): BigInt {
    return this[9].toBigInt();
  }

  get sold(): boolean {
    return this[10].toBoolean();
  }

  get cancelled(): boolean {
    return this[11].toBoolean();
  }
}

export class AavegotchiDiamond__getERC1155ListingsResultListings_Struct extends ethereum.Tuple {
  get listingId(): BigInt {
    return this[0].toBigInt();
  }

  get seller(): Address {
    return this[1].toAddress();
  }

  get erc1155TokenAddress(): Address {
    return this[2].toAddress();
  }

  get erc1155TypeId(): BigInt {
    return this[3].toBigInt();
  }

  get category(): BigInt {
    return this[4].toBigInt();
  }

  get quantity(): BigInt {
    return this[5].toBigInt();
  }

  get priceInWei(): BigInt {
    return this[6].toBigInt();
  }

  get timeCreated(): BigInt {
    return this[7].toBigInt();
  }

  get timeLastPurchased(): BigInt {
    return this[8].toBigInt();
  }

  get sourceListingId(): BigInt {
    return this[9].toBigInt();
  }

  get sold(): boolean {
    return this[10].toBoolean();
  }

  get cancelled(): boolean {
    return this[11].toBoolean();
  }
}

export class AavegotchiDiamond__getOwnerERC1155ListingsResultListings_Struct extends ethereum.Tuple {
  get listingId(): BigInt {
    return this[0].toBigInt();
  }

  get seller(): Address {
    return this[1].toAddress();
  }

  get erc1155TokenAddress(): Address {
    return this[2].toAddress();
  }

  get erc1155TypeId(): BigInt {
    return this[3].toBigInt();
  }

  get category(): BigInt {
    return this[4].toBigInt();
  }

  get quantity(): BigInt {
    return this[5].toBigInt();
  }

  get priceInWei(): BigInt {
    return this[6].toBigInt();
  }

  get timeCreated(): BigInt {
    return this[7].toBigInt();
  }

  get timeLastPurchased(): BigInt {
    return this[8].toBigInt();
  }

  get sourceListingId(): BigInt {
    return this[9].toBigInt();
  }

  get sold(): boolean {
    return this[10].toBoolean();
  }

  get cancelled(): boolean {
    return this[11].toBoolean();
  }
}

export class AavegotchiDiamond__getAavegotchiListingResultListing_Struct extends ethereum.Tuple {
  get listingId(): BigInt {
    return this[0].toBigInt();
  }

  get seller(): Address {
    return this[1].toAddress();
  }

  get erc721TokenAddress(): Address {
    return this[2].toAddress();
  }

  get erc721TokenId(): BigInt {
    return this[3].toBigInt();
  }

  get category(): BigInt {
    return this[4].toBigInt();
  }

  get priceInWei(): BigInt {
    return this[5].toBigInt();
  }

  get timeCreated(): BigInt {
    return this[6].toBigInt();
  }

  get timePurchased(): BigInt {
    return this[7].toBigInt();
  }

  get cancelled(): boolean {
    return this[8].toBoolean();
  }
}

export class AavegotchiDiamond__getAavegotchiListingResultAavegotchiInfo_Struct extends ethereum.Tuple {
  get tokenId(): BigInt {
    return this[0].toBigInt();
  }

  get name(): string {
    return this[1].toString();
  }

  get owner(): Address {
    return this[2].toAddress();
  }

  get randomNumber(): BigInt {
    return this[3].toBigInt();
  }

  get status(): BigInt {
    return this[4].toBigInt();
  }

  get numericTraits(): Array<i32> {
    return this[5].toI32Array();
  }

  get modifiedNumericTraits(): Array<i32> {
    return this[6].toI32Array();
  }

  get equippedWearables(): Array<i32> {
    return this[7].toI32Array();
  }

  get collateral(): Address {
    return this[8].toAddress();
  }

  get escrow(): Address {
    return this[9].toAddress();
  }

  get stakedAmount(): BigInt {
    return this[10].toBigInt();
  }

  get minimumStake(): BigInt {
    return this[11].toBigInt();
  }

  get kinship(): BigInt {
    return this[12].toBigInt();
  }

  get lastInteracted(): BigInt {
    return this[13].toBigInt();
  }

  get experience(): BigInt {
    return this[14].toBigInt();
  }

  get toNextLevel(): BigInt {
    return this[15].toBigInt();
  }

  get usedSkillPoints(): BigInt {
    return this[16].toBigInt();
  }

  get level(): BigInt {
    return this[17].toBigInt();
  }

  get hauntId(): BigInt {
    return this[18].toBigInt();
  }

  get baseRarityScore(): BigInt {
    return this[19].toBigInt();
  }

  get modifiedRarityScore(): BigInt {
    return this[20].toBigInt();
  }

  get locked(): boolean {
    return this[21].toBoolean();
  }

  get items(): Array<
    AavegotchiDiamond__getAavegotchiListingResultAavegotchiInfo_ItemsStruct
  > {
    return this[22].toTupleArray<
      AavegotchiDiamond__getAavegotchiListingResultAavegotchiInfo_ItemsStruct
    >();
  }
}

export class AavegotchiDiamond__getAavegotchiListingResultAavegotchiInfo_ItemsStruct extends ethereum.Tuple {
  get balance(): BigInt {
    return this[0].toBigInt();
  }

  get itemId(): BigInt {
    return this[1].toBigInt();
  }

  get itemType(): AavegotchiDiamond__getAavegotchiListingResultAavegotchiInfo_ItemsItemTypeStruct {
    return changetype<
      AavegotchiDiamond__getAavegotchiListingResultAavegotchiInfo_ItemsItemTypeStruct
    >(this[2].toTuple());
  }
}

export class AavegotchiDiamond__getAavegotchiListingResultAavegotchiInfo_ItemsItemTypeStruct extends ethereum.Tuple {
  get name(): string {
    return this[0].toString();
  }

  get description(): string {
    return this[1].toString();
  }

  get author(): string {
    return this[2].toString();
  }

  get traitModifiers(): Array<i32> {
    return this[3].toI32Array();
  }

  get slotPositions(): Array<boolean> {
    return this[4].toBooleanArray();
  }

  get allowedCollaterals(): Array<i32> {
    return this[5].toI32Array();
  }

  get dimensions(): AavegotchiDiamond__getAavegotchiListingResultAavegotchiInfo_ItemsItemTypeDimensionsStruct {
    return changetype<
      AavegotchiDiamond__getAavegotchiListingResultAavegotchiInfo_ItemsItemTypeDimensionsStruct
    >(this[6].toTuple());
  }

  get ghstPrice(): BigInt {
    return this[7].toBigInt();
  }

  get maxQuantity(): BigInt {
    return this[8].toBigInt();
  }

  get totalQuantity(): BigInt {
    return this[9].toBigInt();
  }

  get svgId(): BigInt {
    return this[10].toBigInt();
  }

  get rarityScoreModifier(): i32 {
    return this[11].toI32();
  }

  get canPurchaseWithGhst(): boolean {
    return this[12].toBoolean();
  }

  get minLevel(): i32 {
    return this[13].toI32();
  }

  get canBeTransferred(): boolean {
    return this[14].toBoolean();
  }

  get category(): i32 {
    return this[15].toI32();
  }

  get kinshipBonus(): i32 {
    return this[16].toI32();
  }

  get experienceBonus(): BigInt {
    return this[17].toBigInt();
  }
}

export class AavegotchiDiamond__getAavegotchiListingResultAavegotchiInfo_ItemsItemTypeDimensionsStruct extends ethereum.Tuple {
  get x(): i32 {
    return this[0].toI32();
  }

  get y(): i32 {
    return this[1].toI32();
  }

  get width(): i32 {
    return this[2].toI32();
  }

  get height(): i32 {
    return this[3].toI32();
  }
}

export class AavegotchiDiamond__getAavegotchiListingResult {
  value0: AavegotchiDiamond__getAavegotchiListingResultListing_Struct;
  value1: AavegotchiDiamond__getAavegotchiListingResultAavegotchiInfo_Struct;

  constructor(
    value0: AavegotchiDiamond__getAavegotchiListingResultListing_Struct,
    value1: AavegotchiDiamond__getAavegotchiListingResultAavegotchiInfo_Struct
  ) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromTuple(this.value0));
    map.set("value1", ethereum.Value.fromTuple(this.value1));
    return map;
  }

  getListing_(): AavegotchiDiamond__getAavegotchiListingResultListing_Struct {
    return this.value0;
  }

  getAavegotchiInfo_(): AavegotchiDiamond__getAavegotchiListingResultAavegotchiInfo_Struct {
    return this.value1;
  }
}

export class AavegotchiDiamond__getAavegotchiListingsResultListings_Struct extends ethereum.Tuple {
  get listing_(): AavegotchiDiamond__getAavegotchiListingsResultListings_Listing_Struct {
    return changetype<
      AavegotchiDiamond__getAavegotchiListingsResultListings_Listing_Struct
    >(this[0].toTuple());
  }

  get aavegotchiInfo_(): AavegotchiDiamond__getAavegotchiListingsResultListings_AavegotchiInfo_Struct {
    return changetype<
      AavegotchiDiamond__getAavegotchiListingsResultListings_AavegotchiInfo_Struct
    >(this[1].toTuple());
  }
}

export class AavegotchiDiamond__getAavegotchiListingsResultListings_Listing_Struct extends ethereum.Tuple {
  get listingId(): BigInt {
    return this[0].toBigInt();
  }

  get seller(): Address {
    return this[1].toAddress();
  }

  get erc721TokenAddress(): Address {
    return this[2].toAddress();
  }

  get erc721TokenId(): BigInt {
    return this[3].toBigInt();
  }

  get category(): BigInt {
    return this[4].toBigInt();
  }

  get priceInWei(): BigInt {
    return this[5].toBigInt();
  }

  get timeCreated(): BigInt {
    return this[6].toBigInt();
  }

  get timePurchased(): BigInt {
    return this[7].toBigInt();
  }

  get cancelled(): boolean {
    return this[8].toBoolean();
  }
}

export class AavegotchiDiamond__getAavegotchiListingsResultListings_AavegotchiInfo_Struct extends ethereum.Tuple {
  get tokenId(): BigInt {
    return this[0].toBigInt();
  }

  get name(): string {
    return this[1].toString();
  }

  get owner(): Address {
    return this[2].toAddress();
  }

  get randomNumber(): BigInt {
    return this[3].toBigInt();
  }

  get status(): BigInt {
    return this[4].toBigInt();
  }

  get numericTraits(): Array<i32> {
    return this[5].toI32Array();
  }

  get modifiedNumericTraits(): Array<i32> {
    return this[6].toI32Array();
  }

  get equippedWearables(): Array<i32> {
    return this[7].toI32Array();
  }

  get collateral(): Address {
    return this[8].toAddress();
  }

  get escrow(): Address {
    return this[9].toAddress();
  }

  get stakedAmount(): BigInt {
    return this[10].toBigInt();
  }

  get minimumStake(): BigInt {
    return this[11].toBigInt();
  }

  get kinship(): BigInt {
    return this[12].toBigInt();
  }

  get lastInteracted(): BigInt {
    return this[13].toBigInt();
  }

  get experience(): BigInt {
    return this[14].toBigInt();
  }

  get toNextLevel(): BigInt {
    return this[15].toBigInt();
  }

  get usedSkillPoints(): BigInt {
    return this[16].toBigInt();
  }

  get level(): BigInt {
    return this[17].toBigInt();
  }

  get hauntId(): BigInt {
    return this[18].toBigInt();
  }

  get baseRarityScore(): BigInt {
    return this[19].toBigInt();
  }

  get modifiedRarityScore(): BigInt {
    return this[20].toBigInt();
  }

  get locked(): boolean {
    return this[21].toBoolean();
  }

  get items(): Array<
    AavegotchiDiamond__getAavegotchiListingsResultListings_AavegotchiInfo_ItemsStruct
  > {
    return this[22].toTupleArray<
      AavegotchiDiamond__getAavegotchiListingsResultListings_AavegotchiInfo_ItemsStruct
    >();
  }
}

export class AavegotchiDiamond__getAavegotchiListingsResultListings_AavegotchiInfo_ItemsStruct extends ethereum.Tuple {
  get balance(): BigInt {
    return this[0].toBigInt();
  }

  get itemId(): BigInt {
    return this[1].toBigInt();
  }

  get itemType(): AavegotchiDiamond__getAavegotchiListingsResultListings_AavegotchiInfo_ItemsItemTypeStruct {
    return changetype<
      AavegotchiDiamond__getAavegotchiListingsResultListings_AavegotchiInfo_ItemsItemTypeStruct
    >(this[2].toTuple());
  }
}

export class AavegotchiDiamond__getAavegotchiListingsResultListings_AavegotchiInfo_ItemsItemTypeStruct extends ethereum.Tuple {
  get name(): string {
    return this[0].toString();
  }

  get description(): string {
    return this[1].toString();
  }

  get author(): string {
    return this[2].toString();
  }

  get traitModifiers(): Array<i32> {
    return this[3].toI32Array();
  }

  get slotPositions(): Array<boolean> {
    return this[4].toBooleanArray();
  }

  get allowedCollaterals(): Array<i32> {
    return this[5].toI32Array();
  }

  get dimensions(): AavegotchiDiamond__getAavegotchiListingsResultListings_AavegotchiInfo_ItemsItemTypeDimensionsStruct {
    return changetype<
      AavegotchiDiamond__getAavegotchiListingsResultListings_AavegotchiInfo_ItemsItemTypeDimensionsStruct
    >(this[6].toTuple());
  }

  get ghstPrice(): BigInt {
    return this[7].toBigInt();
  }

  get maxQuantity(): BigInt {
    return this[8].toBigInt();
  }

  get totalQuantity(): BigInt {
    return this[9].toBigInt();
  }

  get svgId(): BigInt {
    return this[10].toBigInt();
  }

  get rarityScoreModifier(): i32 {
    return this[11].toI32();
  }

  get canPurchaseWithGhst(): boolean {
    return this[12].toBoolean();
  }

  get minLevel(): i32 {
    return this[13].toI32();
  }

  get canBeTransferred(): boolean {
    return this[14].toBoolean();
  }

  get category(): i32 {
    return this[15].toI32();
  }

  get kinshipBonus(): i32 {
    return this[16].toI32();
  }

  get experienceBonus(): BigInt {
    return this[17].toBigInt();
  }
}

export class AavegotchiDiamond__getAavegotchiListingsResultListings_AavegotchiInfo_ItemsItemTypeDimensionsStruct extends ethereum.Tuple {
  get x(): i32 {
    return this[0].toI32();
  }

  get y(): i32 {
    return this[1].toI32();
  }

  get width(): i32 {
    return this[2].toI32();
  }

  get height(): i32 {
    return this[3].toI32();
  }
}

export class AavegotchiDiamond__getERC721ListingResultListing_Struct extends ethereum.Tuple {
  get listingId(): BigInt {
    return this[0].toBigInt();
  }

  get seller(): Address {
    return this[1].toAddress();
  }

  get erc721TokenAddress(): Address {
    return this[2].toAddress();
  }

  get erc721TokenId(): BigInt {
    return this[3].toBigInt();
  }

  get category(): BigInt {
    return this[4].toBigInt();
  }

  get priceInWei(): BigInt {
    return this[5].toBigInt();
  }

  get timeCreated(): BigInt {
    return this[6].toBigInt();
  }

  get timePurchased(): BigInt {
    return this[7].toBigInt();
  }

  get cancelled(): boolean {
    return this[8].toBoolean();
  }
}

export class AavegotchiDiamond__getERC721ListingFromTokenResultListing_Struct extends ethereum.Tuple {
  get listingId(): BigInt {
    return this[0].toBigInt();
  }

  get seller(): Address {
    return this[1].toAddress();
  }

  get erc721TokenAddress(): Address {
    return this[2].toAddress();
  }

  get erc721TokenId(): BigInt {
    return this[3].toBigInt();
  }

  get category(): BigInt {
    return this[4].toBigInt();
  }

  get priceInWei(): BigInt {
    return this[5].toBigInt();
  }

  get timeCreated(): BigInt {
    return this[6].toBigInt();
  }

  get timePurchased(): BigInt {
    return this[7].toBigInt();
  }

  get cancelled(): boolean {
    return this[8].toBoolean();
  }
}

export class AavegotchiDiamond__getERC721ListingsResultListings_Struct extends ethereum.Tuple {
  get listingId(): BigInt {
    return this[0].toBigInt();
  }

  get seller(): Address {
    return this[1].toAddress();
  }

  get erc721TokenAddress(): Address {
    return this[2].toAddress();
  }

  get erc721TokenId(): BigInt {
    return this[3].toBigInt();
  }

  get category(): BigInt {
    return this[4].toBigInt();
  }

  get priceInWei(): BigInt {
    return this[5].toBigInt();
  }

  get timeCreated(): BigInt {
    return this[6].toBigInt();
  }

  get timePurchased(): BigInt {
    return this[7].toBigInt();
  }

  get cancelled(): boolean {
    return this[8].toBoolean();
  }
}

export class AavegotchiDiamond__getOwnerAavegotchiListingsResultListings_Struct extends ethereum.Tuple {
  get listing_(): AavegotchiDiamond__getOwnerAavegotchiListingsResultListings_Listing_Struct {
    return changetype<
      AavegotchiDiamond__getOwnerAavegotchiListingsResultListings_Listing_Struct
    >(this[0].toTuple());
  }

  get aavegotchiInfo_(): AavegotchiDiamond__getOwnerAavegotchiListingsResultListings_AavegotchiInfo_Struct {
    return changetype<
      AavegotchiDiamond__getOwnerAavegotchiListingsResultListings_AavegotchiInfo_Struct
    >(this[1].toTuple());
  }
}

export class AavegotchiDiamond__getOwnerAavegotchiListingsResultListings_Listing_Struct extends ethereum.Tuple {
  get listingId(): BigInt {
    return this[0].toBigInt();
  }

  get seller(): Address {
    return this[1].toAddress();
  }

  get erc721TokenAddress(): Address {
    return this[2].toAddress();
  }

  get erc721TokenId(): BigInt {
    return this[3].toBigInt();
  }

  get category(): BigInt {
    return this[4].toBigInt();
  }

  get priceInWei(): BigInt {
    return this[5].toBigInt();
  }

  get timeCreated(): BigInt {
    return this[6].toBigInt();
  }

  get timePurchased(): BigInt {
    return this[7].toBigInt();
  }

  get cancelled(): boolean {
    return this[8].toBoolean();
  }
}

export class AavegotchiDiamond__getOwnerAavegotchiListingsResultListings_AavegotchiInfo_Struct extends ethereum.Tuple {
  get tokenId(): BigInt {
    return this[0].toBigInt();
  }

  get name(): string {
    return this[1].toString();
  }

  get owner(): Address {
    return this[2].toAddress();
  }

  get randomNumber(): BigInt {
    return this[3].toBigInt();
  }

  get status(): BigInt {
    return this[4].toBigInt();
  }

  get numericTraits(): Array<i32> {
    return this[5].toI32Array();
  }

  get modifiedNumericTraits(): Array<i32> {
    return this[6].toI32Array();
  }

  get equippedWearables(): Array<i32> {
    return this[7].toI32Array();
  }

  get collateral(): Address {
    return this[8].toAddress();
  }

  get escrow(): Address {
    return this[9].toAddress();
  }

  get stakedAmount(): BigInt {
    return this[10].toBigInt();
  }

  get minimumStake(): BigInt {
    return this[11].toBigInt();
  }

  get kinship(): BigInt {
    return this[12].toBigInt();
  }

  get lastInteracted(): BigInt {
    return this[13].toBigInt();
  }

  get experience(): BigInt {
    return this[14].toBigInt();
  }

  get toNextLevel(): BigInt {
    return this[15].toBigInt();
  }

  get usedSkillPoints(): BigInt {
    return this[16].toBigInt();
  }

  get level(): BigInt {
    return this[17].toBigInt();
  }

  get hauntId(): BigInt {
    return this[18].toBigInt();
  }

  get baseRarityScore(): BigInt {
    return this[19].toBigInt();
  }

  get modifiedRarityScore(): BigInt {
    return this[20].toBigInt();
  }

  get locked(): boolean {
    return this[21].toBoolean();
  }

  get items(): Array<
    AavegotchiDiamond__getOwnerAavegotchiListingsResultListings_AavegotchiInfo_ItemsStruct
  > {
    return this[22].toTupleArray<
      AavegotchiDiamond__getOwnerAavegotchiListingsResultListings_AavegotchiInfo_ItemsStruct
    >();
  }
}

export class AavegotchiDiamond__getOwnerAavegotchiListingsResultListings_AavegotchiInfo_ItemsStruct extends ethereum.Tuple {
  get balance(): BigInt {
    return this[0].toBigInt();
  }

  get itemId(): BigInt {
    return this[1].toBigInt();
  }

  get itemType(): AavegotchiDiamond__getOwnerAavegotchiListingsResultListings_AavegotchiInfo_ItemsItemTypeStruct {
    return changetype<
      AavegotchiDiamond__getOwnerAavegotchiListingsResultListings_AavegotchiInfo_ItemsItemTypeStruct
    >(this[2].toTuple());
  }
}

export class AavegotchiDiamond__getOwnerAavegotchiListingsResultListings_AavegotchiInfo_ItemsItemTypeStruct extends ethereum.Tuple {
  get name(): string {
    return this[0].toString();
  }

  get description(): string {
    return this[1].toString();
  }

  get author(): string {
    return this[2].toString();
  }

  get traitModifiers(): Array<i32> {
    return this[3].toI32Array();
  }

  get slotPositions(): Array<boolean> {
    return this[4].toBooleanArray();
  }

  get allowedCollaterals(): Array<i32> {
    return this[5].toI32Array();
  }

  get dimensions(): AavegotchiDiamond__getOwnerAavegotchiListingsResultListings_AavegotchiInfo_ItemsItemTypeDimensionsStruct {
    return changetype<
      AavegotchiDiamond__getOwnerAavegotchiListingsResultListings_AavegotchiInfo_ItemsItemTypeDimensionsStruct
    >(this[6].toTuple());
  }

  get ghstPrice(): BigInt {
    return this[7].toBigInt();
  }

  get maxQuantity(): BigInt {
    return this[8].toBigInt();
  }

  get totalQuantity(): BigInt {
    return this[9].toBigInt();
  }

  get svgId(): BigInt {
    return this[10].toBigInt();
  }

  get rarityScoreModifier(): i32 {
    return this[11].toI32();
  }

  get canPurchaseWithGhst(): boolean {
    return this[12].toBoolean();
  }

  get minLevel(): i32 {
    return this[13].toI32();
  }

  get canBeTransferred(): boolean {
    return this[14].toBoolean();
  }

  get category(): i32 {
    return this[15].toI32();
  }

  get kinshipBonus(): i32 {
    return this[16].toI32();
  }

  get experienceBonus(): BigInt {
    return this[17].toBigInt();
  }
}

export class AavegotchiDiamond__getOwnerAavegotchiListingsResultListings_AavegotchiInfo_ItemsItemTypeDimensionsStruct extends ethereum.Tuple {
  get x(): i32 {
    return this[0].toI32();
  }

  get y(): i32 {
    return this[1].toI32();
  }

  get width(): i32 {
    return this[2].toI32();
  }

  get height(): i32 {
    return this[3].toI32();
  }
}

export class AavegotchiDiamond__getOwnerERC721ListingsResultListings_Struct extends ethereum.Tuple {
  get listingId(): BigInt {
    return this[0].toBigInt();
  }

  get seller(): Address {
    return this[1].toAddress();
  }

  get erc721TokenAddress(): Address {
    return this[2].toAddress();
  }

  get erc721TokenId(): BigInt {
    return this[3].toBigInt();
  }

  get category(): BigInt {
    return this[4].toBigInt();
  }

  get priceInWei(): BigInt {
    return this[5].toBigInt();
  }

  get timeCreated(): BigInt {
    return this[6].toBigInt();
  }

  get timePurchased(): BigInt {
    return this[7].toBigInt();
  }

  get cancelled(): boolean {
    return this[8].toBoolean();
  }
}

export class AavegotchiDiamond__getItemTypeResultItemType_Struct extends ethereum.Tuple {
  get name(): string {
    return this[0].toString();
  }

  get description(): string {
    return this[1].toString();
  }

  get author(): string {
    return this[2].toString();
  }

  get traitModifiers(): Array<i32> {
    return this[3].toI32Array();
  }

  get slotPositions(): Array<boolean> {
    return this[4].toBooleanArray();
  }

  get allowedCollaterals(): Array<i32> {
    return this[5].toI32Array();
  }

  get dimensions(): AavegotchiDiamond__getItemTypeResultItemType_DimensionsStruct {
    return changetype<
      AavegotchiDiamond__getItemTypeResultItemType_DimensionsStruct
    >(this[6].toTuple());
  }

  get ghstPrice(): BigInt {
    return this[7].toBigInt();
  }

  get maxQuantity(): BigInt {
    return this[8].toBigInt();
  }

  get totalQuantity(): BigInt {
    return this[9].toBigInt();
  }

  get svgId(): BigInt {
    return this[10].toBigInt();
  }

  get rarityScoreModifier(): i32 {
    return this[11].toI32();
  }

  get canPurchaseWithGhst(): boolean {
    return this[12].toBoolean();
  }

  get minLevel(): i32 {
    return this[13].toI32();
  }

  get canBeTransferred(): boolean {
    return this[14].toBoolean();
  }

  get category(): i32 {
    return this[15].toI32();
  }

  get kinshipBonus(): i32 {
    return this[16].toI32();
  }

  get experienceBonus(): BigInt {
    return this[17].toBigInt();
  }
}

export class AavegotchiDiamond__getItemTypeResultItemType_DimensionsStruct extends ethereum.Tuple {
  get x(): i32 {
    return this[0].toI32();
  }

  get y(): i32 {
    return this[1].toI32();
  }

  get width(): i32 {
    return this[2].toI32();
  }

  get height(): i32 {
    return this[3].toI32();
  }
}

export class AavegotchiDiamond__getItemTypesResultItemTypes_Struct extends ethereum.Tuple {
  get name(): string {
    return this[0].toString();
  }

  get description(): string {
    return this[1].toString();
  }

  get author(): string {
    return this[2].toString();
  }

  get traitModifiers(): Array<i32> {
    return this[3].toI32Array();
  }

  get slotPositions(): Array<boolean> {
    return this[4].toBooleanArray();
  }

  get allowedCollaterals(): Array<i32> {
    return this[5].toI32Array();
  }

  get dimensions(): AavegotchiDiamond__getItemTypesResultItemTypes_DimensionsStruct {
    return changetype<
      AavegotchiDiamond__getItemTypesResultItemTypes_DimensionsStruct
    >(this[6].toTuple());
  }

  get ghstPrice(): BigInt {
    return this[7].toBigInt();
  }

  get maxQuantity(): BigInt {
    return this[8].toBigInt();
  }

  get totalQuantity(): BigInt {
    return this[9].toBigInt();
  }

  get svgId(): BigInt {
    return this[10].toBigInt();
  }

  get rarityScoreModifier(): i32 {
    return this[11].toI32();
  }

  get canPurchaseWithGhst(): boolean {
    return this[12].toBoolean();
  }

  get minLevel(): i32 {
    return this[13].toI32();
  }

  get canBeTransferred(): boolean {
    return this[14].toBoolean();
  }

  get category(): i32 {
    return this[15].toI32();
  }

  get kinshipBonus(): i32 {
    return this[16].toI32();
  }

  get experienceBonus(): BigInt {
    return this[17].toBigInt();
  }
}

export class AavegotchiDiamond__getItemTypesResultItemTypes_DimensionsStruct extends ethereum.Tuple {
  get x(): i32 {
    return this[0].toI32();
  }

  get y(): i32 {
    return this[1].toI32();
  }

  get width(): i32 {
    return this[2].toI32();
  }

  get height(): i32 {
    return this[3].toI32();
  }
}

export class AavegotchiDiamond__getWearableSetResultWearableSet_Struct extends ethereum.Tuple {
  get name(): string {
    return this[0].toString();
  }

  get allowedCollaterals(): Array<i32> {
    return this[1].toI32Array();
  }

  get wearableIds(): Array<i32> {
    return this[2].toI32Array();
  }

  get traitsBonuses(): Array<i32> {
    return this[3].toI32Array();
  }
}

export class AavegotchiDiamond__getWearableSetsResultWearableSets_Struct extends ethereum.Tuple {
  get name(): string {
    return this[0].toString();
  }

  get allowedCollaterals(): Array<i32> {
    return this[1].toI32Array();
  }

  get wearableIds(): Array<i32> {
    return this[2].toI32Array();
  }

  get traitsBonuses(): Array<i32> {
    return this[3].toI32Array();
  }
}

export class AavegotchiDiamond__itemBalancesResultBals_Struct extends ethereum.Tuple {
  get itemId(): BigInt {
    return this[0].toBigInt();
  }

  get balance(): BigInt {
    return this[1].toBigInt();
  }
}

export class AavegotchiDiamond__itemBalancesOfTokenResultBals_Struct extends ethereum.Tuple {
  get itemId(): BigInt {
    return this[0].toBigInt();
  }

  get balance(): BigInt {
    return this[1].toBigInt();
  }
}

export class AavegotchiDiamond__itemBalancesOfTokenWithTypesResultItemBalancesOfTokenWithTypes_Struct extends ethereum.Tuple {
  get balance(): BigInt {
    return this[0].toBigInt();
  }

  get itemId(): BigInt {
    return this[1].toBigInt();
  }

  get itemType(): AavegotchiDiamond__itemBalancesOfTokenWithTypesResultItemBalancesOfTokenWithTypes_ItemTypeStruct {
    return changetype<
      AavegotchiDiamond__itemBalancesOfTokenWithTypesResultItemBalancesOfTokenWithTypes_ItemTypeStruct
    >(this[2].toTuple());
  }
}

export class AavegotchiDiamond__itemBalancesOfTokenWithTypesResultItemBalancesOfTokenWithTypes_ItemTypeStruct extends ethereum.Tuple {
  get name(): string {
    return this[0].toString();
  }

  get description(): string {
    return this[1].toString();
  }

  get author(): string {
    return this[2].toString();
  }

  get traitModifiers(): Array<i32> {
    return this[3].toI32Array();
  }

  get slotPositions(): Array<boolean> {
    return this[4].toBooleanArray();
  }

  get allowedCollaterals(): Array<i32> {
    return this[5].toI32Array();
  }

  get dimensions(): AavegotchiDiamond__itemBalancesOfTokenWithTypesResultItemBalancesOfTokenWithTypes_ItemTypeDimensionsStruct {
    return changetype<
      AavegotchiDiamond__itemBalancesOfTokenWithTypesResultItemBalancesOfTokenWithTypes_ItemTypeDimensionsStruct
    >(this[6].toTuple());
  }

  get ghstPrice(): BigInt {
    return this[7].toBigInt();
  }

  get maxQuantity(): BigInt {
    return this[8].toBigInt();
  }

  get totalQuantity(): BigInt {
    return this[9].toBigInt();
  }

  get svgId(): BigInt {
    return this[10].toBigInt();
  }

  get rarityScoreModifier(): i32 {
    return this[11].toI32();
  }

  get canPurchaseWithGhst(): boolean {
    return this[12].toBoolean();
  }

  get minLevel(): i32 {
    return this[13].toI32();
  }

  get canBeTransferred(): boolean {
    return this[14].toBoolean();
  }

  get category(): i32 {
    return this[15].toI32();
  }

  get kinshipBonus(): i32 {
    return this[16].toI32();
  }

  get experienceBonus(): BigInt {
    return this[17].toBigInt();
  }
}

export class AavegotchiDiamond__itemBalancesOfTokenWithTypesResultItemBalancesOfTokenWithTypes_ItemTypeDimensionsStruct extends ethereum.Tuple {
  get x(): i32 {
    return this[0].toI32();
  }

  get y(): i32 {
    return this[1].toI32();
  }

  get width(): i32 {
    return this[2].toI32();
  }

  get height(): i32 {
    return this[3].toI32();
  }
}

export class AavegotchiDiamond__itemBalancesWithTypesResultOutput_Struct extends ethereum.Tuple {
  get balance(): BigInt {
    return this[0].toBigInt();
  }

  get itemId(): BigInt {
    return this[1].toBigInt();
  }

  get itemType(): AavegotchiDiamond__itemBalancesWithTypesResultOutput_ItemTypeStruct {
    return changetype<
      AavegotchiDiamond__itemBalancesWithTypesResultOutput_ItemTypeStruct
    >(this[2].toTuple());
  }
}

export class AavegotchiDiamond__itemBalancesWithTypesResultOutput_ItemTypeStruct extends ethereum.Tuple {
  get name(): string {
    return this[0].toString();
  }

  get description(): string {
    return this[1].toString();
  }

  get author(): string {
    return this[2].toString();
  }

  get traitModifiers(): Array<i32> {
    return this[3].toI32Array();
  }

  get slotPositions(): Array<boolean> {
    return this[4].toBooleanArray();
  }

  get allowedCollaterals(): Array<i32> {
    return this[5].toI32Array();
  }

  get dimensions(): AavegotchiDiamond__itemBalancesWithTypesResultOutput_ItemTypeDimensionsStruct {
    return changetype<
      AavegotchiDiamond__itemBalancesWithTypesResultOutput_ItemTypeDimensionsStruct
    >(this[6].toTuple());
  }

  get ghstPrice(): BigInt {
    return this[7].toBigInt();
  }

  get maxQuantity(): BigInt {
    return this[8].toBigInt();
  }

  get totalQuantity(): BigInt {
    return this[9].toBigInt();
  }

  get svgId(): BigInt {
    return this[10].toBigInt();
  }

  get rarityScoreModifier(): i32 {
    return this[11].toI32();
  }

  get canPurchaseWithGhst(): boolean {
    return this[12].toBoolean();
  }

  get minLevel(): i32 {
    return this[13].toI32();
  }

  get canBeTransferred(): boolean {
    return this[14].toBoolean();
  }

  get category(): i32 {
    return this[15].toI32();
  }

  get kinshipBonus(): i32 {
    return this[16].toI32();
  }

  get experienceBonus(): BigInt {
    return this[17].toBigInt();
  }
}

export class AavegotchiDiamond__itemBalancesWithTypesResultOutput_ItemTypeDimensionsStruct extends ethereum.Tuple {
  get x(): i32 {
    return this[0].toI32();
  }

  get y(): i32 {
    return this[1].toI32();
  }

  get width(): i32 {
    return this[2].toI32();
  }

  get height(): i32 {
    return this[3].toI32();
  }
}

export class AavegotchiDiamond__getGotchiLendingFromTokenResultListing_Struct extends ethereum.Tuple {
  get lender(): Address {
    return this[0].toAddress();
  }

  get initialCost(): BigInt {
    return this[1].toBigInt();
  }

  get borrower(): Address {
    return this[2].toAddress();
  }

  get listingId(): BigInt {
    return this[3].toBigInt();
  }

  get erc721TokenId(): BigInt {
    return this[4].toBigInt();
  }

  get whitelistId(): BigInt {
    return this[5].toBigInt();
  }

  get originalOwner(): Address {
    return this[6].toAddress();
  }

  get timeCreated(): BigInt {
    return this[7].toBigInt();
  }

  get timeAgreed(): BigInt {
    return this[8].toBigInt();
  }

  get canceled(): boolean {
    return this[9].toBoolean();
  }

  get completed(): boolean {
    return this[10].toBoolean();
  }

  get thirdParty(): Address {
    return this[11].toAddress();
  }

  get revenueSplit(): Array<i32> {
    return this[12].toI32Array();
  }

  get lastClaimed(): BigInt {
    return this[13].toBigInt();
  }

  get period(): BigInt {
    return this[14].toBigInt();
  }

  get revenueTokens(): Array<Address> {
    return this[15].toAddressArray();
  }
}

export class AavegotchiDiamond__getGotchiLendingListingInfoResultListing_Struct extends ethereum.Tuple {
  get lender(): Address {
    return this[0].toAddress();
  }

  get initialCost(): BigInt {
    return this[1].toBigInt();
  }

  get borrower(): Address {
    return this[2].toAddress();
  }

  get listingId(): BigInt {
    return this[3].toBigInt();
  }

  get erc721TokenId(): BigInt {
    return this[4].toBigInt();
  }

  get whitelistId(): BigInt {
    return this[5].toBigInt();
  }

  get originalOwner(): Address {
    return this[6].toAddress();
  }

  get timeCreated(): BigInt {
    return this[7].toBigInt();
  }

  get timeAgreed(): BigInt {
    return this[8].toBigInt();
  }

  get canceled(): boolean {
    return this[9].toBoolean();
  }

  get completed(): boolean {
    return this[10].toBoolean();
  }

  get thirdParty(): Address {
    return this[11].toAddress();
  }

  get revenueSplit(): Array<i32> {
    return this[12].toI32Array();
  }

  get lastClaimed(): BigInt {
    return this[13].toBigInt();
  }

  get period(): BigInt {
    return this[14].toBigInt();
  }

  get revenueTokens(): Array<Address> {
    return this[15].toAddressArray();
  }
}

export class AavegotchiDiamond__getGotchiLendingListingInfoResultAavegotchiInfo_Struct extends ethereum.Tuple {
  get tokenId(): BigInt {
    return this[0].toBigInt();
  }

  get name(): string {
    return this[1].toString();
  }

  get owner(): Address {
    return this[2].toAddress();
  }

  get randomNumber(): BigInt {
    return this[3].toBigInt();
  }

  get status(): BigInt {
    return this[4].toBigInt();
  }

  get numericTraits(): Array<i32> {
    return this[5].toI32Array();
  }

  get modifiedNumericTraits(): Array<i32> {
    return this[6].toI32Array();
  }

  get equippedWearables(): Array<i32> {
    return this[7].toI32Array();
  }

  get collateral(): Address {
    return this[8].toAddress();
  }

  get escrow(): Address {
    return this[9].toAddress();
  }

  get stakedAmount(): BigInt {
    return this[10].toBigInt();
  }

  get minimumStake(): BigInt {
    return this[11].toBigInt();
  }

  get kinship(): BigInt {
    return this[12].toBigInt();
  }

  get lastInteracted(): BigInt {
    return this[13].toBigInt();
  }

  get experience(): BigInt {
    return this[14].toBigInt();
  }

  get toNextLevel(): BigInt {
    return this[15].toBigInt();
  }

  get usedSkillPoints(): BigInt {
    return this[16].toBigInt();
  }

  get level(): BigInt {
    return this[17].toBigInt();
  }

  get hauntId(): BigInt {
    return this[18].toBigInt();
  }

  get baseRarityScore(): BigInt {
    return this[19].toBigInt();
  }

  get modifiedRarityScore(): BigInt {
    return this[20].toBigInt();
  }

  get locked(): boolean {
    return this[21].toBoolean();
  }

  get items(): Array<
    AavegotchiDiamond__getGotchiLendingListingInfoResultAavegotchiInfo_ItemsStruct
  > {
    return this[22].toTupleArray<
      AavegotchiDiamond__getGotchiLendingListingInfoResultAavegotchiInfo_ItemsStruct
    >();
  }
}

export class AavegotchiDiamond__getGotchiLendingListingInfoResultAavegotchiInfo_ItemsStruct extends ethereum.Tuple {
  get balance(): BigInt {
    return this[0].toBigInt();
  }

  get itemId(): BigInt {
    return this[1].toBigInt();
  }

  get itemType(): AavegotchiDiamond__getGotchiLendingListingInfoResultAavegotchiInfo_ItemsItemTypeStruct {
    return changetype<
      AavegotchiDiamond__getGotchiLendingListingInfoResultAavegotchiInfo_ItemsItemTypeStruct
    >(this[2].toTuple());
  }
}

export class AavegotchiDiamond__getGotchiLendingListingInfoResultAavegotchiInfo_ItemsItemTypeStruct extends ethereum.Tuple {
  get name(): string {
    return this[0].toString();
  }

  get description(): string {
    return this[1].toString();
  }

  get author(): string {
    return this[2].toString();
  }

  get traitModifiers(): Array<i32> {
    return this[3].toI32Array();
  }

  get slotPositions(): Array<boolean> {
    return this[4].toBooleanArray();
  }

  get allowedCollaterals(): Array<i32> {
    return this[5].toI32Array();
  }

  get dimensions(): AavegotchiDiamond__getGotchiLendingListingInfoResultAavegotchiInfo_ItemsItemTypeDimensionsStruct {
    return changetype<
      AavegotchiDiamond__getGotchiLendingListingInfoResultAavegotchiInfo_ItemsItemTypeDimensionsStruct
    >(this[6].toTuple());
  }

  get ghstPrice(): BigInt {
    return this[7].toBigInt();
  }

  get maxQuantity(): BigInt {
    return this[8].toBigInt();
  }

  get totalQuantity(): BigInt {
    return this[9].toBigInt();
  }

  get svgId(): BigInt {
    return this[10].toBigInt();
  }

  get rarityScoreModifier(): i32 {
    return this[11].toI32();
  }

  get canPurchaseWithGhst(): boolean {
    return this[12].toBoolean();
  }

  get minLevel(): i32 {
    return this[13].toI32();
  }

  get canBeTransferred(): boolean {
    return this[14].toBoolean();
  }

  get category(): i32 {
    return this[15].toI32();
  }

  get kinshipBonus(): i32 {
    return this[16].toI32();
  }

  get experienceBonus(): BigInt {
    return this[17].toBigInt();
  }
}

export class AavegotchiDiamond__getGotchiLendingListingInfoResultAavegotchiInfo_ItemsItemTypeDimensionsStruct extends ethereum.Tuple {
  get x(): i32 {
    return this[0].toI32();
  }

  get y(): i32 {
    return this[1].toI32();
  }

  get width(): i32 {
    return this[2].toI32();
  }

  get height(): i32 {
    return this[3].toI32();
  }
}

export class AavegotchiDiamond__getGotchiLendingListingInfoResult {
  value0: AavegotchiDiamond__getGotchiLendingListingInfoResultListing_Struct;
  value1: AavegotchiDiamond__getGotchiLendingListingInfoResultAavegotchiInfo_Struct;

  constructor(
    value0: AavegotchiDiamond__getGotchiLendingListingInfoResultListing_Struct,
    value1: AavegotchiDiamond__getGotchiLendingListingInfoResultAavegotchiInfo_Struct
  ) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromTuple(this.value0));
    map.set("value1", ethereum.Value.fromTuple(this.value1));
    return map;
  }

  getListing_(): AavegotchiDiamond__getGotchiLendingListingInfoResultListing_Struct {
    return this.value0;
  }

  getAavegotchiInfo_(): AavegotchiDiamond__getGotchiLendingListingInfoResultAavegotchiInfo_Struct {
    return this.value1;
  }
}

export class AavegotchiDiamond__getGotchiLendingsResultListings_Struct extends ethereum.Tuple {
  get lender(): Address {
    return this[0].toAddress();
  }

  get initialCost(): BigInt {
    return this[1].toBigInt();
  }

  get borrower(): Address {
    return this[2].toAddress();
  }

  get listingId(): BigInt {
    return this[3].toBigInt();
  }

  get erc721TokenId(): BigInt {
    return this[4].toBigInt();
  }

  get whitelistId(): BigInt {
    return this[5].toBigInt();
  }

  get originalOwner(): Address {
    return this[6].toAddress();
  }

  get timeCreated(): BigInt {
    return this[7].toBigInt();
  }

  get timeAgreed(): BigInt {
    return this[8].toBigInt();
  }

  get canceled(): boolean {
    return this[9].toBoolean();
  }

  get completed(): boolean {
    return this[10].toBoolean();
  }

  get thirdParty(): Address {
    return this[11].toAddress();
  }

  get revenueSplit(): Array<i32> {
    return this[12].toI32Array();
  }

  get lastClaimed(): BigInt {
    return this[13].toBigInt();
  }

  get period(): BigInt {
    return this[14].toBigInt();
  }

  get revenueTokens(): Array<Address> {
    return this[15].toAddressArray();
  }
}

export class AavegotchiDiamond__getLendingListingInfoResultListing_Struct extends ethereum.Tuple {
  get lender(): Address {
    return this[0].toAddress();
  }

  get initialCost(): BigInt {
    return this[1].toBigInt();
  }

  get borrower(): Address {
    return this[2].toAddress();
  }

  get listingId(): BigInt {
    return this[3].toBigInt();
  }

  get erc721TokenId(): BigInt {
    return this[4].toBigInt();
  }

  get whitelistId(): BigInt {
    return this[5].toBigInt();
  }

  get originalOwner(): Address {
    return this[6].toAddress();
  }

  get timeCreated(): BigInt {
    return this[7].toBigInt();
  }

  get timeAgreed(): BigInt {
    return this[8].toBigInt();
  }

  get canceled(): boolean {
    return this[9].toBoolean();
  }

  get completed(): boolean {
    return this[10].toBoolean();
  }

  get thirdParty(): Address {
    return this[11].toAddress();
  }

  get revenueSplit(): Array<i32> {
    return this[12].toI32Array();
  }

  get lastClaimed(): BigInt {
    return this[13].toBigInt();
  }

  get period(): BigInt {
    return this[14].toBigInt();
  }

  get revenueTokens(): Array<Address> {
    return this[15].toAddressArray();
  }
}

export class AavegotchiDiamond__getOwnerGotchiLendingsResultListings_Struct extends ethereum.Tuple {
  get lender(): Address {
    return this[0].toAddress();
  }

  get initialCost(): BigInt {
    return this[1].toBigInt();
  }

  get borrower(): Address {
    return this[2].toAddress();
  }

  get listingId(): BigInt {
    return this[3].toBigInt();
  }

  get erc721TokenId(): BigInt {
    return this[4].toBigInt();
  }

  get whitelistId(): BigInt {
    return this[5].toBigInt();
  }

  get originalOwner(): Address {
    return this[6].toAddress();
  }

  get timeCreated(): BigInt {
    return this[7].toBigInt();
  }

  get timeAgreed(): BigInt {
    return this[8].toBigInt();
  }

  get canceled(): boolean {
    return this[9].toBoolean();
  }

  get completed(): boolean {
    return this[10].toBoolean();
  }

  get thirdParty(): Address {
    return this[11].toAddress();
  }

  get revenueSplit(): Array<i32> {
    return this[12].toI32Array();
  }

  get lastClaimed(): BigInt {
    return this[13].toBigInt();
  }

  get period(): BigInt {
    return this[14].toBigInt();
  }

  get revenueTokens(): Array<Address> {
    return this[15].toAddressArray();
  }
}

export class AavegotchiDiamond__getWhitelistResultValue0Struct extends ethereum.Tuple {
  get owner(): Address {
    return this[0].toAddress();
  }

  get name(): string {
    return this[1].toString();
  }

  get addresses(): Array<Address> {
    return this[2].toAddressArray();
  }
}

export class AavegotchiDiamond__getWhitelistsResultValue0Struct extends ethereum.Tuple {
  get owner(): Address {
    return this[0].toAddress();
  }

  get name(): string {
    return this[1].toString();
  }

  get addresses(): Array<Address> {
    return this[2].toAddressArray();
  }
}

export class AavegotchiDiamond extends ethereum.SmartContract {
  static bind(address: Address): AavegotchiDiamond {
    return new AavegotchiDiamond("AavegotchiDiamond", address);
  }

  aavegotchiClaimTime(_tokenId: BigInt): BigInt {
    let result = super.call(
      "aavegotchiClaimTime",
      "aavegotchiClaimTime(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_tokenId)]
    );

    return result[0].toBigInt();
  }

  try_aavegotchiClaimTime(_tokenId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "aavegotchiClaimTime",
      "aavegotchiClaimTime(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_tokenId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  allAavegotchisOfOwner(
    _owner: Address
  ): Array<
    AavegotchiDiamond__allAavegotchisOfOwnerResultAavegotchiInfos_Struct
  > {
    let result = super.call(
      "allAavegotchisOfOwner",
      "allAavegotchisOfOwner(address):((uint256,string,address,uint256,uint256,int16[6],int16[6],uint16[16],address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,bool,(uint256,uint256,(string,string,string,int8[6],bool[16],uint8[],(uint8,uint8,uint8,uint8),uint256,uint256,uint256,uint32,uint8,bool,uint16,bool,uint8,int16,uint32))[])[])",
      [ethereum.Value.fromAddress(_owner)]
    );

    return result[0].toTupleArray<
      AavegotchiDiamond__allAavegotchisOfOwnerResultAavegotchiInfos_Struct
    >();
  }

  try_allAavegotchisOfOwner(
    _owner: Address
  ): ethereum.CallResult<
    Array<AavegotchiDiamond__allAavegotchisOfOwnerResultAavegotchiInfos_Struct>
  > {
    let result = super.tryCall(
      "allAavegotchisOfOwner",
      "allAavegotchisOfOwner(address):((uint256,string,address,uint256,uint256,int16[6],int16[6],uint16[16],address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,bool,(uint256,uint256,(string,string,string,int8[6],bool[16],uint8[],(uint8,uint8,uint8,uint8),uint256,uint256,uint256,uint32,uint8,bool,uint16,bool,uint8,int16,uint32))[])[])",
      [ethereum.Value.fromAddress(_owner)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<
        AavegotchiDiamond__allAavegotchisOfOwnerResultAavegotchiInfos_Struct
      >()
    );
  }

  balanceOf(_owner: Address): BigInt {
    let result = super.call("balanceOf", "balanceOf(address):(uint256)", [
      ethereum.Value.fromAddress(_owner)
    ]);

    return result[0].toBigInt();
  }

  try_balanceOf(_owner: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("balanceOf", "balanceOf(address):(uint256)", [
      ethereum.Value.fromAddress(_owner)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getAavegotchi(
    _tokenId: BigInt
  ): AavegotchiDiamond__getAavegotchiResultAavegotchiInfo_Struct {
    let result = super.call(
      "getAavegotchi",
      "getAavegotchi(uint256):((uint256,string,address,uint256,uint256,int16[6],int16[6],uint16[16],address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,bool,(uint256,uint256,(string,string,string,int8[6],bool[16],uint8[],(uint8,uint8,uint8,uint8),uint256,uint256,uint256,uint32,uint8,bool,uint16,bool,uint8,int16,uint32))[]))",
      [ethereum.Value.fromUnsignedBigInt(_tokenId)]
    );

    return changetype<
      AavegotchiDiamond__getAavegotchiResultAavegotchiInfo_Struct
    >(result[0].toTuple());
  }

  try_getAavegotchi(
    _tokenId: BigInt
  ): ethereum.CallResult<
    AavegotchiDiamond__getAavegotchiResultAavegotchiInfo_Struct
  > {
    let result = super.tryCall(
      "getAavegotchi",
      "getAavegotchi(uint256):((uint256,string,address,uint256,uint256,int16[6],int16[6],uint16[16],address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,bool,(uint256,uint256,(string,string,string,int8[6],bool[16],uint8[],(uint8,uint8,uint8,uint8),uint256,uint256,uint256,uint32,uint8,bool,uint16,bool,uint8,int16,uint32))[]))",
      [ethereum.Value.fromUnsignedBigInt(_tokenId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<AavegotchiDiamond__getAavegotchiResultAavegotchiInfo_Struct>(
        value[0].toTuple()
      )
    );
  }

  getApproved(_tokenId: BigInt): Address {
    let result = super.call("getApproved", "getApproved(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(_tokenId)
    ]);

    return result[0].toAddress();
  }

  try_getApproved(_tokenId: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getApproved",
      "getApproved(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(_tokenId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  isApprovedForAll(_owner: Address, _operator: Address): boolean {
    let result = super.call(
      "isApprovedForAll",
      "isApprovedForAll(address,address):(bool)",
      [
        ethereum.Value.fromAddress(_owner),
        ethereum.Value.fromAddress(_operator)
      ]
    );

    return result[0].toBoolean();
  }

  try_isApprovedForAll(
    _owner: Address,
    _operator: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isApprovedForAll",
      "isApprovedForAll(address,address):(bool)",
      [
        ethereum.Value.fromAddress(_owner),
        ethereum.Value.fromAddress(_operator)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isPetOperatorForAll(_owner: Address, _operator: Address): boolean {
    let result = super.call(
      "isPetOperatorForAll",
      "isPetOperatorForAll(address,address):(bool)",
      [
        ethereum.Value.fromAddress(_owner),
        ethereum.Value.fromAddress(_operator)
      ]
    );

    return result[0].toBoolean();
  }

  try_isPetOperatorForAll(
    _owner: Address,
    _operator: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isPetOperatorForAll",
      "isPetOperatorForAll(address,address):(bool)",
      [
        ethereum.Value.fromAddress(_owner),
        ethereum.Value.fromAddress(_operator)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  name(): string {
    let result = super.call("name", "name():(string)", []);

    return result[0].toString();
  }

  try_name(): ethereum.CallResult<string> {
    let result = super.tryCall("name", "name():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  ownerOf(_tokenId: BigInt): Address {
    let result = super.call("ownerOf", "ownerOf(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(_tokenId)
    ]);

    return result[0].toAddress();
  }

  try_ownerOf(_tokenId: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall("ownerOf", "ownerOf(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(_tokenId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  symbol(): string {
    let result = super.call("symbol", "symbol():(string)", []);

    return result[0].toString();
  }

  try_symbol(): ethereum.CallResult<string> {
    let result = super.tryCall("symbol", "symbol():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  tokenByIndex(_index: BigInt): BigInt {
    let result = super.call("tokenByIndex", "tokenByIndex(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(_index)
    ]);

    return result[0].toBigInt();
  }

  try_tokenByIndex(_index: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "tokenByIndex",
      "tokenByIndex(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_index)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  tokenIdsOfOwner(_owner: Address): Array<BigInt> {
    let result = super.call(
      "tokenIdsOfOwner",
      "tokenIdsOfOwner(address):(uint32[])",
      [ethereum.Value.fromAddress(_owner)]
    );

    return result[0].toBigIntArray();
  }

  try_tokenIdsOfOwner(_owner: Address): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "tokenIdsOfOwner",
      "tokenIdsOfOwner(address):(uint32[])",
      [ethereum.Value.fromAddress(_owner)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  tokenOfOwnerByIndex(_owner: Address, _index: BigInt): BigInt {
    let result = super.call(
      "tokenOfOwnerByIndex",
      "tokenOfOwnerByIndex(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(_owner),
        ethereum.Value.fromUnsignedBigInt(_index)
      ]
    );

    return result[0].toBigInt();
  }

  try_tokenOfOwnerByIndex(
    _owner: Address,
    _index: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "tokenOfOwnerByIndex",
      "tokenOfOwnerByIndex(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(_owner),
        ethereum.Value.fromUnsignedBigInt(_index)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  tokenURI(_tokenId: BigInt): string {
    let result = super.call("tokenURI", "tokenURI(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(_tokenId)
    ]);

    return result[0].toString();
  }

  try_tokenURI(_tokenId: BigInt): ethereum.CallResult<string> {
    let result = super.tryCall("tokenURI", "tokenURI(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(_tokenId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  totalSupply(): BigInt {
    let result = super.call("totalSupply", "totalSupply():(uint256)", []);

    return result[0].toBigInt();
  }

  try_totalSupply(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("totalSupply", "totalSupply():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  aavegotchiLevel(_experience: BigInt): BigInt {
    let result = super.call(
      "aavegotchiLevel",
      "aavegotchiLevel(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_experience)]
    );

    return result[0].toBigInt();
  }

  try_aavegotchiLevel(_experience: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "aavegotchiLevel",
      "aavegotchiLevel(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_experience)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  aavegotchiNameAvailable(_name: string): boolean {
    let result = super.call(
      "aavegotchiNameAvailable",
      "aavegotchiNameAvailable(string):(bool)",
      [ethereum.Value.fromString(_name)]
    );

    return result[0].toBoolean();
  }

  try_aavegotchiNameAvailable(_name: string): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "aavegotchiNameAvailable",
      "aavegotchiNameAvailable(string):(bool)",
      [ethereum.Value.fromString(_name)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  availableSkillPoints(_tokenId: BigInt): BigInt {
    let result = super.call(
      "availableSkillPoints",
      "availableSkillPoints(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_tokenId)]
    );

    return result[0].toBigInt();
  }

  try_availableSkillPoints(_tokenId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "availableSkillPoints",
      "availableSkillPoints(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_tokenId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  baseRarityScore(_numericTraits: Array<i32>): BigInt {
    let result = super.call(
      "baseRarityScore",
      "baseRarityScore(int16[6]):(uint256)",
      [ethereum.Value.fromI32Array(_numericTraits)]
    );

    return result[0].toBigInt();
  }

  try_baseRarityScore(_numericTraits: Array<i32>): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "baseRarityScore",
      "baseRarityScore(int16[6]):(uint256)",
      [ethereum.Value.fromI32Array(_numericTraits)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  currentHaunt(): AavegotchiDiamond__currentHauntResult {
    let result = super.call(
      "currentHaunt",
      "currentHaunt():(uint256,(uint256,uint256,bytes3,uint24))",
      []
    );

    return new AavegotchiDiamond__currentHauntResult(
      result[0].toBigInt(),
      changetype<AavegotchiDiamond__currentHauntResultHaunt_Struct>(
        result[1].toTuple()
      )
    );
  }

  try_currentHaunt(): ethereum.CallResult<
    AavegotchiDiamond__currentHauntResult
  > {
    let result = super.tryCall(
      "currentHaunt",
      "currentHaunt():(uint256,(uint256,uint256,bytes3,uint24))",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new AavegotchiDiamond__currentHauntResult(
        value[0].toBigInt(),
        changetype<AavegotchiDiamond__currentHauntResultHaunt_Struct>(
          value[1].toTuple()
        )
      )
    );
  }

  getNumericTraits(_tokenId: BigInt): Array<i32> {
    let result = super.call(
      "getNumericTraits",
      "getNumericTraits(uint256):(int16[6])",
      [ethereum.Value.fromUnsignedBigInt(_tokenId)]
    );

    return result[0].toI32Array();
  }

  try_getNumericTraits(_tokenId: BigInt): ethereum.CallResult<Array<i32>> {
    let result = super.tryCall(
      "getNumericTraits",
      "getNumericTraits(uint256):(int16[6])",
      [ethereum.Value.fromUnsignedBigInt(_tokenId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32Array());
  }

  ghstAddress(): Address {
    let result = super.call("ghstAddress", "ghstAddress():(address)", []);

    return result[0].toAddress();
  }

  try_ghstAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall("ghstAddress", "ghstAddress():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  kinship(_tokenId: BigInt): BigInt {
    let result = super.call("kinship", "kinship(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(_tokenId)
    ]);

    return result[0].toBigInt();
  }

  try_kinship(_tokenId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall("kinship", "kinship(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(_tokenId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  modifiedTraitsAndRarityScore(
    _tokenId: BigInt
  ): AavegotchiDiamond__modifiedTraitsAndRarityScoreResult {
    let result = super.call(
      "modifiedTraitsAndRarityScore",
      "modifiedTraitsAndRarityScore(uint256):(int16[6],uint256)",
      [ethereum.Value.fromUnsignedBigInt(_tokenId)]
    );

    return new AavegotchiDiamond__modifiedTraitsAndRarityScoreResult(
      result[0].toI32Array(),
      result[1].toBigInt()
    );
  }

  try_modifiedTraitsAndRarityScore(
    _tokenId: BigInt
  ): ethereum.CallResult<
    AavegotchiDiamond__modifiedTraitsAndRarityScoreResult
  > {
    let result = super.tryCall(
      "modifiedTraitsAndRarityScore",
      "modifiedTraitsAndRarityScore(uint256):(int16[6],uint256)",
      [ethereum.Value.fromUnsignedBigInt(_tokenId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new AavegotchiDiamond__modifiedTraitsAndRarityScoreResult(
        value[0].toI32Array(),
        value[1].toBigInt()
      )
    );
  }

  portalAavegotchiTraits(
    _tokenId: BigInt
  ): Array<
    AavegotchiDiamond__portalAavegotchiTraitsResultPortalAavegotchiTraits_Struct
  > {
    let result = super.call(
      "portalAavegotchiTraits",
      "portalAavegotchiTraits(uint256):((uint256,int16[6],address,uint256)[10])",
      [ethereum.Value.fromUnsignedBigInt(_tokenId)]
    );

    return result[0].toTupleArray<
      AavegotchiDiamond__portalAavegotchiTraitsResultPortalAavegotchiTraits_Struct
    >();
  }

  try_portalAavegotchiTraits(
    _tokenId: BigInt
  ): ethereum.CallResult<
    Array<
      AavegotchiDiamond__portalAavegotchiTraitsResultPortalAavegotchiTraits_Struct
    >
  > {
    let result = super.tryCall(
      "portalAavegotchiTraits",
      "portalAavegotchiTraits(uint256):((uint256,int16[6],address,uint256)[10])",
      [ethereum.Value.fromUnsignedBigInt(_tokenId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<
        AavegotchiDiamond__portalAavegotchiTraitsResultPortalAavegotchiTraits_Struct
      >()
    );
  }

  rarityMultiplier(_numericTraits: Array<i32>): BigInt {
    let result = super.call(
      "rarityMultiplier",
      "rarityMultiplier(int16[6]):(uint256)",
      [ethereum.Value.fromI32Array(_numericTraits)]
    );

    return result[0].toBigInt();
  }

  try_rarityMultiplier(
    _numericTraits: Array<i32>
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "rarityMultiplier",
      "rarityMultiplier(int16[6]):(uint256)",
      [ethereum.Value.fromI32Array(_numericTraits)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  revenueShares(): AavegotchiDiamond__revenueSharesResultValue0Struct {
    let result = super.call(
      "revenueShares",
      "revenueShares():((address,address,address,address))",
      []
    );

    return changetype<AavegotchiDiamond__revenueSharesResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_revenueShares(): ethereum.CallResult<
    AavegotchiDiamond__revenueSharesResultValue0Struct
  > {
    let result = super.tryCall(
      "revenueShares",
      "revenueShares():((address,address,address,address))",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<AavegotchiDiamond__revenueSharesResultValue0Struct>(
        value[0].toTuple()
      )
    );
  }

  tokenIdsWithKinship(
    _owner: Address,
    _count: BigInt,
    _skip: BigInt,
    all: boolean
  ): Array<
    AavegotchiDiamond__tokenIdsWithKinshipResultTokenIdsWithKinship_Struct
  > {
    let result = super.call(
      "tokenIdsWithKinship",
      "tokenIdsWithKinship(address,uint256,uint256,bool):((uint256,uint256,uint256)[])",
      [
        ethereum.Value.fromAddress(_owner),
        ethereum.Value.fromUnsignedBigInt(_count),
        ethereum.Value.fromUnsignedBigInt(_skip),
        ethereum.Value.fromBoolean(all)
      ]
    );

    return result[0].toTupleArray<
      AavegotchiDiamond__tokenIdsWithKinshipResultTokenIdsWithKinship_Struct
    >();
  }

  try_tokenIdsWithKinship(
    _owner: Address,
    _count: BigInt,
    _skip: BigInt,
    all: boolean
  ): ethereum.CallResult<
    Array<
      AavegotchiDiamond__tokenIdsWithKinshipResultTokenIdsWithKinship_Struct
    >
  > {
    let result = super.tryCall(
      "tokenIdsWithKinship",
      "tokenIdsWithKinship(address,uint256,uint256,bool):((uint256,uint256,uint256)[])",
      [
        ethereum.Value.fromAddress(_owner),
        ethereum.Value.fromUnsignedBigInt(_count),
        ethereum.Value.fromUnsignedBigInt(_skip),
        ethereum.Value.fromBoolean(all)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<
        AavegotchiDiamond__tokenIdsWithKinshipResultTokenIdsWithKinship_Struct
      >()
    );
  }

  xpUntilNextLevel(_experience: BigInt): BigInt {
    let result = super.call(
      "xpUntilNextLevel",
      "xpUntilNextLevel(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_experience)]
    );

    return result[0].toBigInt();
  }

  try_xpUntilNextLevel(_experience: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "xpUntilNextLevel",
      "xpUntilNextLevel(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_experience)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  childChainManager(): Address {
    let result = super.call(
      "childChainManager",
      "childChainManager():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_childChainManager(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "childChainManager",
      "childChainManager():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  collateralBalance(
    _tokenId: BigInt
  ): AavegotchiDiamond__collateralBalanceResult {
    let result = super.call(
      "collateralBalance",
      "collateralBalance(uint256):(address,address,uint256)",
      [ethereum.Value.fromUnsignedBigInt(_tokenId)]
    );

    return new AavegotchiDiamond__collateralBalanceResult(
      result[0].toAddress(),
      result[1].toAddress(),
      result[2].toBigInt()
    );
  }

  try_collateralBalance(
    _tokenId: BigInt
  ): ethereum.CallResult<AavegotchiDiamond__collateralBalanceResult> {
    let result = super.tryCall(
      "collateralBalance",
      "collateralBalance(uint256):(address,address,uint256)",
      [ethereum.Value.fromUnsignedBigInt(_tokenId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new AavegotchiDiamond__collateralBalanceResult(
        value[0].toAddress(),
        value[1].toAddress(),
        value[2].toBigInt()
      )
    );
  }

  collateralInfo(
    _hauntId: BigInt,
    _collateralId: BigInt
  ): AavegotchiDiamond__collateralInfoResultCollateralInfo_Struct {
    let result = super.call(
      "collateralInfo",
      "collateralInfo(uint256,uint256):((address,(int16[6],bytes3,bytes3,bytes3,uint8,uint8,uint16,bool)))",
      [
        ethereum.Value.fromUnsignedBigInt(_hauntId),
        ethereum.Value.fromUnsignedBigInt(_collateralId)
      ]
    );

    return changetype<
      AavegotchiDiamond__collateralInfoResultCollateralInfo_Struct
    >(result[0].toTuple());
  }

  try_collateralInfo(
    _hauntId: BigInt,
    _collateralId: BigInt
  ): ethereum.CallResult<
    AavegotchiDiamond__collateralInfoResultCollateralInfo_Struct
  > {
    let result = super.tryCall(
      "collateralInfo",
      "collateralInfo(uint256,uint256):((address,(int16[6],bytes3,bytes3,bytes3,uint8,uint8,uint16,bool)))",
      [
        ethereum.Value.fromUnsignedBigInt(_hauntId),
        ethereum.Value.fromUnsignedBigInt(_collateralId)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<AavegotchiDiamond__collateralInfoResultCollateralInfo_Struct>(
        value[0].toTuple()
      )
    );
  }

  collaterals(_hauntId: BigInt): Array<Address> {
    let result = super.call("collaterals", "collaterals(uint256):(address[])", [
      ethereum.Value.fromUnsignedBigInt(_hauntId)
    ]);

    return result[0].toAddressArray();
  }

  try_collaterals(_hauntId: BigInt): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "collaterals",
      "collaterals(uint256):(address[])",
      [ethereum.Value.fromUnsignedBigInt(_hauntId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  getAllCollateralTypes(): Array<Address> {
    let result = super.call(
      "getAllCollateralTypes",
      "getAllCollateralTypes():(address[])",
      []
    );

    return result[0].toAddressArray();
  }

  try_getAllCollateralTypes(): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "getAllCollateralTypes",
      "getAllCollateralTypes():(address[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  getCollateralInfo(
    _hauntId: BigInt
  ): Array<AavegotchiDiamond__getCollateralInfoResultCollateralInfo_Struct> {
    let result = super.call(
      "getCollateralInfo",
      "getCollateralInfo(uint256):((address,(int16[6],bytes3,bytes3,bytes3,uint8,uint8,uint16,bool))[])",
      [ethereum.Value.fromUnsignedBigInt(_hauntId)]
    );

    return result[0].toTupleArray<
      AavegotchiDiamond__getCollateralInfoResultCollateralInfo_Struct
    >();
  }

  try_getCollateralInfo(
    _hauntId: BigInt
  ): ethereum.CallResult<
    Array<AavegotchiDiamond__getCollateralInfoResultCollateralInfo_Struct>
  > {
    let result = super.tryCall(
      "getCollateralInfo",
      "getCollateralInfo(uint256):((address,(int16[6],bytes3,bytes3,bytes3,uint8,uint8,uint16,bool))[])",
      [ethereum.Value.fromUnsignedBigInt(_hauntId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<
        AavegotchiDiamond__getCollateralInfoResultCollateralInfo_Struct
      >()
    );
  }

  createHaunt(
    _hauntMaxSize: i32,
    _portalPrice: BigInt,
    _bodyColor: Bytes
  ): BigInt {
    let result = super.call(
      "createHaunt",
      "createHaunt(uint24,uint96,bytes3):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_hauntMaxSize)),
        ethereum.Value.fromUnsignedBigInt(_portalPrice),
        ethereum.Value.fromFixedBytes(_bodyColor)
      ]
    );

    return result[0].toBigInt();
  }

  try_createHaunt(
    _hauntMaxSize: i32,
    _portalPrice: BigInt,
    _bodyColor: Bytes
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "createHaunt",
      "createHaunt(uint24,uint96,bytes3):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_hauntMaxSize)),
        ethereum.Value.fromUnsignedBigInt(_portalPrice),
        ethereum.Value.fromFixedBytes(_bodyColor)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  createHauntWithPayload(
    _payload: AavegotchiDiamond__createHauntWithPayloadInput_payloadStruct
  ): BigInt {
    let result = super.call(
      "createHauntWithPayload",
      "createHauntWithPayload((uint24,uint96,bytes3,(address,(int16[6],bytes3,bytes3,bytes3,uint8,uint8,uint16,bool))[],string,(bytes32,uint256[])[],string,(bytes32,uint256[])[])):(uint256)",
      [ethereum.Value.fromTuple(_payload)]
    );

    return result[0].toBigInt();
  }

  try_createHauntWithPayload(
    _payload: AavegotchiDiamond__createHauntWithPayloadInput_payloadStruct
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "createHauntWithPayload",
      "createHauntWithPayload((uint24,uint96,bytes3,(address,(int16[6],bytes3,bytes3,bytes3,uint8,uint8,uint16,bool))[],string,(bytes32,uint256[])[],string,(bytes32,uint256[])[])):(uint256)",
      [ethereum.Value.fromTuple(_payload)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  gameManagerBalance(_manager: Address): BigInt {
    let result = super.call(
      "gameManagerBalance",
      "gameManagerBalance(address):(uint256)",
      [ethereum.Value.fromAddress(_manager)]
    );

    return result[0].toBigInt();
  }

  try_gameManagerBalance(_manager: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "gameManagerBalance",
      "gameManagerBalance(address):(uint256)",
      [ethereum.Value.fromAddress(_manager)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  gameManagerRefreshTime(_manager: Address): BigInt {
    let result = super.call(
      "gameManagerRefreshTime",
      "gameManagerRefreshTime(address):(uint256)",
      [ethereum.Value.fromAddress(_manager)]
    );

    return result[0].toBigInt();
  }

  try_gameManagerRefreshTime(_manager: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "gameManagerRefreshTime",
      "gameManagerRefreshTime(address):(uint256)",
      [ethereum.Value.fromAddress(_manager)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  isGameManager(_manager: Address): boolean {
    let result = super.call("isGameManager", "isGameManager(address):(bool)", [
      ethereum.Value.fromAddress(_manager)
    ]);

    return result[0].toBoolean();
  }

  try_isGameManager(_manager: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isGameManager",
      "isGameManager(address):(bool)",
      [ethereum.Value.fromAddress(_manager)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  getERC1155Category(
    _erc1155TokenAddress: Address,
    _erc1155TypeId: BigInt
  ): BigInt {
    let result = super.call(
      "getERC1155Category",
      "getERC1155Category(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(_erc1155TokenAddress),
        ethereum.Value.fromUnsignedBigInt(_erc1155TypeId)
      ]
    );

    return result[0].toBigInt();
  }

  try_getERC1155Category(
    _erc1155TokenAddress: Address,
    _erc1155TypeId: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getERC1155Category",
      "getERC1155Category(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(_erc1155TokenAddress),
        ethereum.Value.fromUnsignedBigInt(_erc1155TypeId)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getERC1155Listing(
    _listingId: BigInt
  ): AavegotchiDiamond__getERC1155ListingResultListing_Struct {
    let result = super.call(
      "getERC1155Listing",
      "getERC1155Listing(uint256):((uint256,address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,bool,bool))",
      [ethereum.Value.fromUnsignedBigInt(_listingId)]
    );

    return changetype<AavegotchiDiamond__getERC1155ListingResultListing_Struct>(
      result[0].toTuple()
    );
  }

  try_getERC1155Listing(
    _listingId: BigInt
  ): ethereum.CallResult<
    AavegotchiDiamond__getERC1155ListingResultListing_Struct
  > {
    let result = super.tryCall(
      "getERC1155Listing",
      "getERC1155Listing(uint256):((uint256,address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,bool,bool))",
      [ethereum.Value.fromUnsignedBigInt(_listingId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<AavegotchiDiamond__getERC1155ListingResultListing_Struct>(
        value[0].toTuple()
      )
    );
  }

  getERC1155ListingFromToken(
    _erc1155TokenAddress: Address,
    _erc1155TypeId: BigInt,
    _owner: Address
  ): AavegotchiDiamond__getERC1155ListingFromTokenResultListing_Struct {
    let result = super.call(
      "getERC1155ListingFromToken",
      "getERC1155ListingFromToken(address,uint256,address):((uint256,address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,bool,bool))",
      [
        ethereum.Value.fromAddress(_erc1155TokenAddress),
        ethereum.Value.fromUnsignedBigInt(_erc1155TypeId),
        ethereum.Value.fromAddress(_owner)
      ]
    );

    return changetype<
      AavegotchiDiamond__getERC1155ListingFromTokenResultListing_Struct
    >(result[0].toTuple());
  }

  try_getERC1155ListingFromToken(
    _erc1155TokenAddress: Address,
    _erc1155TypeId: BigInt,
    _owner: Address
  ): ethereum.CallResult<
    AavegotchiDiamond__getERC1155ListingFromTokenResultListing_Struct
  > {
    let result = super.tryCall(
      "getERC1155ListingFromToken",
      "getERC1155ListingFromToken(address,uint256,address):((uint256,address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,bool,bool))",
      [
        ethereum.Value.fromAddress(_erc1155TokenAddress),
        ethereum.Value.fromUnsignedBigInt(_erc1155TypeId),
        ethereum.Value.fromAddress(_owner)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<
        AavegotchiDiamond__getERC1155ListingFromTokenResultListing_Struct
      >(value[0].toTuple())
    );
  }

  getERC1155Listings(
    _category: BigInt,
    _sort: string,
    _length: BigInt
  ): Array<AavegotchiDiamond__getERC1155ListingsResultListings_Struct> {
    let result = super.call(
      "getERC1155Listings",
      "getERC1155Listings(uint256,string,uint256):((uint256,address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,bool,bool)[])",
      [
        ethereum.Value.fromUnsignedBigInt(_category),
        ethereum.Value.fromString(_sort),
        ethereum.Value.fromUnsignedBigInt(_length)
      ]
    );

    return result[0].toTupleArray<
      AavegotchiDiamond__getERC1155ListingsResultListings_Struct
    >();
  }

  try_getERC1155Listings(
    _category: BigInt,
    _sort: string,
    _length: BigInt
  ): ethereum.CallResult<
    Array<AavegotchiDiamond__getERC1155ListingsResultListings_Struct>
  > {
    let result = super.tryCall(
      "getERC1155Listings",
      "getERC1155Listings(uint256,string,uint256):((uint256,address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,bool,bool)[])",
      [
        ethereum.Value.fromUnsignedBigInt(_category),
        ethereum.Value.fromString(_sort),
        ethereum.Value.fromUnsignedBigInt(_length)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<
        AavegotchiDiamond__getERC1155ListingsResultListings_Struct
      >()
    );
  }

  getListingFeeInWei(): BigInt {
    let result = super.call(
      "getListingFeeInWei",
      "getListingFeeInWei():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getListingFeeInWei(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getListingFeeInWei",
      "getListingFeeInWei():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getOwnerERC1155Listings(
    _owner: Address,
    _category: BigInt,
    _sort: string,
    _length: BigInt
  ): Array<AavegotchiDiamond__getOwnerERC1155ListingsResultListings_Struct> {
    let result = super.call(
      "getOwnerERC1155Listings",
      "getOwnerERC1155Listings(address,uint256,string,uint256):((uint256,address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,bool,bool)[])",
      [
        ethereum.Value.fromAddress(_owner),
        ethereum.Value.fromUnsignedBigInt(_category),
        ethereum.Value.fromString(_sort),
        ethereum.Value.fromUnsignedBigInt(_length)
      ]
    );

    return result[0].toTupleArray<
      AavegotchiDiamond__getOwnerERC1155ListingsResultListings_Struct
    >();
  }

  try_getOwnerERC1155Listings(
    _owner: Address,
    _category: BigInt,
    _sort: string,
    _length: BigInt
  ): ethereum.CallResult<
    Array<AavegotchiDiamond__getOwnerERC1155ListingsResultListings_Struct>
  > {
    let result = super.tryCall(
      "getOwnerERC1155Listings",
      "getOwnerERC1155Listings(address,uint256,string,uint256):((uint256,address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,bool,bool)[])",
      [
        ethereum.Value.fromAddress(_owner),
        ethereum.Value.fromUnsignedBigInt(_category),
        ethereum.Value.fromString(_sort),
        ethereum.Value.fromUnsignedBigInt(_length)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<
        AavegotchiDiamond__getOwnerERC1155ListingsResultListings_Struct
      >()
    );
  }

  getAavegotchiListing(
    _listingId: BigInt
  ): AavegotchiDiamond__getAavegotchiListingResult {
    let result = super.call(
      "getAavegotchiListing",
      "getAavegotchiListing(uint256):((uint256,address,address,uint256,uint256,uint256,uint256,uint256,bool),(uint256,string,address,uint256,uint256,int16[6],int16[6],uint16[16],address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,bool,(uint256,uint256,(string,string,string,int8[6],bool[16],uint8[],(uint8,uint8,uint8,uint8),uint256,uint256,uint256,uint32,uint8,bool,uint16,bool,uint8,int16,uint32))[]))",
      [ethereum.Value.fromUnsignedBigInt(_listingId)]
    );

    return changetype<AavegotchiDiamond__getAavegotchiListingResult>(
      new AavegotchiDiamond__getAavegotchiListingResult(
        changetype<AavegotchiDiamond__getAavegotchiListingResultListing_Struct>(
          result[0].toTuple()
        ),
        changetype<
          AavegotchiDiamond__getAavegotchiListingResultAavegotchiInfo_Struct
        >(result[1].toTuple())
      )
    );
  }

  try_getAavegotchiListing(
    _listingId: BigInt
  ): ethereum.CallResult<AavegotchiDiamond__getAavegotchiListingResult> {
    let result = super.tryCall(
      "getAavegotchiListing",
      "getAavegotchiListing(uint256):((uint256,address,address,uint256,uint256,uint256,uint256,uint256,bool),(uint256,string,address,uint256,uint256,int16[6],int16[6],uint16[16],address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,bool,(uint256,uint256,(string,string,string,int8[6],bool[16],uint8[],(uint8,uint8,uint8,uint8),uint256,uint256,uint256,uint32,uint8,bool,uint16,bool,uint8,int16,uint32))[]))",
      [ethereum.Value.fromUnsignedBigInt(_listingId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<AavegotchiDiamond__getAavegotchiListingResult>(
        new AavegotchiDiamond__getAavegotchiListingResult(
          changetype<
            AavegotchiDiamond__getAavegotchiListingResultListing_Struct
          >(value[0].toTuple()),
          changetype<
            AavegotchiDiamond__getAavegotchiListingResultAavegotchiInfo_Struct
          >(value[1].toTuple())
        )
      )
    );
  }

  getAavegotchiListings(
    _category: BigInt,
    _sort: string,
    _length: BigInt
  ): Array<AavegotchiDiamond__getAavegotchiListingsResultListings_Struct> {
    let result = super.call(
      "getAavegotchiListings",
      "getAavegotchiListings(uint256,string,uint256):(((uint256,address,address,uint256,uint256,uint256,uint256,uint256,bool),(uint256,string,address,uint256,uint256,int16[6],int16[6],uint16[16],address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,bool,(uint256,uint256,(string,string,string,int8[6],bool[16],uint8[],(uint8,uint8,uint8,uint8),uint256,uint256,uint256,uint32,uint8,bool,uint16,bool,uint8,int16,uint32))[]))[])",
      [
        ethereum.Value.fromUnsignedBigInt(_category),
        ethereum.Value.fromString(_sort),
        ethereum.Value.fromUnsignedBigInt(_length)
      ]
    );

    return result[0].toTupleArray<
      AavegotchiDiamond__getAavegotchiListingsResultListings_Struct
    >();
  }

  try_getAavegotchiListings(
    _category: BigInt,
    _sort: string,
    _length: BigInt
  ): ethereum.CallResult<
    Array<AavegotchiDiamond__getAavegotchiListingsResultListings_Struct>
  > {
    let result = super.tryCall(
      "getAavegotchiListings",
      "getAavegotchiListings(uint256,string,uint256):(((uint256,address,address,uint256,uint256,uint256,uint256,uint256,bool),(uint256,string,address,uint256,uint256,int16[6],int16[6],uint16[16],address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,bool,(uint256,uint256,(string,string,string,int8[6],bool[16],uint8[],(uint8,uint8,uint8,uint8),uint256,uint256,uint256,uint32,uint8,bool,uint16,bool,uint8,int16,uint32))[]))[])",
      [
        ethereum.Value.fromUnsignedBigInt(_category),
        ethereum.Value.fromString(_sort),
        ethereum.Value.fromUnsignedBigInt(_length)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<
        AavegotchiDiamond__getAavegotchiListingsResultListings_Struct
      >()
    );
  }

  getERC721Category(
    _erc721TokenAddress: Address,
    _erc721TokenId: BigInt
  ): BigInt {
    let result = super.call(
      "getERC721Category",
      "getERC721Category(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(_erc721TokenAddress),
        ethereum.Value.fromUnsignedBigInt(_erc721TokenId)
      ]
    );

    return result[0].toBigInt();
  }

  try_getERC721Category(
    _erc721TokenAddress: Address,
    _erc721TokenId: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getERC721Category",
      "getERC721Category(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(_erc721TokenAddress),
        ethereum.Value.fromUnsignedBigInt(_erc721TokenId)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getERC721Listing(
    _listingId: BigInt
  ): AavegotchiDiamond__getERC721ListingResultListing_Struct {
    let result = super.call(
      "getERC721Listing",
      "getERC721Listing(uint256):((uint256,address,address,uint256,uint256,uint256,uint256,uint256,bool))",
      [ethereum.Value.fromUnsignedBigInt(_listingId)]
    );

    return changetype<AavegotchiDiamond__getERC721ListingResultListing_Struct>(
      result[0].toTuple()
    );
  }

  try_getERC721Listing(
    _listingId: BigInt
  ): ethereum.CallResult<
    AavegotchiDiamond__getERC721ListingResultListing_Struct
  > {
    let result = super.tryCall(
      "getERC721Listing",
      "getERC721Listing(uint256):((uint256,address,address,uint256,uint256,uint256,uint256,uint256,bool))",
      [ethereum.Value.fromUnsignedBigInt(_listingId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<AavegotchiDiamond__getERC721ListingResultListing_Struct>(
        value[0].toTuple()
      )
    );
  }

  getERC721ListingFromToken(
    _erc721TokenAddress: Address,
    _erc721TokenId: BigInt,
    _owner: Address
  ): AavegotchiDiamond__getERC721ListingFromTokenResultListing_Struct {
    let result = super.call(
      "getERC721ListingFromToken",
      "getERC721ListingFromToken(address,uint256,address):((uint256,address,address,uint256,uint256,uint256,uint256,uint256,bool))",
      [
        ethereum.Value.fromAddress(_erc721TokenAddress),
        ethereum.Value.fromUnsignedBigInt(_erc721TokenId),
        ethereum.Value.fromAddress(_owner)
      ]
    );

    return changetype<
      AavegotchiDiamond__getERC721ListingFromTokenResultListing_Struct
    >(result[0].toTuple());
  }

  try_getERC721ListingFromToken(
    _erc721TokenAddress: Address,
    _erc721TokenId: BigInt,
    _owner: Address
  ): ethereum.CallResult<
    AavegotchiDiamond__getERC721ListingFromTokenResultListing_Struct
  > {
    let result = super.tryCall(
      "getERC721ListingFromToken",
      "getERC721ListingFromToken(address,uint256,address):((uint256,address,address,uint256,uint256,uint256,uint256,uint256,bool))",
      [
        ethereum.Value.fromAddress(_erc721TokenAddress),
        ethereum.Value.fromUnsignedBigInt(_erc721TokenId),
        ethereum.Value.fromAddress(_owner)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<
        AavegotchiDiamond__getERC721ListingFromTokenResultListing_Struct
      >(value[0].toTuple())
    );
  }

  getERC721Listings(
    _category: BigInt,
    _sort: string,
    _length: BigInt
  ): Array<AavegotchiDiamond__getERC721ListingsResultListings_Struct> {
    let result = super.call(
      "getERC721Listings",
      "getERC721Listings(uint256,string,uint256):((uint256,address,address,uint256,uint256,uint256,uint256,uint256,bool)[])",
      [
        ethereum.Value.fromUnsignedBigInt(_category),
        ethereum.Value.fromString(_sort),
        ethereum.Value.fromUnsignedBigInt(_length)
      ]
    );

    return result[0].toTupleArray<
      AavegotchiDiamond__getERC721ListingsResultListings_Struct
    >();
  }

  try_getERC721Listings(
    _category: BigInt,
    _sort: string,
    _length: BigInt
  ): ethereum.CallResult<
    Array<AavegotchiDiamond__getERC721ListingsResultListings_Struct>
  > {
    let result = super.tryCall(
      "getERC721Listings",
      "getERC721Listings(uint256,string,uint256):((uint256,address,address,uint256,uint256,uint256,uint256,uint256,bool)[])",
      [
        ethereum.Value.fromUnsignedBigInt(_category),
        ethereum.Value.fromString(_sort),
        ethereum.Value.fromUnsignedBigInt(_length)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<
        AavegotchiDiamond__getERC721ListingsResultListings_Struct
      >()
    );
  }

  getOwnerAavegotchiListings(
    _owner: Address,
    _category: BigInt,
    _sort: string,
    _length: BigInt
  ): Array<AavegotchiDiamond__getOwnerAavegotchiListingsResultListings_Struct> {
    let result = super.call(
      "getOwnerAavegotchiListings",
      "getOwnerAavegotchiListings(address,uint256,string,uint256):(((uint256,address,address,uint256,uint256,uint256,uint256,uint256,bool),(uint256,string,address,uint256,uint256,int16[6],int16[6],uint16[16],address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,bool,(uint256,uint256,(string,string,string,int8[6],bool[16],uint8[],(uint8,uint8,uint8,uint8),uint256,uint256,uint256,uint32,uint8,bool,uint16,bool,uint8,int16,uint32))[]))[])",
      [
        ethereum.Value.fromAddress(_owner),
        ethereum.Value.fromUnsignedBigInt(_category),
        ethereum.Value.fromString(_sort),
        ethereum.Value.fromUnsignedBigInt(_length)
      ]
    );

    return result[0].toTupleArray<
      AavegotchiDiamond__getOwnerAavegotchiListingsResultListings_Struct
    >();
  }

  try_getOwnerAavegotchiListings(
    _owner: Address,
    _category: BigInt,
    _sort: string,
    _length: BigInt
  ): ethereum.CallResult<
    Array<AavegotchiDiamond__getOwnerAavegotchiListingsResultListings_Struct>
  > {
    let result = super.tryCall(
      "getOwnerAavegotchiListings",
      "getOwnerAavegotchiListings(address,uint256,string,uint256):(((uint256,address,address,uint256,uint256,uint256,uint256,uint256,bool),(uint256,string,address,uint256,uint256,int16[6],int16[6],uint16[16],address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,bool,(uint256,uint256,(string,string,string,int8[6],bool[16],uint8[],(uint8,uint8,uint8,uint8),uint256,uint256,uint256,uint32,uint8,bool,uint16,bool,uint8,int16,uint32))[]))[])",
      [
        ethereum.Value.fromAddress(_owner),
        ethereum.Value.fromUnsignedBigInt(_category),
        ethereum.Value.fromString(_sort),
        ethereum.Value.fromUnsignedBigInt(_length)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<
        AavegotchiDiamond__getOwnerAavegotchiListingsResultListings_Struct
      >()
    );
  }

  getOwnerERC721Listings(
    _owner: Address,
    _category: BigInt,
    _sort: string,
    _length: BigInt
  ): Array<AavegotchiDiamond__getOwnerERC721ListingsResultListings_Struct> {
    let result = super.call(
      "getOwnerERC721Listings",
      "getOwnerERC721Listings(address,uint256,string,uint256):((uint256,address,address,uint256,uint256,uint256,uint256,uint256,bool)[])",
      [
        ethereum.Value.fromAddress(_owner),
        ethereum.Value.fromUnsignedBigInt(_category),
        ethereum.Value.fromString(_sort),
        ethereum.Value.fromUnsignedBigInt(_length)
      ]
    );

    return result[0].toTupleArray<
      AavegotchiDiamond__getOwnerERC721ListingsResultListings_Struct
    >();
  }

  try_getOwnerERC721Listings(
    _owner: Address,
    _category: BigInt,
    _sort: string,
    _length: BigInt
  ): ethereum.CallResult<
    Array<AavegotchiDiamond__getOwnerERC721ListingsResultListings_Struct>
  > {
    let result = super.tryCall(
      "getOwnerERC721Listings",
      "getOwnerERC721Listings(address,uint256,string,uint256):((uint256,address,address,uint256,uint256,uint256,uint256,uint256,bool)[])",
      [
        ethereum.Value.fromAddress(_owner),
        ethereum.Value.fromUnsignedBigInt(_category),
        ethereum.Value.fromString(_sort),
        ethereum.Value.fromUnsignedBigInt(_length)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<
        AavegotchiDiamond__getOwnerERC721ListingsResultListings_Struct
      >()
    );
  }

  escrowBalance(_tokenId: BigInt, _erc20Contract: Address): BigInt {
    let result = super.call(
      "escrowBalance",
      "escrowBalance(uint256,address):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_tokenId),
        ethereum.Value.fromAddress(_erc20Contract)
      ]
    );

    return result[0].toBigInt();
  }

  try_escrowBalance(
    _tokenId: BigInt,
    _erc20Contract: Address
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "escrowBalance",
      "escrowBalance(uint256,address):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_tokenId),
        ethereum.Value.fromAddress(_erc20Contract)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  balanceOf1(_owner: Address, _id: BigInt): BigInt {
    let result = super.call(
      "balanceOf",
      "balanceOf(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(_owner),
        ethereum.Value.fromUnsignedBigInt(_id)
      ]
    );

    return result[0].toBigInt();
  }

  try_balanceOf1(_owner: Address, _id: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "balanceOf",
      "balanceOf(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(_owner),
        ethereum.Value.fromUnsignedBigInt(_id)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  balanceOfBatch(_owners: Array<Address>, _ids: Array<BigInt>): Array<BigInt> {
    let result = super.call(
      "balanceOfBatch",
      "balanceOfBatch(address[],uint256[]):(uint256[])",
      [
        ethereum.Value.fromAddressArray(_owners),
        ethereum.Value.fromUnsignedBigIntArray(_ids)
      ]
    );

    return result[0].toBigIntArray();
  }

  try_balanceOfBatch(
    _owners: Array<Address>,
    _ids: Array<BigInt>
  ): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "balanceOfBatch",
      "balanceOfBatch(address[],uint256[]):(uint256[])",
      [
        ethereum.Value.fromAddressArray(_owners),
        ethereum.Value.fromUnsignedBigIntArray(_ids)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  balanceOfToken(
    _tokenContract: Address,
    _tokenId: BigInt,
    _id: BigInt
  ): BigInt {
    let result = super.call(
      "balanceOfToken",
      "balanceOfToken(address,uint256,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(_tokenContract),
        ethereum.Value.fromUnsignedBigInt(_tokenId),
        ethereum.Value.fromUnsignedBigInt(_id)
      ]
    );

    return result[0].toBigInt();
  }

  try_balanceOfToken(
    _tokenContract: Address,
    _tokenId: BigInt,
    _id: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "balanceOfToken",
      "balanceOfToken(address,uint256,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(_tokenContract),
        ethereum.Value.fromUnsignedBigInt(_tokenId),
        ethereum.Value.fromUnsignedBigInt(_id)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  equippedWearables(_tokenId: BigInt): Array<i32> {
    let result = super.call(
      "equippedWearables",
      "equippedWearables(uint256):(uint16[16])",
      [ethereum.Value.fromUnsignedBigInt(_tokenId)]
    );

    return result[0].toI32Array();
  }

  try_equippedWearables(_tokenId: BigInt): ethereum.CallResult<Array<i32>> {
    let result = super.tryCall(
      "equippedWearables",
      "equippedWearables(uint256):(uint16[16])",
      [ethereum.Value.fromUnsignedBigInt(_tokenId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32Array());
  }

  findWearableSets(_wearableIds: Array<BigInt>): Array<BigInt> {
    let result = super.call(
      "findWearableSets",
      "findWearableSets(uint256[]):(uint256[])",
      [ethereum.Value.fromUnsignedBigIntArray(_wearableIds)]
    );

    return result[0].toBigIntArray();
  }

  try_findWearableSets(
    _wearableIds: Array<BigInt>
  ): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "findWearableSets",
      "findWearableSets(uint256[]):(uint256[])",
      [ethereum.Value.fromUnsignedBigIntArray(_wearableIds)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  getItemType(
    _itemId: BigInt
  ): AavegotchiDiamond__getItemTypeResultItemType_Struct {
    let result = super.call(
      "getItemType",
      "getItemType(uint256):((string,string,string,int8[6],bool[16],uint8[],(uint8,uint8,uint8,uint8),uint256,uint256,uint256,uint32,uint8,bool,uint16,bool,uint8,int16,uint32))",
      [ethereum.Value.fromUnsignedBigInt(_itemId)]
    );

    return changetype<AavegotchiDiamond__getItemTypeResultItemType_Struct>(
      result[0].toTuple()
    );
  }

  try_getItemType(
    _itemId: BigInt
  ): ethereum.CallResult<AavegotchiDiamond__getItemTypeResultItemType_Struct> {
    let result = super.tryCall(
      "getItemType",
      "getItemType(uint256):((string,string,string,int8[6],bool[16],uint8[],(uint8,uint8,uint8,uint8),uint256,uint256,uint256,uint32,uint8,bool,uint16,bool,uint8,int16,uint32))",
      [ethereum.Value.fromUnsignedBigInt(_itemId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<AavegotchiDiamond__getItemTypeResultItemType_Struct>(
        value[0].toTuple()
      )
    );
  }

  getItemTypes(
    _itemIds: Array<BigInt>
  ): Array<AavegotchiDiamond__getItemTypesResultItemTypes_Struct> {
    let result = super.call(
      "getItemTypes",
      "getItemTypes(uint256[]):((string,string,string,int8[6],bool[16],uint8[],(uint8,uint8,uint8,uint8),uint256,uint256,uint256,uint32,uint8,bool,uint16,bool,uint8,int16,uint32)[])",
      [ethereum.Value.fromUnsignedBigIntArray(_itemIds)]
    );

    return result[0].toTupleArray<
      AavegotchiDiamond__getItemTypesResultItemTypes_Struct
    >();
  }

  try_getItemTypes(
    _itemIds: Array<BigInt>
  ): ethereum.CallResult<
    Array<AavegotchiDiamond__getItemTypesResultItemTypes_Struct>
  > {
    let result = super.tryCall(
      "getItemTypes",
      "getItemTypes(uint256[]):((string,string,string,int8[6],bool[16],uint8[],(uint8,uint8,uint8,uint8),uint256,uint256,uint256,uint32,uint8,bool,uint16,bool,uint8,int16,uint32)[])",
      [ethereum.Value.fromUnsignedBigIntArray(_itemIds)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<
        AavegotchiDiamond__getItemTypesResultItemTypes_Struct
      >()
    );
  }

  getWearableSet(
    _index: BigInt
  ): AavegotchiDiamond__getWearableSetResultWearableSet_Struct {
    let result = super.call(
      "getWearableSet",
      "getWearableSet(uint256):((string,uint8[],uint16[],int8[5]))",
      [ethereum.Value.fromUnsignedBigInt(_index)]
    );

    return changetype<
      AavegotchiDiamond__getWearableSetResultWearableSet_Struct
    >(result[0].toTuple());
  }

  try_getWearableSet(
    _index: BigInt
  ): ethereum.CallResult<
    AavegotchiDiamond__getWearableSetResultWearableSet_Struct
  > {
    let result = super.tryCall(
      "getWearableSet",
      "getWearableSet(uint256):((string,uint8[],uint16[],int8[5]))",
      [ethereum.Value.fromUnsignedBigInt(_index)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<AavegotchiDiamond__getWearableSetResultWearableSet_Struct>(
        value[0].toTuple()
      )
    );
  }

  getWearableSets(): Array<
    AavegotchiDiamond__getWearableSetsResultWearableSets_Struct
  > {
    let result = super.call(
      "getWearableSets",
      "getWearableSets():((string,uint8[],uint16[],int8[5])[])",
      []
    );

    return result[0].toTupleArray<
      AavegotchiDiamond__getWearableSetsResultWearableSets_Struct
    >();
  }

  try_getWearableSets(): ethereum.CallResult<
    Array<AavegotchiDiamond__getWearableSetsResultWearableSets_Struct>
  > {
    let result = super.tryCall(
      "getWearableSets",
      "getWearableSets():((string,uint8[],uint16[],int8[5])[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<
        AavegotchiDiamond__getWearableSetsResultWearableSets_Struct
      >()
    );
  }

  itemBalances(
    _account: Address
  ): Array<AavegotchiDiamond__itemBalancesResultBals_Struct> {
    let result = super.call(
      "itemBalances",
      "itemBalances(address):((uint256,uint256)[])",
      [ethereum.Value.fromAddress(_account)]
    );

    return result[0].toTupleArray<
      AavegotchiDiamond__itemBalancesResultBals_Struct
    >();
  }

  try_itemBalances(
    _account: Address
  ): ethereum.CallResult<
    Array<AavegotchiDiamond__itemBalancesResultBals_Struct>
  > {
    let result = super.tryCall(
      "itemBalances",
      "itemBalances(address):((uint256,uint256)[])",
      [ethereum.Value.fromAddress(_account)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<AavegotchiDiamond__itemBalancesResultBals_Struct>()
    );
  }

  itemBalancesOfToken(
    _tokenContract: Address,
    _tokenId: BigInt
  ): Array<AavegotchiDiamond__itemBalancesOfTokenResultBals_Struct> {
    let result = super.call(
      "itemBalancesOfToken",
      "itemBalancesOfToken(address,uint256):((uint256,uint256)[])",
      [
        ethereum.Value.fromAddress(_tokenContract),
        ethereum.Value.fromUnsignedBigInt(_tokenId)
      ]
    );

    return result[0].toTupleArray<
      AavegotchiDiamond__itemBalancesOfTokenResultBals_Struct
    >();
  }

  try_itemBalancesOfToken(
    _tokenContract: Address,
    _tokenId: BigInt
  ): ethereum.CallResult<
    Array<AavegotchiDiamond__itemBalancesOfTokenResultBals_Struct>
  > {
    let result = super.tryCall(
      "itemBalancesOfToken",
      "itemBalancesOfToken(address,uint256):((uint256,uint256)[])",
      [
        ethereum.Value.fromAddress(_tokenContract),
        ethereum.Value.fromUnsignedBigInt(_tokenId)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<
        AavegotchiDiamond__itemBalancesOfTokenResultBals_Struct
      >()
    );
  }

  itemBalancesOfTokenWithTypes(
    _tokenContract: Address,
    _tokenId: BigInt
  ): Array<
    AavegotchiDiamond__itemBalancesOfTokenWithTypesResultItemBalancesOfTokenWithTypes_Struct
  > {
    let result = super.call(
      "itemBalancesOfTokenWithTypes",
      "itemBalancesOfTokenWithTypes(address,uint256):((uint256,uint256,(string,string,string,int8[6],bool[16],uint8[],(uint8,uint8,uint8,uint8),uint256,uint256,uint256,uint32,uint8,bool,uint16,bool,uint8,int16,uint32))[])",
      [
        ethereum.Value.fromAddress(_tokenContract),
        ethereum.Value.fromUnsignedBigInt(_tokenId)
      ]
    );

    return result[0].toTupleArray<
      AavegotchiDiamond__itemBalancesOfTokenWithTypesResultItemBalancesOfTokenWithTypes_Struct
    >();
  }

  try_itemBalancesOfTokenWithTypes(
    _tokenContract: Address,
    _tokenId: BigInt
  ): ethereum.CallResult<
    Array<
      AavegotchiDiamond__itemBalancesOfTokenWithTypesResultItemBalancesOfTokenWithTypes_Struct
    >
  > {
    let result = super.tryCall(
      "itemBalancesOfTokenWithTypes",
      "itemBalancesOfTokenWithTypes(address,uint256):((uint256,uint256,(string,string,string,int8[6],bool[16],uint8[],(uint8,uint8,uint8,uint8),uint256,uint256,uint256,uint32,uint8,bool,uint16,bool,uint8,int16,uint32))[])",
      [
        ethereum.Value.fromAddress(_tokenContract),
        ethereum.Value.fromUnsignedBigInt(_tokenId)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<
        AavegotchiDiamond__itemBalancesOfTokenWithTypesResultItemBalancesOfTokenWithTypes_Struct
      >()
    );
  }

  itemBalancesWithTypes(
    _owner: Address
  ): Array<AavegotchiDiamond__itemBalancesWithTypesResultOutput_Struct> {
    let result = super.call(
      "itemBalancesWithTypes",
      "itemBalancesWithTypes(address):((uint256,uint256,(string,string,string,int8[6],bool[16],uint8[],(uint8,uint8,uint8,uint8),uint256,uint256,uint256,uint32,uint8,bool,uint16,bool,uint8,int16,uint32))[])",
      [ethereum.Value.fromAddress(_owner)]
    );

    return result[0].toTupleArray<
      AavegotchiDiamond__itemBalancesWithTypesResultOutput_Struct
    >();
  }

  try_itemBalancesWithTypes(
    _owner: Address
  ): ethereum.CallResult<
    Array<AavegotchiDiamond__itemBalancesWithTypesResultOutput_Struct>
  > {
    let result = super.tryCall(
      "itemBalancesWithTypes",
      "itemBalancesWithTypes(address):((uint256,uint256,(string,string,string,int8[6],bool[16],uint8[],(uint8,uint8,uint8,uint8),uint256,uint256,uint256,uint32,uint8,bool,uint16,bool,uint8,int16,uint32))[])",
      [ethereum.Value.fromAddress(_owner)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<
        AavegotchiDiamond__itemBalancesWithTypesResultOutput_Struct
      >()
    );
  }

  totalWearableSets(): BigInt {
    let result = super.call(
      "totalWearableSets",
      "totalWearableSets():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_totalWearableSets(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "totalWearableSets",
      "totalWearableSets():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  uri(_id: BigInt): string {
    let result = super.call("uri", "uri(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(_id)
    ]);

    return result[0].toString();
  }

  try_uri(_id: BigInt): ethereum.CallResult<string> {
    let result = super.tryCall("uri", "uri(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(_id)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  onERC1155BatchReceived(
    param0: Address,
    param1: Address,
    param2: Array<BigInt>,
    param3: Array<BigInt>,
    param4: Bytes
  ): Bytes {
    let result = super.call(
      "onERC1155BatchReceived",
      "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes):(bytes4)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromAddress(param1),
        ethereum.Value.fromUnsignedBigIntArray(param2),
        ethereum.Value.fromUnsignedBigIntArray(param3),
        ethereum.Value.fromBytes(param4)
      ]
    );

    return result[0].toBytes();
  }

  try_onERC1155BatchReceived(
    param0: Address,
    param1: Address,
    param2: Array<BigInt>,
    param3: Array<BigInt>,
    param4: Bytes
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "onERC1155BatchReceived",
      "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes):(bytes4)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromAddress(param1),
        ethereum.Value.fromUnsignedBigIntArray(param2),
        ethereum.Value.fromUnsignedBigIntArray(param3),
        ethereum.Value.fromBytes(param4)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  onERC1155Received(
    param0: Address,
    param1: Address,
    param2: BigInt,
    param3: BigInt,
    param4: Bytes
  ): Bytes {
    let result = super.call(
      "onERC1155Received",
      "onERC1155Received(address,address,uint256,uint256,bytes):(bytes4)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromAddress(param1),
        ethereum.Value.fromUnsignedBigInt(param2),
        ethereum.Value.fromUnsignedBigInt(param3),
        ethereum.Value.fromBytes(param4)
      ]
    );

    return result[0].toBytes();
  }

  try_onERC1155Received(
    param0: Address,
    param1: Address,
    param2: BigInt,
    param3: BigInt,
    param4: Bytes
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "onERC1155Received",
      "onERC1155Received(address,address,uint256,uint256,bytes):(bytes4)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromAddress(param1),
        ethereum.Value.fromUnsignedBigInt(param2),
        ethereum.Value.fromUnsignedBigInt(param3),
        ethereum.Value.fromBytes(param4)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getNonce(user: Address): BigInt {
    let result = super.call("getNonce", "getNonce(address):(uint256)", [
      ethereum.Value.fromAddress(user)
    ]);

    return result[0].toBigInt();
  }

  try_getNonce(user: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("getNonce", "getNonce(address):(uint256)", [
      ethereum.Value.fromAddress(user)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getAavegotchiSvg(_tokenId: BigInt): string {
    let result = super.call(
      "getAavegotchiSvg",
      "getAavegotchiSvg(uint256):(string)",
      [ethereum.Value.fromUnsignedBigInt(_tokenId)]
    );

    return result[0].toString();
  }

  try_getAavegotchiSvg(_tokenId: BigInt): ethereum.CallResult<string> {
    let result = super.tryCall(
      "getAavegotchiSvg",
      "getAavegotchiSvg(uint256):(string)",
      [ethereum.Value.fromUnsignedBigInt(_tokenId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  getItemSvg(_itemId: BigInt): string {
    let result = super.call("getItemSvg", "getItemSvg(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(_itemId)
    ]);

    return result[0].toString();
  }

  try_getItemSvg(_itemId: BigInt): ethereum.CallResult<string> {
    let result = super.tryCall("getItemSvg", "getItemSvg(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(_itemId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  getSvg(_svgType: Bytes, _itemId: BigInt): string {
    let result = super.call("getSvg", "getSvg(bytes32,uint256):(string)", [
      ethereum.Value.fromFixedBytes(_svgType),
      ethereum.Value.fromUnsignedBigInt(_itemId)
    ]);

    return result[0].toString();
  }

  try_getSvg(_svgType: Bytes, _itemId: BigInt): ethereum.CallResult<string> {
    let result = super.tryCall("getSvg", "getSvg(bytes32,uint256):(string)", [
      ethereum.Value.fromFixedBytes(_svgType),
      ethereum.Value.fromUnsignedBigInt(_itemId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  getSvgs(_svgType: Bytes, _itemIds: Array<BigInt>): Array<string> {
    let result = super.call(
      "getSvgs",
      "getSvgs(bytes32,uint256[]):(string[])",
      [
        ethereum.Value.fromFixedBytes(_svgType),
        ethereum.Value.fromUnsignedBigIntArray(_itemIds)
      ]
    );

    return result[0].toStringArray();
  }

  try_getSvgs(
    _svgType: Bytes,
    _itemIds: Array<BigInt>
  ): ethereum.CallResult<Array<string>> {
    let result = super.tryCall(
      "getSvgs",
      "getSvgs(bytes32,uint256[]):(string[])",
      [
        ethereum.Value.fromFixedBytes(_svgType),
        ethereum.Value.fromUnsignedBigIntArray(_itemIds)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toStringArray());
  }

  portalAavegotchisSvg(_tokenId: BigInt): Array<string> {
    let result = super.call(
      "portalAavegotchisSvg",
      "portalAavegotchisSvg(uint256):(string[10])",
      [ethereum.Value.fromUnsignedBigInt(_tokenId)]
    );

    return result[0].toStringArray();
  }

  try_portalAavegotchisSvg(
    _tokenId: BigInt
  ): ethereum.CallResult<Array<string>> {
    let result = super.tryCall(
      "portalAavegotchisSvg",
      "portalAavegotchisSvg(uint256):(string[10])",
      [ethereum.Value.fromUnsignedBigInt(_tokenId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toStringArray());
  }

  previewAavegotchi(
    _hauntId: BigInt,
    _collateralType: Address,
    _numericTraits: Array<i32>,
    equippedWearables: Array<i32>
  ): string {
    let result = super.call(
      "previewAavegotchi",
      "previewAavegotchi(uint256,address,int16[6],uint16[16]):(string)",
      [
        ethereum.Value.fromUnsignedBigInt(_hauntId),
        ethereum.Value.fromAddress(_collateralType),
        ethereum.Value.fromI32Array(_numericTraits),
        ethereum.Value.fromI32Array(equippedWearables)
      ]
    );

    return result[0].toString();
  }

  try_previewAavegotchi(
    _hauntId: BigInt,
    _collateralType: Address,
    _numericTraits: Array<i32>,
    equippedWearables: Array<i32>
  ): ethereum.CallResult<string> {
    let result = super.tryCall(
      "previewAavegotchi",
      "previewAavegotchi(uint256,address,int16[6],uint16[16]):(string)",
      [
        ethereum.Value.fromUnsignedBigInt(_hauntId),
        ethereum.Value.fromAddress(_collateralType),
        ethereum.Value.fromI32Array(_numericTraits),
        ethereum.Value.fromI32Array(equippedWearables)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  getAavegotchiSideSvgs(_tokenId: BigInt): Array<string> {
    let result = super.call(
      "getAavegotchiSideSvgs",
      "getAavegotchiSideSvgs(uint256):(string[])",
      [ethereum.Value.fromUnsignedBigInt(_tokenId)]
    );

    return result[0].toStringArray();
  }

  try_getAavegotchiSideSvgs(
    _tokenId: BigInt
  ): ethereum.CallResult<Array<string>> {
    let result = super.tryCall(
      "getAavegotchiSideSvgs",
      "getAavegotchiSideSvgs(uint256):(string[])",
      [ethereum.Value.fromUnsignedBigInt(_tokenId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toStringArray());
  }

  getItemSvgs(_itemId: BigInt): Array<string> {
    let result = super.call("getItemSvgs", "getItemSvgs(uint256):(string[])", [
      ethereum.Value.fromUnsignedBigInt(_itemId)
    ]);

    return result[0].toStringArray();
  }

  try_getItemSvgs(_itemId: BigInt): ethereum.CallResult<Array<string>> {
    let result = super.tryCall(
      "getItemSvgs",
      "getItemSvgs(uint256):(string[])",
      [ethereum.Value.fromUnsignedBigInt(_itemId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toStringArray());
  }

  previewSideAavegotchi(
    _hauntId: BigInt,
    _collateralType: Address,
    _numericTraits: Array<i32>,
    equippedWearables: Array<i32>
  ): Array<string> {
    let result = super.call(
      "previewSideAavegotchi",
      "previewSideAavegotchi(uint256,address,int16[6],uint16[16]):(string[])",
      [
        ethereum.Value.fromUnsignedBigInt(_hauntId),
        ethereum.Value.fromAddress(_collateralType),
        ethereum.Value.fromI32Array(_numericTraits),
        ethereum.Value.fromI32Array(equippedWearables)
      ]
    );

    return result[0].toStringArray();
  }

  try_previewSideAavegotchi(
    _hauntId: BigInt,
    _collateralType: Address,
    _numericTraits: Array<i32>,
    equippedWearables: Array<i32>
  ): ethereum.CallResult<Array<string>> {
    let result = super.tryCall(
      "previewSideAavegotchi",
      "previewSideAavegotchi(uint256,address,int16[6],uint16[16]):(string[])",
      [
        ethereum.Value.fromUnsignedBigInt(_hauntId),
        ethereum.Value.fromAddress(_collateralType),
        ethereum.Value.fromI32Array(_numericTraits),
        ethereum.Value.fromI32Array(equippedWearables)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toStringArray());
  }

  keyHash(): Bytes {
    let result = super.call("keyHash", "keyHash():(bytes32)", []);

    return result[0].toBytes();
  }

  try_keyHash(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("keyHash", "keyHash():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  link(): Address {
    let result = super.call("link", "link():(address)", []);

    return result[0].toAddress();
  }

  try_link(): ethereum.CallResult<Address> {
    let result = super.tryCall("link", "link():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  linkBalance(): BigInt {
    let result = super.call("linkBalance", "linkBalance():(uint256)", []);

    return result[0].toBigInt();
  }

  try_linkBalance(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("linkBalance", "linkBalance():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  vrfCoordinator(): Address {
    let result = super.call("vrfCoordinator", "vrfCoordinator():(address)", []);

    return result[0].toAddress();
  }

  try_vrfCoordinator(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "vrfCoordinator",
      "vrfCoordinator():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getGotchiLendingFromToken(
    _erc721TokenId: BigInt
  ): AavegotchiDiamond__getGotchiLendingFromTokenResultListing_Struct {
    let result = super.call(
      "getGotchiLendingFromToken",
      "getGotchiLendingFromToken(uint32):((address,uint96,address,uint32,uint32,uint32,address,uint40,uint40,bool,bool,address,uint8[3],uint40,uint32,address[]))",
      [ethereum.Value.fromUnsignedBigInt(_erc721TokenId)]
    );

    return changetype<
      AavegotchiDiamond__getGotchiLendingFromTokenResultListing_Struct
    >(result[0].toTuple());
  }

  try_getGotchiLendingFromToken(
    _erc721TokenId: BigInt
  ): ethereum.CallResult<
    AavegotchiDiamond__getGotchiLendingFromTokenResultListing_Struct
  > {
    let result = super.tryCall(
      "getGotchiLendingFromToken",
      "getGotchiLendingFromToken(uint32):((address,uint96,address,uint32,uint32,uint32,address,uint40,uint40,bool,bool,address,uint8[3],uint40,uint32,address[]))",
      [ethereum.Value.fromUnsignedBigInt(_erc721TokenId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<
        AavegotchiDiamond__getGotchiLendingFromTokenResultListing_Struct
      >(value[0].toTuple())
    );
  }

  getGotchiLendingIdByToken(_erc721TokenId: BigInt): BigInt {
    let result = super.call(
      "getGotchiLendingIdByToken",
      "getGotchiLendingIdByToken(uint32):(uint32)",
      [ethereum.Value.fromUnsignedBigInt(_erc721TokenId)]
    );

    return result[0].toBigInt();
  }

  try_getGotchiLendingIdByToken(
    _erc721TokenId: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getGotchiLendingIdByToken",
      "getGotchiLendingIdByToken(uint32):(uint32)",
      [ethereum.Value.fromUnsignedBigInt(_erc721TokenId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getGotchiLendingListingInfo(
    _listingId: BigInt
  ): AavegotchiDiamond__getGotchiLendingListingInfoResult {
    let result = super.call(
      "getGotchiLendingListingInfo",
      "getGotchiLendingListingInfo(uint32):((address,uint96,address,uint32,uint32,uint32,address,uint40,uint40,bool,bool,address,uint8[3],uint40,uint32,address[]),(uint256,string,address,uint256,uint256,int16[6],int16[6],uint16[16],address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,bool,(uint256,uint256,(string,string,string,int8[6],bool[16],uint8[],(uint8,uint8,uint8,uint8),uint256,uint256,uint256,uint32,uint8,bool,uint16,bool,uint8,int16,uint32))[]))",
      [ethereum.Value.fromUnsignedBigInt(_listingId)]
    );

    return changetype<AavegotchiDiamond__getGotchiLendingListingInfoResult>(
      new AavegotchiDiamond__getGotchiLendingListingInfoResult(
        changetype<
          AavegotchiDiamond__getGotchiLendingListingInfoResultListing_Struct
        >(result[0].toTuple()),
        changetype<
          AavegotchiDiamond__getGotchiLendingListingInfoResultAavegotchiInfo_Struct
        >(result[1].toTuple())
      )
    );
  }

  try_getGotchiLendingListingInfo(
    _listingId: BigInt
  ): ethereum.CallResult<AavegotchiDiamond__getGotchiLendingListingInfoResult> {
    let result = super.tryCall(
      "getGotchiLendingListingInfo",
      "getGotchiLendingListingInfo(uint32):((address,uint96,address,uint32,uint32,uint32,address,uint40,uint40,bool,bool,address,uint8[3],uint40,uint32,address[]),(uint256,string,address,uint256,uint256,int16[6],int16[6],uint16[16],address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,bool,(uint256,uint256,(string,string,string,int8[6],bool[16],uint8[],(uint8,uint8,uint8,uint8),uint256,uint256,uint256,uint32,uint8,bool,uint16,bool,uint8,int16,uint32))[]))",
      [ethereum.Value.fromUnsignedBigInt(_listingId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<AavegotchiDiamond__getGotchiLendingListingInfoResult>(
        new AavegotchiDiamond__getGotchiLendingListingInfoResult(
          changetype<
            AavegotchiDiamond__getGotchiLendingListingInfoResultListing_Struct
          >(value[0].toTuple()),
          changetype<
            AavegotchiDiamond__getGotchiLendingListingInfoResultAavegotchiInfo_Struct
          >(value[1].toTuple())
        )
      )
    );
  }

  getGotchiLendings(
    _status: Bytes,
    _length: BigInt
  ): Array<AavegotchiDiamond__getGotchiLendingsResultListings_Struct> {
    let result = super.call(
      "getGotchiLendings",
      "getGotchiLendings(bytes32,uint256):((address,uint96,address,uint32,uint32,uint32,address,uint40,uint40,bool,bool,address,uint8[3],uint40,uint32,address[])[])",
      [
        ethereum.Value.fromFixedBytes(_status),
        ethereum.Value.fromUnsignedBigInt(_length)
      ]
    );

    return result[0].toTupleArray<
      AavegotchiDiamond__getGotchiLendingsResultListings_Struct
    >();
  }

  try_getGotchiLendings(
    _status: Bytes,
    _length: BigInt
  ): ethereum.CallResult<
    Array<AavegotchiDiamond__getGotchiLendingsResultListings_Struct>
  > {
    let result = super.tryCall(
      "getGotchiLendings",
      "getGotchiLendings(bytes32,uint256):((address,uint96,address,uint32,uint32,uint32,address,uint40,uint40,bool,bool,address,uint8[3],uint40,uint32,address[])[])",
      [
        ethereum.Value.fromFixedBytes(_status),
        ethereum.Value.fromUnsignedBigInt(_length)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<
        AavegotchiDiamond__getGotchiLendingsResultListings_Struct
      >()
    );
  }

  getLendingListingInfo(
    _listingId: BigInt
  ): AavegotchiDiamond__getLendingListingInfoResultListing_Struct {
    let result = super.call(
      "getLendingListingInfo",
      "getLendingListingInfo(uint32):((address,uint96,address,uint32,uint32,uint32,address,uint40,uint40,bool,bool,address,uint8[3],uint40,uint32,address[]))",
      [ethereum.Value.fromUnsignedBigInt(_listingId)]
    );

    return changetype<
      AavegotchiDiamond__getLendingListingInfoResultListing_Struct
    >(result[0].toTuple());
  }

  try_getLendingListingInfo(
    _listingId: BigInt
  ): ethereum.CallResult<
    AavegotchiDiamond__getLendingListingInfoResultListing_Struct
  > {
    let result = super.tryCall(
      "getLendingListingInfo",
      "getLendingListingInfo(uint32):((address,uint96,address,uint32,uint32,uint32,address,uint40,uint40,bool,bool,address,uint8[3],uint40,uint32,address[]))",
      [ethereum.Value.fromUnsignedBigInt(_listingId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<AavegotchiDiamond__getLendingListingInfoResultListing_Struct>(
        value[0].toTuple()
      )
    );
  }

  getOwnerGotchiLendings(
    _lender: Address,
    _status: Bytes,
    _length: BigInt
  ): Array<AavegotchiDiamond__getOwnerGotchiLendingsResultListings_Struct> {
    let result = super.call(
      "getOwnerGotchiLendings",
      "getOwnerGotchiLendings(address,bytes32,uint256):((address,uint96,address,uint32,uint32,uint32,address,uint40,uint40,bool,bool,address,uint8[3],uint40,uint32,address[])[])",
      [
        ethereum.Value.fromAddress(_lender),
        ethereum.Value.fromFixedBytes(_status),
        ethereum.Value.fromUnsignedBigInt(_length)
      ]
    );

    return result[0].toTupleArray<
      AavegotchiDiamond__getOwnerGotchiLendingsResultListings_Struct
    >();
  }

  try_getOwnerGotchiLendings(
    _lender: Address,
    _status: Bytes,
    _length: BigInt
  ): ethereum.CallResult<
    Array<AavegotchiDiamond__getOwnerGotchiLendingsResultListings_Struct>
  > {
    let result = super.tryCall(
      "getOwnerGotchiLendings",
      "getOwnerGotchiLendings(address,bytes32,uint256):((address,uint96,address,uint32,uint32,uint32,address,uint40,uint40,bool,bool,address,uint8[3],uint40,uint32,address[])[])",
      [
        ethereum.Value.fromAddress(_lender),
        ethereum.Value.fromFixedBytes(_status),
        ethereum.Value.fromUnsignedBigInt(_length)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<
        AavegotchiDiamond__getOwnerGotchiLendingsResultListings_Struct
      >()
    );
  }

  isAavegotchiLent(_erc721TokenId: BigInt): boolean {
    let result = super.call(
      "isAavegotchiLent",
      "isAavegotchiLent(uint32):(bool)",
      [ethereum.Value.fromUnsignedBigInt(_erc721TokenId)]
    );

    return result[0].toBoolean();
  }

  try_isAavegotchiLent(_erc721TokenId: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isAavegotchiLent",
      "isAavegotchiLent(uint32):(bool)",
      [ethereum.Value.fromUnsignedBigInt(_erc721TokenId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  getWhitelist(
    _whitelistId: BigInt
  ): AavegotchiDiamond__getWhitelistResultValue0Struct {
    let result = super.call(
      "getWhitelist",
      "getWhitelist(uint32):((address,string,address[]))",
      [ethereum.Value.fromUnsignedBigInt(_whitelistId)]
    );

    return changetype<AavegotchiDiamond__getWhitelistResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_getWhitelist(
    _whitelistId: BigInt
  ): ethereum.CallResult<AavegotchiDiamond__getWhitelistResultValue0Struct> {
    let result = super.tryCall(
      "getWhitelist",
      "getWhitelist(uint32):((address,string,address[]))",
      [ethereum.Value.fromUnsignedBigInt(_whitelistId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<AavegotchiDiamond__getWhitelistResultValue0Struct>(
        value[0].toTuple()
      )
    );
  }

  getWhitelists(): Array<AavegotchiDiamond__getWhitelistsResultValue0Struct> {
    let result = super.call(
      "getWhitelists",
      "getWhitelists():((address,string,address[])[])",
      []
    );

    return result[0].toTupleArray<
      AavegotchiDiamond__getWhitelistsResultValue0Struct
    >();
  }

  try_getWhitelists(): ethereum.CallResult<
    Array<AavegotchiDiamond__getWhitelistsResultValue0Struct>
  > {
    let result = super.tryCall(
      "getWhitelists",
      "getWhitelists():((address,string,address[])[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<
        AavegotchiDiamond__getWhitelistsResultValue0Struct
      >()
    );
  }
}

export class ApproveCall extends ethereum.Call {
  get inputs(): ApproveCall__Inputs {
    return new ApproveCall__Inputs(this);
  }

  get outputs(): ApproveCall__Outputs {
    return new ApproveCall__Outputs(this);
  }
}

export class ApproveCall__Inputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }

  get _approved(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ApproveCall__Outputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }
}

export class SafeBatchTransferFromCall extends ethereum.Call {
  get inputs(): SafeBatchTransferFromCall__Inputs {
    return new SafeBatchTransferFromCall__Inputs(this);
  }

  get outputs(): SafeBatchTransferFromCall__Outputs {
    return new SafeBatchTransferFromCall__Outputs(this);
  }
}

export class SafeBatchTransferFromCall__Inputs {
  _call: SafeBatchTransferFromCall;

  constructor(call: SafeBatchTransferFromCall) {
    this._call = call;
  }

  get _from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _tokenIds(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }

  get _data(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class SafeBatchTransferFromCall__Outputs {
  _call: SafeBatchTransferFromCall;

  constructor(call: SafeBatchTransferFromCall) {
    this._call = call;
  }
}

export class SafeTransferFromCall extends ethereum.Call {
  get inputs(): SafeTransferFromCall__Inputs {
    return new SafeTransferFromCall__Inputs(this);
  }

  get outputs(): SafeTransferFromCall__Outputs {
    return new SafeTransferFromCall__Outputs(this);
  }
}

export class SafeTransferFromCall__Inputs {
  _call: SafeTransferFromCall;

  constructor(call: SafeTransferFromCall) {
    this._call = call;
  }

  get _from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class SafeTransferFromCall__Outputs {
  _call: SafeTransferFromCall;

  constructor(call: SafeTransferFromCall) {
    this._call = call;
  }
}

export class SafeTransferFrom1Call extends ethereum.Call {
  get inputs(): SafeTransferFrom1Call__Inputs {
    return new SafeTransferFrom1Call__Inputs(this);
  }

  get outputs(): SafeTransferFrom1Call__Outputs {
    return new SafeTransferFrom1Call__Outputs(this);
  }
}

export class SafeTransferFrom1Call__Inputs {
  _call: SafeTransferFrom1Call;

  constructor(call: SafeTransferFrom1Call) {
    this._call = call;
  }

  get _from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _data(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class SafeTransferFrom1Call__Outputs {
  _call: SafeTransferFrom1Call;

  constructor(call: SafeTransferFrom1Call) {
    this._call = call;
  }
}

export class SetApprovalForAllCall extends ethereum.Call {
  get inputs(): SetApprovalForAllCall__Inputs {
    return new SetApprovalForAllCall__Inputs(this);
  }

  get outputs(): SetApprovalForAllCall__Outputs {
    return new SetApprovalForAllCall__Outputs(this);
  }
}

export class SetApprovalForAllCall__Inputs {
  _call: SetApprovalForAllCall;

  constructor(call: SetApprovalForAllCall) {
    this._call = call;
  }

  get _operator(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _approved(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetApprovalForAllCall__Outputs {
  _call: SetApprovalForAllCall;

  constructor(call: SetApprovalForAllCall) {
    this._call = call;
  }
}

export class SetPetOperatorForAllCall extends ethereum.Call {
  get inputs(): SetPetOperatorForAllCall__Inputs {
    return new SetPetOperatorForAllCall__Inputs(this);
  }

  get outputs(): SetPetOperatorForAllCall__Outputs {
    return new SetPetOperatorForAllCall__Outputs(this);
  }
}

export class SetPetOperatorForAllCall__Inputs {
  _call: SetPetOperatorForAllCall;

  constructor(call: SetPetOperatorForAllCall) {
    this._call = call;
  }

  get _operator(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _approved(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetPetOperatorForAllCall__Outputs {
  _call: SetPetOperatorForAllCall;

  constructor(call: SetPetOperatorForAllCall) {
    this._call = call;
  }
}

export class TransferFromCall extends ethereum.Call {
  get inputs(): TransferFromCall__Inputs {
    return new TransferFromCall__Inputs(this);
  }

  get outputs(): TransferFromCall__Outputs {
    return new TransferFromCall__Outputs(this);
  }
}

export class TransferFromCall__Inputs {
  _call: TransferFromCall;

  constructor(call: TransferFromCall) {
    this._call = call;
  }

  get _from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class TransferFromCall__Outputs {
  _call: TransferFromCall;

  constructor(call: TransferFromCall) {
    this._call = call;
  }
}

export class ClaimAavegotchiCall extends ethereum.Call {
  get inputs(): ClaimAavegotchiCall__Inputs {
    return new ClaimAavegotchiCall__Inputs(this);
  }

  get outputs(): ClaimAavegotchiCall__Outputs {
    return new ClaimAavegotchiCall__Outputs(this);
  }
}

export class ClaimAavegotchiCall__Inputs {
  _call: ClaimAavegotchiCall;

  constructor(call: ClaimAavegotchiCall) {
    this._call = call;
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _option(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _stakeAmount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class ClaimAavegotchiCall__Outputs {
  _call: ClaimAavegotchiCall;

  constructor(call: ClaimAavegotchiCall) {
    this._call = call;
  }
}

export class InteractCall extends ethereum.Call {
  get inputs(): InteractCall__Inputs {
    return new InteractCall__Inputs(this);
  }

  get outputs(): InteractCall__Outputs {
    return new InteractCall__Outputs(this);
  }
}

export class InteractCall__Inputs {
  _call: InteractCall;

  constructor(call: InteractCall) {
    this._call = call;
  }

  get _tokenIds(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }
}

export class InteractCall__Outputs {
  _call: InteractCall;

  constructor(call: InteractCall) {
    this._call = call;
  }
}

export class SetAavegotchiNameCall extends ethereum.Call {
  get inputs(): SetAavegotchiNameCall__Inputs {
    return new SetAavegotchiNameCall__Inputs(this);
  }

  get outputs(): SetAavegotchiNameCall__Outputs {
    return new SetAavegotchiNameCall__Outputs(this);
  }
}

export class SetAavegotchiNameCall__Inputs {
  _call: SetAavegotchiNameCall;

  constructor(call: SetAavegotchiNameCall) {
    this._call = call;
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _name(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class SetAavegotchiNameCall__Outputs {
  _call: SetAavegotchiNameCall;

  constructor(call: SetAavegotchiNameCall) {
    this._call = call;
  }
}

export class SpendSkillPointsCall extends ethereum.Call {
  get inputs(): SpendSkillPointsCall__Inputs {
    return new SpendSkillPointsCall__Inputs(this);
  }

  get outputs(): SpendSkillPointsCall__Outputs {
    return new SpendSkillPointsCall__Outputs(this);
  }
}

export class SpendSkillPointsCall__Inputs {
  _call: SpendSkillPointsCall;

  constructor(call: SpendSkillPointsCall) {
    this._call = call;
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _values(): Array<i32> {
    return this._call.inputValues[1].value.toI32Array();
  }
}

export class SpendSkillPointsCall__Outputs {
  _call: SpendSkillPointsCall;

  constructor(call: SpendSkillPointsCall) {
    this._call = call;
  }
}

export class DepositCall extends ethereum.Call {
  get inputs(): DepositCall__Inputs {
    return new DepositCall__Inputs(this);
  }

  get outputs(): DepositCall__Outputs {
    return new DepositCall__Outputs(this);
  }
}

export class DepositCall__Inputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }

  get _user(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _depositData(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class DepositCall__Outputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }
}

export class SetChildChainManagerCall extends ethereum.Call {
  get inputs(): SetChildChainManagerCall__Inputs {
    return new SetChildChainManagerCall__Inputs(this);
  }

  get outputs(): SetChildChainManagerCall__Outputs {
    return new SetChildChainManagerCall__Outputs(this);
  }
}

export class SetChildChainManagerCall__Inputs {
  _call: SetChildChainManagerCall;

  constructor(call: SetChildChainManagerCall) {
    this._call = call;
  }

  get _newChildChainManager(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetChildChainManagerCall__Outputs {
  _call: SetChildChainManagerCall;

  constructor(call: SetChildChainManagerCall) {
    this._call = call;
  }
}

export class WithdrawAavegotchiBatchCall extends ethereum.Call {
  get inputs(): WithdrawAavegotchiBatchCall__Inputs {
    return new WithdrawAavegotchiBatchCall__Inputs(this);
  }

  get outputs(): WithdrawAavegotchiBatchCall__Outputs {
    return new WithdrawAavegotchiBatchCall__Outputs(this);
  }
}

export class WithdrawAavegotchiBatchCall__Inputs {
  _call: WithdrawAavegotchiBatchCall;

  constructor(call: WithdrawAavegotchiBatchCall) {
    this._call = call;
  }

  get _tokenIds(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }
}

export class WithdrawAavegotchiBatchCall__Outputs {
  _call: WithdrawAavegotchiBatchCall;

  constructor(call: WithdrawAavegotchiBatchCall) {
    this._call = call;
  }
}

export class WithdrawItemsBatchCall extends ethereum.Call {
  get inputs(): WithdrawItemsBatchCall__Inputs {
    return new WithdrawItemsBatchCall__Inputs(this);
  }

  get outputs(): WithdrawItemsBatchCall__Outputs {
    return new WithdrawItemsBatchCall__Outputs(this);
  }
}

export class WithdrawItemsBatchCall__Inputs {
  _call: WithdrawItemsBatchCall;

  constructor(call: WithdrawItemsBatchCall) {
    this._call = call;
  }

  get _ids(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }

  get _values(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }
}

export class WithdrawItemsBatchCall__Outputs {
  _call: WithdrawItemsBatchCall;

  constructor(call: WithdrawItemsBatchCall) {
    this._call = call;
  }
}

export class DecreaseAndDestroyCall extends ethereum.Call {
  get inputs(): DecreaseAndDestroyCall__Inputs {
    return new DecreaseAndDestroyCall__Inputs(this);
  }

  get outputs(): DecreaseAndDestroyCall__Outputs {
    return new DecreaseAndDestroyCall__Outputs(this);
  }
}

export class DecreaseAndDestroyCall__Inputs {
  _call: DecreaseAndDestroyCall;

  constructor(call: DecreaseAndDestroyCall) {
    this._call = call;
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _toId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class DecreaseAndDestroyCall__Outputs {
  _call: DecreaseAndDestroyCall;

  constructor(call: DecreaseAndDestroyCall) {
    this._call = call;
  }
}

export class DecreaseStakeCall extends ethereum.Call {
  get inputs(): DecreaseStakeCall__Inputs {
    return new DecreaseStakeCall__Inputs(this);
  }

  get outputs(): DecreaseStakeCall__Outputs {
    return new DecreaseStakeCall__Outputs(this);
  }
}

export class DecreaseStakeCall__Inputs {
  _call: DecreaseStakeCall;

  constructor(call: DecreaseStakeCall) {
    this._call = call;
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _reduceAmount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class DecreaseStakeCall__Outputs {
  _call: DecreaseStakeCall;

  constructor(call: DecreaseStakeCall) {
    this._call = call;
  }
}

export class IncreaseStakeCall extends ethereum.Call {
  get inputs(): IncreaseStakeCall__Inputs {
    return new IncreaseStakeCall__Inputs(this);
  }

  get outputs(): IncreaseStakeCall__Outputs {
    return new IncreaseStakeCall__Outputs(this);
  }
}

export class IncreaseStakeCall__Inputs {
  _call: IncreaseStakeCall;

  constructor(call: IncreaseStakeCall) {
    this._call = call;
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _stakeAmount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class IncreaseStakeCall__Outputs {
  _call: IncreaseStakeCall;

  constructor(call: IncreaseStakeCall) {
    this._call = call;
  }
}

export class SetCollateralEyeShapeSvgIdCall extends ethereum.Call {
  get inputs(): SetCollateralEyeShapeSvgIdCall__Inputs {
    return new SetCollateralEyeShapeSvgIdCall__Inputs(this);
  }

  get outputs(): SetCollateralEyeShapeSvgIdCall__Outputs {
    return new SetCollateralEyeShapeSvgIdCall__Outputs(this);
  }
}

export class SetCollateralEyeShapeSvgIdCall__Inputs {
  _call: SetCollateralEyeShapeSvgIdCall;

  constructor(call: SetCollateralEyeShapeSvgIdCall) {
    this._call = call;
  }

  get _collateralToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _svgId(): i32 {
    return this._call.inputValues[1].value.toI32();
  }
}

export class SetCollateralEyeShapeSvgIdCall__Outputs {
  _call: SetCollateralEyeShapeSvgIdCall;

  constructor(call: SetCollateralEyeShapeSvgIdCall) {
    this._call = call;
  }
}

export class AddCollateralTypesCall extends ethereum.Call {
  get inputs(): AddCollateralTypesCall__Inputs {
    return new AddCollateralTypesCall__Inputs(this);
  }

  get outputs(): AddCollateralTypesCall__Outputs {
    return new AddCollateralTypesCall__Outputs(this);
  }
}

export class AddCollateralTypesCall__Inputs {
  _call: AddCollateralTypesCall;

  constructor(call: AddCollateralTypesCall) {
    this._call = call;
  }

  get _hauntId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _collateralTypes(): Array<AddCollateralTypesCall_collateralTypesStruct> {
    return this._call.inputValues[1].value.toTupleArray<
      AddCollateralTypesCall_collateralTypesStruct
    >();
  }
}

export class AddCollateralTypesCall__Outputs {
  _call: AddCollateralTypesCall;

  constructor(call: AddCollateralTypesCall) {
    this._call = call;
  }
}

export class AddCollateralTypesCall_collateralTypesStruct extends ethereum.Tuple {
  get collateralType(): Address {
    return this[0].toAddress();
  }

  get collateralTypeInfo(): AddCollateralTypesCall_collateralTypesCollateralTypeInfoStruct {
    return changetype<
      AddCollateralTypesCall_collateralTypesCollateralTypeInfoStruct
    >(this[1].toTuple());
  }
}

export class AddCollateralTypesCall_collateralTypesCollateralTypeInfoStruct extends ethereum.Tuple {
  get modifiers(): Array<i32> {
    return this[0].toI32Array();
  }

  get primaryColor(): Bytes {
    return this[1].toBytes();
  }

  get secondaryColor(): Bytes {
    return this[2].toBytes();
  }

  get cheekColor(): Bytes {
    return this[3].toBytes();
  }

  get svgId(): i32 {
    return this[4].toI32();
  }

  get eyeShapeSvgId(): i32 {
    return this[5].toI32();
  }

  get conversionRate(): i32 {
    return this[6].toI32();
  }

  get delisted(): boolean {
    return this[7].toBoolean();
  }
}

export class AddGameManagersCall extends ethereum.Call {
  get inputs(): AddGameManagersCall__Inputs {
    return new AddGameManagersCall__Inputs(this);
  }

  get outputs(): AddGameManagersCall__Outputs {
    return new AddGameManagersCall__Outputs(this);
  }
}

export class AddGameManagersCall__Inputs {
  _call: AddGameManagersCall;

  constructor(call: AddGameManagersCall) {
    this._call = call;
  }

  get _newGameManagers(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get _limits(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }
}

export class AddGameManagersCall__Outputs {
  _call: AddGameManagersCall;

  constructor(call: AddGameManagersCall) {
    this._call = call;
  }
}

export class AddItemManagersCall extends ethereum.Call {
  get inputs(): AddItemManagersCall__Inputs {
    return new AddItemManagersCall__Inputs(this);
  }

  get outputs(): AddItemManagersCall__Outputs {
    return new AddItemManagersCall__Outputs(this);
  }
}

export class AddItemManagersCall__Inputs {
  _call: AddItemManagersCall;

  constructor(call: AddItemManagersCall) {
    this._call = call;
  }

  get _newItemManagers(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }
}

export class AddItemManagersCall__Outputs {
  _call: AddItemManagersCall;

  constructor(call: AddItemManagersCall) {
    this._call = call;
  }
}

export class AddItemTypesCall extends ethereum.Call {
  get inputs(): AddItemTypesCall__Inputs {
    return new AddItemTypesCall__Inputs(this);
  }

  get outputs(): AddItemTypesCall__Outputs {
    return new AddItemTypesCall__Outputs(this);
  }
}

export class AddItemTypesCall__Inputs {
  _call: AddItemTypesCall;

  constructor(call: AddItemTypesCall) {
    this._call = call;
  }

  get _itemTypes(): Array<AddItemTypesCall_itemTypesStruct> {
    return this._call.inputValues[0].value.toTupleArray<
      AddItemTypesCall_itemTypesStruct
    >();
  }
}

export class AddItemTypesCall__Outputs {
  _call: AddItemTypesCall;

  constructor(call: AddItemTypesCall) {
    this._call = call;
  }
}

export class AddItemTypesCall_itemTypesStruct extends ethereum.Tuple {
  get name(): string {
    return this[0].toString();
  }

  get description(): string {
    return this[1].toString();
  }

  get author(): string {
    return this[2].toString();
  }

  get traitModifiers(): Array<i32> {
    return this[3].toI32Array();
  }

  get slotPositions(): Array<boolean> {
    return this[4].toBooleanArray();
  }

  get allowedCollaterals(): Array<i32> {
    return this[5].toI32Array();
  }

  get dimensions(): AddItemTypesCall_itemTypesDimensionsStruct {
    return changetype<AddItemTypesCall_itemTypesDimensionsStruct>(
      this[6].toTuple()
    );
  }

  get ghstPrice(): BigInt {
    return this[7].toBigInt();
  }

  get maxQuantity(): BigInt {
    return this[8].toBigInt();
  }

  get totalQuantity(): BigInt {
    return this[9].toBigInt();
  }

  get svgId(): BigInt {
    return this[10].toBigInt();
  }

  get rarityScoreModifier(): i32 {
    return this[11].toI32();
  }

  get canPurchaseWithGhst(): boolean {
    return this[12].toBoolean();
  }

  get minLevel(): i32 {
    return this[13].toI32();
  }

  get canBeTransferred(): boolean {
    return this[14].toBoolean();
  }

  get category(): i32 {
    return this[15].toI32();
  }

  get kinshipBonus(): i32 {
    return this[16].toI32();
  }

  get experienceBonus(): BigInt {
    return this[17].toBigInt();
  }
}

export class AddItemTypesCall_itemTypesDimensionsStruct extends ethereum.Tuple {
  get x(): i32 {
    return this[0].toI32();
  }

  get y(): i32 {
    return this[1].toI32();
  }

  get width(): i32 {
    return this[2].toI32();
  }

  get height(): i32 {
    return this[3].toI32();
  }
}

export class AddItemTypesAndSvgsCall extends ethereum.Call {
  get inputs(): AddItemTypesAndSvgsCall__Inputs {
    return new AddItemTypesAndSvgsCall__Inputs(this);
  }

  get outputs(): AddItemTypesAndSvgsCall__Outputs {
    return new AddItemTypesAndSvgsCall__Outputs(this);
  }
}

export class AddItemTypesAndSvgsCall__Inputs {
  _call: AddItemTypesAndSvgsCall;

  constructor(call: AddItemTypesAndSvgsCall) {
    this._call = call;
  }

  get _itemTypes(): Array<AddItemTypesAndSvgsCall_itemTypesStruct> {
    return this._call.inputValues[0].value.toTupleArray<
      AddItemTypesAndSvgsCall_itemTypesStruct
    >();
  }

  get _svg(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _typesAndSizes(): Array<AddItemTypesAndSvgsCall_typesAndSizesStruct> {
    return this._call.inputValues[2].value.toTupleArray<
      AddItemTypesAndSvgsCall_typesAndSizesStruct
    >();
  }
}

export class AddItemTypesAndSvgsCall__Outputs {
  _call: AddItemTypesAndSvgsCall;

  constructor(call: AddItemTypesAndSvgsCall) {
    this._call = call;
  }
}

export class AddItemTypesAndSvgsCall_itemTypesStruct extends ethereum.Tuple {
  get name(): string {
    return this[0].toString();
  }

  get description(): string {
    return this[1].toString();
  }

  get author(): string {
    return this[2].toString();
  }

  get traitModifiers(): Array<i32> {
    return this[3].toI32Array();
  }

  get slotPositions(): Array<boolean> {
    return this[4].toBooleanArray();
  }

  get allowedCollaterals(): Array<i32> {
    return this[5].toI32Array();
  }

  get dimensions(): AddItemTypesAndSvgsCall_itemTypesDimensionsStruct {
    return changetype<AddItemTypesAndSvgsCall_itemTypesDimensionsStruct>(
      this[6].toTuple()
    );
  }

  get ghstPrice(): BigInt {
    return this[7].toBigInt();
  }

  get maxQuantity(): BigInt {
    return this[8].toBigInt();
  }

  get totalQuantity(): BigInt {
    return this[9].toBigInt();
  }

  get svgId(): BigInt {
    return this[10].toBigInt();
  }

  get rarityScoreModifier(): i32 {
    return this[11].toI32();
  }

  get canPurchaseWithGhst(): boolean {
    return this[12].toBoolean();
  }

  get minLevel(): i32 {
    return this[13].toI32();
  }

  get canBeTransferred(): boolean {
    return this[14].toBoolean();
  }

  get category(): i32 {
    return this[15].toI32();
  }

  get kinshipBonus(): i32 {
    return this[16].toI32();
  }

  get experienceBonus(): BigInt {
    return this[17].toBigInt();
  }
}

export class AddItemTypesAndSvgsCall_itemTypesDimensionsStruct extends ethereum.Tuple {
  get x(): i32 {
    return this[0].toI32();
  }

  get y(): i32 {
    return this[1].toI32();
  }

  get width(): i32 {
    return this[2].toI32();
  }

  get height(): i32 {
    return this[3].toI32();
  }
}

export class AddItemTypesAndSvgsCall_typesAndSizesStruct extends ethereum.Tuple {
  get svgType(): Bytes {
    return this[0].toBytes();
  }

  get sizes(): Array<BigInt> {
    return this[1].toBigIntArray();
  }
}

export class AddWearableSetsCall extends ethereum.Call {
  get inputs(): AddWearableSetsCall__Inputs {
    return new AddWearableSetsCall__Inputs(this);
  }

  get outputs(): AddWearableSetsCall__Outputs {
    return new AddWearableSetsCall__Outputs(this);
  }
}

export class AddWearableSetsCall__Inputs {
  _call: AddWearableSetsCall;

  constructor(call: AddWearableSetsCall) {
    this._call = call;
  }

  get _wearableSets(): Array<AddWearableSetsCall_wearableSetsStruct> {
    return this._call.inputValues[0].value.toTupleArray<
      AddWearableSetsCall_wearableSetsStruct
    >();
  }
}

export class AddWearableSetsCall__Outputs {
  _call: AddWearableSetsCall;

  constructor(call: AddWearableSetsCall) {
    this._call = call;
  }
}

export class AddWearableSetsCall_wearableSetsStruct extends ethereum.Tuple {
  get name(): string {
    return this[0].toString();
  }

  get allowedCollaterals(): Array<i32> {
    return this[1].toI32Array();
  }

  get wearableIds(): Array<i32> {
    return this[2].toI32Array();
  }

  get traitsBonuses(): Array<i32> {
    return this[3].toI32Array();
  }
}

export class CreateHauntCall extends ethereum.Call {
  get inputs(): CreateHauntCall__Inputs {
    return new CreateHauntCall__Inputs(this);
  }

  get outputs(): CreateHauntCall__Outputs {
    return new CreateHauntCall__Outputs(this);
  }
}

export class CreateHauntCall__Inputs {
  _call: CreateHauntCall;

  constructor(call: CreateHauntCall) {
    this._call = call;
  }

  get _hauntMaxSize(): i32 {
    return this._call.inputValues[0].value.toI32();
  }

  get _portalPrice(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _bodyColor(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class CreateHauntCall__Outputs {
  _call: CreateHauntCall;

  constructor(call: CreateHauntCall) {
    this._call = call;
  }

  get hauntId_(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class CreateHauntWithPayloadCall extends ethereum.Call {
  get inputs(): CreateHauntWithPayloadCall__Inputs {
    return new CreateHauntWithPayloadCall__Inputs(this);
  }

  get outputs(): CreateHauntWithPayloadCall__Outputs {
    return new CreateHauntWithPayloadCall__Outputs(this);
  }
}

export class CreateHauntWithPayloadCall__Inputs {
  _call: CreateHauntWithPayloadCall;

  constructor(call: CreateHauntWithPayloadCall) {
    this._call = call;
  }

  get _payload(): CreateHauntWithPayloadCall_payloadStruct {
    return changetype<CreateHauntWithPayloadCall_payloadStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }
}

export class CreateHauntWithPayloadCall__Outputs {
  _call: CreateHauntWithPayloadCall;

  constructor(call: CreateHauntWithPayloadCall) {
    this._call = call;
  }

  get hauntId_(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class CreateHauntWithPayloadCall_payloadStruct extends ethereum.Tuple {
  get _hauntMaxSize(): i32 {
    return this[0].toI32();
  }

  get _portalPrice(): BigInt {
    return this[1].toBigInt();
  }

  get _bodyColor(): Bytes {
    return this[2].toBytes();
  }

  get _collateralTypes(): Array<
    CreateHauntWithPayloadCall_payload_collateralTypesStruct
  > {
    return this[3].toTupleArray<
      CreateHauntWithPayloadCall_payload_collateralTypesStruct
    >();
  }

  get _collateralSvg(): string {
    return this[4].toString();
  }

  get _collateralTypesAndSizes(): Array<
    CreateHauntWithPayloadCall_payload_collateralTypesAndSizesStruct
  > {
    return this[5].toTupleArray<
      CreateHauntWithPayloadCall_payload_collateralTypesAndSizesStruct
    >();
  }

  get _eyeShapeSvg(): string {
    return this[6].toString();
  }

  get _eyeShapeTypesAndSizes(): Array<
    CreateHauntWithPayloadCall_payload_eyeShapeTypesAndSizesStruct
  > {
    return this[7].toTupleArray<
      CreateHauntWithPayloadCall_payload_eyeShapeTypesAndSizesStruct
    >();
  }
}

export class CreateHauntWithPayloadCall_payload_collateralTypesStruct extends ethereum.Tuple {
  get collateralType(): Address {
    return this[0].toAddress();
  }

  get collateralTypeInfo(): CreateHauntWithPayloadCall_payload_collateralTypesCollateralTypeInfoStruct {
    return changetype<
      CreateHauntWithPayloadCall_payload_collateralTypesCollateralTypeInfoStruct
    >(this[1].toTuple());
  }
}

export class CreateHauntWithPayloadCall_payload_collateralTypesCollateralTypeInfoStruct extends ethereum.Tuple {
  get modifiers(): Array<i32> {
    return this[0].toI32Array();
  }

  get primaryColor(): Bytes {
    return this[1].toBytes();
  }

  get secondaryColor(): Bytes {
    return this[2].toBytes();
  }

  get cheekColor(): Bytes {
    return this[3].toBytes();
  }

  get svgId(): i32 {
    return this[4].toI32();
  }

  get eyeShapeSvgId(): i32 {
    return this[5].toI32();
  }

  get conversionRate(): i32 {
    return this[6].toI32();
  }

  get delisted(): boolean {
    return this[7].toBoolean();
  }
}

export class CreateHauntWithPayloadCall_payload_collateralTypesAndSizesStruct extends ethereum.Tuple {
  get svgType(): Bytes {
    return this[0].toBytes();
  }

  get sizes(): Array<BigInt> {
    return this[1].toBigIntArray();
  }
}

export class CreateHauntWithPayloadCall_payload_eyeShapeTypesAndSizesStruct extends ethereum.Tuple {
  get svgType(): Bytes {
    return this[0].toBytes();
  }

  get sizes(): Array<BigInt> {
    return this[1].toBigIntArray();
  }
}

export class GrantExperienceCall extends ethereum.Call {
  get inputs(): GrantExperienceCall__Inputs {
    return new GrantExperienceCall__Inputs(this);
  }

  get outputs(): GrantExperienceCall__Outputs {
    return new GrantExperienceCall__Outputs(this);
  }
}

export class GrantExperienceCall__Inputs {
  _call: GrantExperienceCall;

  constructor(call: GrantExperienceCall) {
    this._call = call;
  }

  get _tokenIds(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }

  get _xpValues(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }
}

export class GrantExperienceCall__Outputs {
  _call: GrantExperienceCall;

  constructor(call: GrantExperienceCall) {
    this._call = call;
  }
}

export class MintItemsCall extends ethereum.Call {
  get inputs(): MintItemsCall__Inputs {
    return new MintItemsCall__Inputs(this);
  }

  get outputs(): MintItemsCall__Outputs {
    return new MintItemsCall__Outputs(this);
  }
}

export class MintItemsCall__Inputs {
  _call: MintItemsCall;

  constructor(call: MintItemsCall) {
    this._call = call;
  }

  get _to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _itemIds(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }

  get _quantities(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }
}

export class MintItemsCall__Outputs {
  _call: MintItemsCall;

  constructor(call: MintItemsCall) {
    this._call = call;
  }
}

export class RemoveExperienceCall extends ethereum.Call {
  get inputs(): RemoveExperienceCall__Inputs {
    return new RemoveExperienceCall__Inputs(this);
  }

  get outputs(): RemoveExperienceCall__Outputs {
    return new RemoveExperienceCall__Outputs(this);
  }
}

export class RemoveExperienceCall__Inputs {
  _call: RemoveExperienceCall;

  constructor(call: RemoveExperienceCall) {
    this._call = call;
  }

  get _tokenIds(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }

  get _xpValues(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }
}

export class RemoveExperienceCall__Outputs {
  _call: RemoveExperienceCall;

  constructor(call: RemoveExperienceCall) {
    this._call = call;
  }
}

export class RemoveGameManagersCall extends ethereum.Call {
  get inputs(): RemoveGameManagersCall__Inputs {
    return new RemoveGameManagersCall__Inputs(this);
  }

  get outputs(): RemoveGameManagersCall__Outputs {
    return new RemoveGameManagersCall__Outputs(this);
  }
}

export class RemoveGameManagersCall__Inputs {
  _call: RemoveGameManagersCall;

  constructor(call: RemoveGameManagersCall) {
    this._call = call;
  }

  get _gameManagers(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }
}

export class RemoveGameManagersCall__Outputs {
  _call: RemoveGameManagersCall;

  constructor(call: RemoveGameManagersCall) {
    this._call = call;
  }
}

export class RemoveItemManagersCall extends ethereum.Call {
  get inputs(): RemoveItemManagersCall__Inputs {
    return new RemoveItemManagersCall__Inputs(this);
  }

  get outputs(): RemoveItemManagersCall__Outputs {
    return new RemoveItemManagersCall__Outputs(this);
  }
}

export class RemoveItemManagersCall__Inputs {
  _call: RemoveItemManagersCall;

  constructor(call: RemoveItemManagersCall) {
    this._call = call;
  }

  get _itemManagers(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }
}

export class RemoveItemManagersCall__Outputs {
  _call: RemoveItemManagersCall;

  constructor(call: RemoveItemManagersCall) {
    this._call = call;
  }
}

export class SetDaoCall extends ethereum.Call {
  get inputs(): SetDaoCall__Inputs {
    return new SetDaoCall__Inputs(this);
  }

  get outputs(): SetDaoCall__Outputs {
    return new SetDaoCall__Outputs(this);
  }
}

export class SetDaoCall__Inputs {
  _call: SetDaoCall;

  constructor(call: SetDaoCall) {
    this._call = call;
  }

  get _newDao(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _newDaoTreasury(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class SetDaoCall__Outputs {
  _call: SetDaoCall;

  constructor(call: SetDaoCall) {
    this._call = call;
  }
}

export class SetItemTraitModifiersAndRarityModifierCall extends ethereum.Call {
  get inputs(): SetItemTraitModifiersAndRarityModifierCall__Inputs {
    return new SetItemTraitModifiersAndRarityModifierCall__Inputs(this);
  }

  get outputs(): SetItemTraitModifiersAndRarityModifierCall__Outputs {
    return new SetItemTraitModifiersAndRarityModifierCall__Outputs(this);
  }
}

export class SetItemTraitModifiersAndRarityModifierCall__Inputs {
  _call: SetItemTraitModifiersAndRarityModifierCall;

  constructor(call: SetItemTraitModifiersAndRarityModifierCall) {
    this._call = call;
  }

  get _wearableId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _traitModifiers(): Array<i32> {
    return this._call.inputValues[1].value.toI32Array();
  }

  get _rarityScoreModifier(): i32 {
    return this._call.inputValues[2].value.toI32();
  }
}

export class SetItemTraitModifiersAndRarityModifierCall__Outputs {
  _call: SetItemTraitModifiersAndRarityModifierCall;

  constructor(call: SetItemTraitModifiersAndRarityModifierCall) {
    this._call = call;
  }
}

export class SetWearableSlotPositionsCall extends ethereum.Call {
  get inputs(): SetWearableSlotPositionsCall__Inputs {
    return new SetWearableSlotPositionsCall__Inputs(this);
  }

  get outputs(): SetWearableSlotPositionsCall__Outputs {
    return new SetWearableSlotPositionsCall__Outputs(this);
  }
}

export class SetWearableSlotPositionsCall__Inputs {
  _call: SetWearableSlotPositionsCall;

  constructor(call: SetWearableSlotPositionsCall) {
    this._call = call;
  }

  get _wearableId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _slotPositions(): Array<boolean> {
    return this._call.inputValues[1].value.toBooleanArray();
  }
}

export class SetWearableSlotPositionsCall__Outputs {
  _call: SetWearableSlotPositionsCall;

  constructor(call: SetWearableSlotPositionsCall) {
    this._call = call;
  }
}

export class UpdateCollateralModifiersCall extends ethereum.Call {
  get inputs(): UpdateCollateralModifiersCall__Inputs {
    return new UpdateCollateralModifiersCall__Inputs(this);
  }

  get outputs(): UpdateCollateralModifiersCall__Outputs {
    return new UpdateCollateralModifiersCall__Outputs(this);
  }
}

export class UpdateCollateralModifiersCall__Inputs {
  _call: UpdateCollateralModifiersCall;

  constructor(call: UpdateCollateralModifiersCall) {
    this._call = call;
  }

  get _collateralType(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _modifiers(): Array<i32> {
    return this._call.inputValues[1].value.toI32Array();
  }
}

export class UpdateCollateralModifiersCall__Outputs {
  _call: UpdateCollateralModifiersCall;

  constructor(call: UpdateCollateralModifiersCall) {
    this._call = call;
  }
}

export class UpdateItemTypeMaxQuantityCall extends ethereum.Call {
  get inputs(): UpdateItemTypeMaxQuantityCall__Inputs {
    return new UpdateItemTypeMaxQuantityCall__Inputs(this);
  }

  get outputs(): UpdateItemTypeMaxQuantityCall__Outputs {
    return new UpdateItemTypeMaxQuantityCall__Outputs(this);
  }
}

export class UpdateItemTypeMaxQuantityCall__Inputs {
  _call: UpdateItemTypeMaxQuantityCall;

  constructor(call: UpdateItemTypeMaxQuantityCall) {
    this._call = call;
  }

  get _itemIds(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }

  get _maxQuantities(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }
}

export class UpdateItemTypeMaxQuantityCall__Outputs {
  _call: UpdateItemTypeMaxQuantityCall;

  constructor(call: UpdateItemTypeMaxQuantityCall) {
    this._call = call;
  }
}

export class UpdateWearableSetsCall extends ethereum.Call {
  get inputs(): UpdateWearableSetsCall__Inputs {
    return new UpdateWearableSetsCall__Inputs(this);
  }

  get outputs(): UpdateWearableSetsCall__Outputs {
    return new UpdateWearableSetsCall__Outputs(this);
  }
}

export class UpdateWearableSetsCall__Inputs {
  _call: UpdateWearableSetsCall;

  constructor(call: UpdateWearableSetsCall) {
    this._call = call;
  }

  get _setIds(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }

  get _wearableSets(): Array<UpdateWearableSetsCall_wearableSetsStruct> {
    return this._call.inputValues[1].value.toTupleArray<
      UpdateWearableSetsCall_wearableSetsStruct
    >();
  }
}

export class UpdateWearableSetsCall__Outputs {
  _call: UpdateWearableSetsCall;

  constructor(call: UpdateWearableSetsCall) {
    this._call = call;
  }
}

export class UpdateWearableSetsCall_wearableSetsStruct extends ethereum.Tuple {
  get name(): string {
    return this[0].toString();
  }

  get allowedCollaterals(): Array<i32> {
    return this[1].toI32Array();
  }

  get wearableIds(): Array<i32> {
    return this[2].toI32Array();
  }

  get traitsBonuses(): Array<i32> {
    return this[3].toI32Array();
  }
}

export class CancelERC1155ListingCall extends ethereum.Call {
  get inputs(): CancelERC1155ListingCall__Inputs {
    return new CancelERC1155ListingCall__Inputs(this);
  }

  get outputs(): CancelERC1155ListingCall__Outputs {
    return new CancelERC1155ListingCall__Outputs(this);
  }
}

export class CancelERC1155ListingCall__Inputs {
  _call: CancelERC1155ListingCall;

  constructor(call: CancelERC1155ListingCall) {
    this._call = call;
  }

  get _listingId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class CancelERC1155ListingCall__Outputs {
  _call: CancelERC1155ListingCall;

  constructor(call: CancelERC1155ListingCall) {
    this._call = call;
  }
}

export class CancelERC1155ListingsCall extends ethereum.Call {
  get inputs(): CancelERC1155ListingsCall__Inputs {
    return new CancelERC1155ListingsCall__Inputs(this);
  }

  get outputs(): CancelERC1155ListingsCall__Outputs {
    return new CancelERC1155ListingsCall__Outputs(this);
  }
}

export class CancelERC1155ListingsCall__Inputs {
  _call: CancelERC1155ListingsCall;

  constructor(call: CancelERC1155ListingsCall) {
    this._call = call;
  }

  get _listingIds(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }
}

export class CancelERC1155ListingsCall__Outputs {
  _call: CancelERC1155ListingsCall;

  constructor(call: CancelERC1155ListingsCall) {
    this._call = call;
  }
}

export class ExecuteERC1155ListingCall extends ethereum.Call {
  get inputs(): ExecuteERC1155ListingCall__Inputs {
    return new ExecuteERC1155ListingCall__Inputs(this);
  }

  get outputs(): ExecuteERC1155ListingCall__Outputs {
    return new ExecuteERC1155ListingCall__Outputs(this);
  }
}

export class ExecuteERC1155ListingCall__Inputs {
  _call: ExecuteERC1155ListingCall;

  constructor(call: ExecuteERC1155ListingCall) {
    this._call = call;
  }

  get _listingId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _quantity(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _priceInWei(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class ExecuteERC1155ListingCall__Outputs {
  _call: ExecuteERC1155ListingCall;

  constructor(call: ExecuteERC1155ListingCall) {
    this._call = call;
  }
}

export class SetERC1155CategoriesCall extends ethereum.Call {
  get inputs(): SetERC1155CategoriesCall__Inputs {
    return new SetERC1155CategoriesCall__Inputs(this);
  }

  get outputs(): SetERC1155CategoriesCall__Outputs {
    return new SetERC1155CategoriesCall__Outputs(this);
  }
}

export class SetERC1155CategoriesCall__Inputs {
  _call: SetERC1155CategoriesCall;

  constructor(call: SetERC1155CategoriesCall) {
    this._call = call;
  }

  get _categories(): Array<SetERC1155CategoriesCall_categoriesStruct> {
    return this._call.inputValues[0].value.toTupleArray<
      SetERC1155CategoriesCall_categoriesStruct
    >();
  }
}

export class SetERC1155CategoriesCall__Outputs {
  _call: SetERC1155CategoriesCall;

  constructor(call: SetERC1155CategoriesCall) {
    this._call = call;
  }
}

export class SetERC1155CategoriesCall_categoriesStruct extends ethereum.Tuple {
  get erc1155TokenAddress(): Address {
    return this[0].toAddress();
  }

  get erc1155TypeId(): BigInt {
    return this[1].toBigInt();
  }

  get category(): BigInt {
    return this[2].toBigInt();
  }
}

export class SetERC1155ListingCall extends ethereum.Call {
  get inputs(): SetERC1155ListingCall__Inputs {
    return new SetERC1155ListingCall__Inputs(this);
  }

  get outputs(): SetERC1155ListingCall__Outputs {
    return new SetERC1155ListingCall__Outputs(this);
  }
}

export class SetERC1155ListingCall__Inputs {
  _call: SetERC1155ListingCall;

  constructor(call: SetERC1155ListingCall) {
    this._call = call;
  }

  get _erc1155TokenAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _erc1155TypeId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _quantity(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _priceInWei(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class SetERC1155ListingCall__Outputs {
  _call: SetERC1155ListingCall;

  constructor(call: SetERC1155ListingCall) {
    this._call = call;
  }
}

export class SetListingFeeCall extends ethereum.Call {
  get inputs(): SetListingFeeCall__Inputs {
    return new SetListingFeeCall__Inputs(this);
  }

  get outputs(): SetListingFeeCall__Outputs {
    return new SetListingFeeCall__Outputs(this);
  }
}

export class SetListingFeeCall__Inputs {
  _call: SetListingFeeCall;

  constructor(call: SetListingFeeCall) {
    this._call = call;
  }

  get _listingFeeInWei(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetListingFeeCall__Outputs {
  _call: SetListingFeeCall;

  constructor(call: SetListingFeeCall) {
    this._call = call;
  }
}

export class UpdateBatchERC1155ListingCall extends ethereum.Call {
  get inputs(): UpdateBatchERC1155ListingCall__Inputs {
    return new UpdateBatchERC1155ListingCall__Inputs(this);
  }

  get outputs(): UpdateBatchERC1155ListingCall__Outputs {
    return new UpdateBatchERC1155ListingCall__Outputs(this);
  }
}

export class UpdateBatchERC1155ListingCall__Inputs {
  _call: UpdateBatchERC1155ListingCall;

  constructor(call: UpdateBatchERC1155ListingCall) {
    this._call = call;
  }

  get _erc1155TokenAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _erc1155TypeIds(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }

  get _owner(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class UpdateBatchERC1155ListingCall__Outputs {
  _call: UpdateBatchERC1155ListingCall;

  constructor(call: UpdateBatchERC1155ListingCall) {
    this._call = call;
  }
}

export class UpdateERC1155ListingCall extends ethereum.Call {
  get inputs(): UpdateERC1155ListingCall__Inputs {
    return new UpdateERC1155ListingCall__Inputs(this);
  }

  get outputs(): UpdateERC1155ListingCall__Outputs {
    return new UpdateERC1155ListingCall__Outputs(this);
  }
}

export class UpdateERC1155ListingCall__Inputs {
  _call: UpdateERC1155ListingCall;

  constructor(call: UpdateERC1155ListingCall) {
    this._call = call;
  }

  get _erc1155TokenAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _erc1155TypeId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _owner(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class UpdateERC1155ListingCall__Outputs {
  _call: UpdateERC1155ListingCall;

  constructor(call: UpdateERC1155ListingCall) {
    this._call = call;
  }
}

export class AddERC721ListingCall extends ethereum.Call {
  get inputs(): AddERC721ListingCall__Inputs {
    return new AddERC721ListingCall__Inputs(this);
  }

  get outputs(): AddERC721ListingCall__Outputs {
    return new AddERC721ListingCall__Outputs(this);
  }
}

export class AddERC721ListingCall__Inputs {
  _call: AddERC721ListingCall;

  constructor(call: AddERC721ListingCall) {
    this._call = call;
  }

  get _erc721TokenAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _erc721TokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _priceInWei(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class AddERC721ListingCall__Outputs {
  _call: AddERC721ListingCall;

  constructor(call: AddERC721ListingCall) {
    this._call = call;
  }
}

export class CancelERC721ListingCall extends ethereum.Call {
  get inputs(): CancelERC721ListingCall__Inputs {
    return new CancelERC721ListingCall__Inputs(this);
  }

  get outputs(): CancelERC721ListingCall__Outputs {
    return new CancelERC721ListingCall__Outputs(this);
  }
}

export class CancelERC721ListingCall__Inputs {
  _call: CancelERC721ListingCall;

  constructor(call: CancelERC721ListingCall) {
    this._call = call;
  }

  get _listingId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class CancelERC721ListingCall__Outputs {
  _call: CancelERC721ListingCall;

  constructor(call: CancelERC721ListingCall) {
    this._call = call;
  }
}

export class CancelERC721ListingByTokenCall extends ethereum.Call {
  get inputs(): CancelERC721ListingByTokenCall__Inputs {
    return new CancelERC721ListingByTokenCall__Inputs(this);
  }

  get outputs(): CancelERC721ListingByTokenCall__Outputs {
    return new CancelERC721ListingByTokenCall__Outputs(this);
  }
}

export class CancelERC721ListingByTokenCall__Inputs {
  _call: CancelERC721ListingByTokenCall;

  constructor(call: CancelERC721ListingByTokenCall) {
    this._call = call;
  }

  get _erc721TokenAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _erc721TokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class CancelERC721ListingByTokenCall__Outputs {
  _call: CancelERC721ListingByTokenCall;

  constructor(call: CancelERC721ListingByTokenCall) {
    this._call = call;
  }
}

export class CancelERC721ListingsCall extends ethereum.Call {
  get inputs(): CancelERC721ListingsCall__Inputs {
    return new CancelERC721ListingsCall__Inputs(this);
  }

  get outputs(): CancelERC721ListingsCall__Outputs {
    return new CancelERC721ListingsCall__Outputs(this);
  }
}

export class CancelERC721ListingsCall__Inputs {
  _call: CancelERC721ListingsCall;

  constructor(call: CancelERC721ListingsCall) {
    this._call = call;
  }

  get _listingIds(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }
}

export class CancelERC721ListingsCall__Outputs {
  _call: CancelERC721ListingsCall;

  constructor(call: CancelERC721ListingsCall) {
    this._call = call;
  }
}

export class ExecuteERC721ListingCall extends ethereum.Call {
  get inputs(): ExecuteERC721ListingCall__Inputs {
    return new ExecuteERC721ListingCall__Inputs(this);
  }

  get outputs(): ExecuteERC721ListingCall__Outputs {
    return new ExecuteERC721ListingCall__Outputs(this);
  }
}

export class ExecuteERC721ListingCall__Inputs {
  _call: ExecuteERC721ListingCall;

  constructor(call: ExecuteERC721ListingCall) {
    this._call = call;
  }

  get _listingId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ExecuteERC721ListingCall__Outputs {
  _call: ExecuteERC721ListingCall;

  constructor(call: ExecuteERC721ListingCall) {
    this._call = call;
  }
}

export class UpdateERC721ListingCall extends ethereum.Call {
  get inputs(): UpdateERC721ListingCall__Inputs {
    return new UpdateERC721ListingCall__Inputs(this);
  }

  get outputs(): UpdateERC721ListingCall__Outputs {
    return new UpdateERC721ListingCall__Outputs(this);
  }
}

export class UpdateERC721ListingCall__Inputs {
  _call: UpdateERC721ListingCall;

  constructor(call: UpdateERC721ListingCall) {
    this._call = call;
  }

  get _erc721TokenAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _erc721TokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _owner(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class UpdateERC721ListingCall__Outputs {
  _call: UpdateERC721ListingCall;

  constructor(call: UpdateERC721ListingCall) {
    this._call = call;
  }
}

export class BatchDepositERC20Call extends ethereum.Call {
  get inputs(): BatchDepositERC20Call__Inputs {
    return new BatchDepositERC20Call__Inputs(this);
  }

  get outputs(): BatchDepositERC20Call__Outputs {
    return new BatchDepositERC20Call__Outputs(this);
  }
}

export class BatchDepositERC20Call__Inputs {
  _call: BatchDepositERC20Call;

  constructor(call: BatchDepositERC20Call) {
    this._call = call;
  }

  get _tokenIds(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }

  get _erc20Contracts(): Array<Address> {
    return this._call.inputValues[1].value.toAddressArray();
  }

  get _values(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }
}

export class BatchDepositERC20Call__Outputs {
  _call: BatchDepositERC20Call;

  constructor(call: BatchDepositERC20Call) {
    this._call = call;
  }
}

export class BatchDepositGHSTCall extends ethereum.Call {
  get inputs(): BatchDepositGHSTCall__Inputs {
    return new BatchDepositGHSTCall__Inputs(this);
  }

  get outputs(): BatchDepositGHSTCall__Outputs {
    return new BatchDepositGHSTCall__Outputs(this);
  }
}

export class BatchDepositGHSTCall__Inputs {
  _call: BatchDepositGHSTCall;

  constructor(call: BatchDepositGHSTCall) {
    this._call = call;
  }

  get _tokenIds(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }

  get _values(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }
}

export class BatchDepositGHSTCall__Outputs {
  _call: BatchDepositGHSTCall;

  constructor(call: BatchDepositGHSTCall) {
    this._call = call;
  }
}

export class DepositERC20Call extends ethereum.Call {
  get inputs(): DepositERC20Call__Inputs {
    return new DepositERC20Call__Inputs(this);
  }

  get outputs(): DepositERC20Call__Outputs {
    return new DepositERC20Call__Outputs(this);
  }
}

export class DepositERC20Call__Inputs {
  _call: DepositERC20Call;

  constructor(call: DepositERC20Call) {
    this._call = call;
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _erc20Contract(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _value(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class DepositERC20Call__Outputs {
  _call: DepositERC20Call;

  constructor(call: DepositERC20Call) {
    this._call = call;
  }
}

export class TransferEscrowCall extends ethereum.Call {
  get inputs(): TransferEscrowCall__Inputs {
    return new TransferEscrowCall__Inputs(this);
  }

  get outputs(): TransferEscrowCall__Outputs {
    return new TransferEscrowCall__Outputs(this);
  }
}

export class TransferEscrowCall__Inputs {
  _call: TransferEscrowCall;

  constructor(call: TransferEscrowCall) {
    this._call = call;
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _erc20Contract(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _recipient(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _transferAmount(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class TransferEscrowCall__Outputs {
  _call: TransferEscrowCall;

  constructor(call: TransferEscrowCall) {
    this._call = call;
  }
}

export class EquipWearablesCall extends ethereum.Call {
  get inputs(): EquipWearablesCall__Inputs {
    return new EquipWearablesCall__Inputs(this);
  }

  get outputs(): EquipWearablesCall__Outputs {
    return new EquipWearablesCall__Outputs(this);
  }
}

export class EquipWearablesCall__Inputs {
  _call: EquipWearablesCall;

  constructor(call: EquipWearablesCall) {
    this._call = call;
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _wearablesToEquip(): Array<i32> {
    return this._call.inputValues[1].value.toI32Array();
  }
}

export class EquipWearablesCall__Outputs {
  _call: EquipWearablesCall;

  constructor(call: EquipWearablesCall) {
    this._call = call;
  }
}

export class SetBaseURICall extends ethereum.Call {
  get inputs(): SetBaseURICall__Inputs {
    return new SetBaseURICall__Inputs(this);
  }

  get outputs(): SetBaseURICall__Outputs {
    return new SetBaseURICall__Outputs(this);
  }
}

export class SetBaseURICall__Inputs {
  _call: SetBaseURICall;

  constructor(call: SetBaseURICall) {
    this._call = call;
  }

  get _value(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class SetBaseURICall__Outputs {
  _call: SetBaseURICall;

  constructor(call: SetBaseURICall) {
    this._call = call;
  }
}

export class UseConsumablesCall extends ethereum.Call {
  get inputs(): UseConsumablesCall__Inputs {
    return new UseConsumablesCall__Inputs(this);
  }

  get outputs(): UseConsumablesCall__Outputs {
    return new UseConsumablesCall__Outputs(this);
  }
}

export class UseConsumablesCall__Inputs {
  _call: UseConsumablesCall;

  constructor(call: UseConsumablesCall) {
    this._call = call;
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _itemIds(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }

  get _quantities(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }
}

export class UseConsumablesCall__Outputs {
  _call: UseConsumablesCall;

  constructor(call: UseConsumablesCall) {
    this._call = call;
  }
}

export class BatchTransferAsChildCall extends ethereum.Call {
  get inputs(): BatchTransferAsChildCall__Inputs {
    return new BatchTransferAsChildCall__Inputs(this);
  }

  get outputs(): BatchTransferAsChildCall__Outputs {
    return new BatchTransferAsChildCall__Outputs(this);
  }
}

export class BatchTransferAsChildCall__Inputs {
  _call: BatchTransferAsChildCall;

  constructor(call: BatchTransferAsChildCall) {
    this._call = call;
  }

  get _fromContract(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _fromTokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _toContract(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _toTokenId(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _ids(): Array<BigInt> {
    return this._call.inputValues[4].value.toBigIntArray();
  }

  get _values(): Array<BigInt> {
    return this._call.inputValues[5].value.toBigIntArray();
  }
}

export class BatchTransferAsChildCall__Outputs {
  _call: BatchTransferAsChildCall;

  constructor(call: BatchTransferAsChildCall) {
    this._call = call;
  }
}

export class BatchTransferFromParentCall extends ethereum.Call {
  get inputs(): BatchTransferFromParentCall__Inputs {
    return new BatchTransferFromParentCall__Inputs(this);
  }

  get outputs(): BatchTransferFromParentCall__Outputs {
    return new BatchTransferFromParentCall__Outputs(this);
  }
}

export class BatchTransferFromParentCall__Inputs {
  _call: BatchTransferFromParentCall;

  constructor(call: BatchTransferFromParentCall) {
    this._call = call;
  }

  get _fromContract(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _fromTokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _to(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _ids(): Array<BigInt> {
    return this._call.inputValues[3].value.toBigIntArray();
  }

  get _values(): Array<BigInt> {
    return this._call.inputValues[4].value.toBigIntArray();
  }
}

export class BatchTransferFromParentCall__Outputs {
  _call: BatchTransferFromParentCall;

  constructor(call: BatchTransferFromParentCall) {
    this._call = call;
  }
}

export class BatchTransferToParentCall extends ethereum.Call {
  get inputs(): BatchTransferToParentCall__Inputs {
    return new BatchTransferToParentCall__Inputs(this);
  }

  get outputs(): BatchTransferToParentCall__Outputs {
    return new BatchTransferToParentCall__Outputs(this);
  }
}

export class BatchTransferToParentCall__Inputs {
  _call: BatchTransferToParentCall;

  constructor(call: BatchTransferToParentCall) {
    this._call = call;
  }

  get _from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _toContract(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _toTokenId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _ids(): Array<BigInt> {
    return this._call.inputValues[3].value.toBigIntArray();
  }

  get _values(): Array<BigInt> {
    return this._call.inputValues[4].value.toBigIntArray();
  }
}

export class BatchTransferToParentCall__Outputs {
  _call: BatchTransferToParentCall;

  constructor(call: BatchTransferToParentCall) {
    this._call = call;
  }
}

export class ExtractItemsFromDiamondCall extends ethereum.Call {
  get inputs(): ExtractItemsFromDiamondCall__Inputs {
    return new ExtractItemsFromDiamondCall__Inputs(this);
  }

  get outputs(): ExtractItemsFromDiamondCall__Outputs {
    return new ExtractItemsFromDiamondCall__Outputs(this);
  }
}

export class ExtractItemsFromDiamondCall__Inputs {
  _call: ExtractItemsFromDiamondCall;

  constructor(call: ExtractItemsFromDiamondCall) {
    this._call = call;
  }

  get _to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _itemIds(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }

  get _values(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }
}

export class ExtractItemsFromDiamondCall__Outputs {
  _call: ExtractItemsFromDiamondCall;

  constructor(call: ExtractItemsFromDiamondCall) {
    this._call = call;
  }
}

export class ExtractItemsFromSacrificedGotchiCall extends ethereum.Call {
  get inputs(): ExtractItemsFromSacrificedGotchiCall__Inputs {
    return new ExtractItemsFromSacrificedGotchiCall__Inputs(this);
  }

  get outputs(): ExtractItemsFromSacrificedGotchiCall__Outputs {
    return new ExtractItemsFromSacrificedGotchiCall__Outputs(this);
  }
}

export class ExtractItemsFromSacrificedGotchiCall__Inputs {
  _call: ExtractItemsFromSacrificedGotchiCall;

  constructor(call: ExtractItemsFromSacrificedGotchiCall) {
    this._call = call;
  }

  get _to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _itemIds(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }

  get _values(): Array<BigInt> {
    return this._call.inputValues[3].value.toBigIntArray();
  }
}

export class ExtractItemsFromSacrificedGotchiCall__Outputs {
  _call: ExtractItemsFromSacrificedGotchiCall;

  constructor(call: ExtractItemsFromSacrificedGotchiCall) {
    this._call = call;
  }
}

export class SafeBatchTransferFrom1Call extends ethereum.Call {
  get inputs(): SafeBatchTransferFrom1Call__Inputs {
    return new SafeBatchTransferFrom1Call__Inputs(this);
  }

  get outputs(): SafeBatchTransferFrom1Call__Outputs {
    return new SafeBatchTransferFrom1Call__Outputs(this);
  }
}

export class SafeBatchTransferFrom1Call__Inputs {
  _call: SafeBatchTransferFrom1Call;

  constructor(call: SafeBatchTransferFrom1Call) {
    this._call = call;
  }

  get _from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _ids(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }

  get _values(): Array<BigInt> {
    return this._call.inputValues[3].value.toBigIntArray();
  }

  get _data(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class SafeBatchTransferFrom1Call__Outputs {
  _call: SafeBatchTransferFrom1Call;

  constructor(call: SafeBatchTransferFrom1Call) {
    this._call = call;
  }
}

export class SafeTransferFrom2Call extends ethereum.Call {
  get inputs(): SafeTransferFrom2Call__Inputs {
    return new SafeTransferFrom2Call__Inputs(this);
  }

  get outputs(): SafeTransferFrom2Call__Outputs {
    return new SafeTransferFrom2Call__Outputs(this);
  }
}

export class SafeTransferFrom2Call__Inputs {
  _call: SafeTransferFrom2Call;

  constructor(call: SafeTransferFrom2Call) {
    this._call = call;
  }

  get _from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _id(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _value(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _data(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class SafeTransferFrom2Call__Outputs {
  _call: SafeTransferFrom2Call;

  constructor(call: SafeTransferFrom2Call) {
    this._call = call;
  }
}

export class TransferAsChildCall extends ethereum.Call {
  get inputs(): TransferAsChildCall__Inputs {
    return new TransferAsChildCall__Inputs(this);
  }

  get outputs(): TransferAsChildCall__Outputs {
    return new TransferAsChildCall__Outputs(this);
  }
}

export class TransferAsChildCall__Inputs {
  _call: TransferAsChildCall;

  constructor(call: TransferAsChildCall) {
    this._call = call;
  }

  get _fromContract(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _fromTokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _toContract(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _toTokenId(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _id(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get _value(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }
}

export class TransferAsChildCall__Outputs {
  _call: TransferAsChildCall;

  constructor(call: TransferAsChildCall) {
    this._call = call;
  }
}

export class TransferFromParentCall extends ethereum.Call {
  get inputs(): TransferFromParentCall__Inputs {
    return new TransferFromParentCall__Inputs(this);
  }

  get outputs(): TransferFromParentCall__Outputs {
    return new TransferFromParentCall__Outputs(this);
  }
}

export class TransferFromParentCall__Inputs {
  _call: TransferFromParentCall;

  constructor(call: TransferFromParentCall) {
    this._call = call;
  }

  get _fromContract(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _fromTokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _to(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _id(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _value(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }
}

export class TransferFromParentCall__Outputs {
  _call: TransferFromParentCall;

  constructor(call: TransferFromParentCall) {
    this._call = call;
  }
}

export class TransferToParentCall extends ethereum.Call {
  get inputs(): TransferToParentCall__Inputs {
    return new TransferToParentCall__Inputs(this);
  }

  get outputs(): TransferToParentCall__Outputs {
    return new TransferToParentCall__Outputs(this);
  }
}

export class TransferToParentCall__Inputs {
  _call: TransferToParentCall;

  constructor(call: TransferToParentCall) {
    this._call = call;
  }

  get _from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _toContract(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _toTokenId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _id(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _value(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }
}

export class TransferToParentCall__Outputs {
  _call: TransferToParentCall;

  constructor(call: TransferToParentCall) {
    this._call = call;
  }
}

export class ExecuteMetaTransactionCall extends ethereum.Call {
  get inputs(): ExecuteMetaTransactionCall__Inputs {
    return new ExecuteMetaTransactionCall__Inputs(this);
  }

  get outputs(): ExecuteMetaTransactionCall__Outputs {
    return new ExecuteMetaTransactionCall__Outputs(this);
  }
}

export class ExecuteMetaTransactionCall__Inputs {
  _call: ExecuteMetaTransactionCall;

  constructor(call: ExecuteMetaTransactionCall) {
    this._call = call;
  }

  get userAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get functionSignature(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get sigR(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }

  get sigS(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }

  get sigV(): i32 {
    return this._call.inputValues[4].value.toI32();
  }
}

export class ExecuteMetaTransactionCall__Outputs {
  _call: ExecuteMetaTransactionCall;

  constructor(call: ExecuteMetaTransactionCall) {
    this._call = call;
  }

  get value0(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class BuyPortalsCall extends ethereum.Call {
  get inputs(): BuyPortalsCall__Inputs {
    return new BuyPortalsCall__Inputs(this);
  }

  get outputs(): BuyPortalsCall__Outputs {
    return new BuyPortalsCall__Outputs(this);
  }
}

export class BuyPortalsCall__Inputs {
  _call: BuyPortalsCall;

  constructor(call: BuyPortalsCall) {
    this._call = call;
  }

  get _to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _ghst(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class BuyPortalsCall__Outputs {
  _call: BuyPortalsCall;

  constructor(call: BuyPortalsCall) {
    this._call = call;
  }
}

export class MintPortalsCall extends ethereum.Call {
  get inputs(): MintPortalsCall__Inputs {
    return new MintPortalsCall__Inputs(this);
  }

  get outputs(): MintPortalsCall__Outputs {
    return new MintPortalsCall__Outputs(this);
  }
}

export class MintPortalsCall__Inputs {
  _call: MintPortalsCall;

  constructor(call: MintPortalsCall) {
    this._call = call;
  }

  get _to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class MintPortalsCall__Outputs {
  _call: MintPortalsCall;

  constructor(call: MintPortalsCall) {
    this._call = call;
  }
}

export class PurchaseItemsWithGhstCall extends ethereum.Call {
  get inputs(): PurchaseItemsWithGhstCall__Inputs {
    return new PurchaseItemsWithGhstCall__Inputs(this);
  }

  get outputs(): PurchaseItemsWithGhstCall__Outputs {
    return new PurchaseItemsWithGhstCall__Outputs(this);
  }
}

export class PurchaseItemsWithGhstCall__Inputs {
  _call: PurchaseItemsWithGhstCall;

  constructor(call: PurchaseItemsWithGhstCall) {
    this._call = call;
  }

  get _to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _itemIds(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }

  get _quantities(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }
}

export class PurchaseItemsWithGhstCall__Outputs {
  _call: PurchaseItemsWithGhstCall;

  constructor(call: PurchaseItemsWithGhstCall) {
    this._call = call;
  }
}

export class PurchaseTransferItemsWithGhstCall extends ethereum.Call {
  get inputs(): PurchaseTransferItemsWithGhstCall__Inputs {
    return new PurchaseTransferItemsWithGhstCall__Inputs(this);
  }

  get outputs(): PurchaseTransferItemsWithGhstCall__Outputs {
    return new PurchaseTransferItemsWithGhstCall__Outputs(this);
  }
}

export class PurchaseTransferItemsWithGhstCall__Inputs {
  _call: PurchaseTransferItemsWithGhstCall;

  constructor(call: PurchaseTransferItemsWithGhstCall) {
    this._call = call;
  }

  get _to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _itemIds(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }

  get _quantities(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }
}

export class PurchaseTransferItemsWithGhstCall__Outputs {
  _call: PurchaseTransferItemsWithGhstCall;

  constructor(call: PurchaseTransferItemsWithGhstCall) {
    this._call = call;
  }
}

export class DeleteLastSvgLayersCall extends ethereum.Call {
  get inputs(): DeleteLastSvgLayersCall__Inputs {
    return new DeleteLastSvgLayersCall__Inputs(this);
  }

  get outputs(): DeleteLastSvgLayersCall__Outputs {
    return new DeleteLastSvgLayersCall__Outputs(this);
  }
}

export class DeleteLastSvgLayersCall__Inputs {
  _call: DeleteLastSvgLayersCall;

  constructor(call: DeleteLastSvgLayersCall) {
    this._call = call;
  }

  get _svgType(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _numLayers(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class DeleteLastSvgLayersCall__Outputs {
  _call: DeleteLastSvgLayersCall;

  constructor(call: DeleteLastSvgLayersCall) {
    this._call = call;
  }
}

export class SetItemsDimensionsCall extends ethereum.Call {
  get inputs(): SetItemsDimensionsCall__Inputs {
    return new SetItemsDimensionsCall__Inputs(this);
  }

  get outputs(): SetItemsDimensionsCall__Outputs {
    return new SetItemsDimensionsCall__Outputs(this);
  }
}

export class SetItemsDimensionsCall__Inputs {
  _call: SetItemsDimensionsCall;

  constructor(call: SetItemsDimensionsCall) {
    this._call = call;
  }

  get _itemIds(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }

  get _dimensions(): Array<SetItemsDimensionsCall_dimensionsStruct> {
    return this._call.inputValues[1].value.toTupleArray<
      SetItemsDimensionsCall_dimensionsStruct
    >();
  }
}

export class SetItemsDimensionsCall__Outputs {
  _call: SetItemsDimensionsCall;

  constructor(call: SetItemsDimensionsCall) {
    this._call = call;
  }
}

export class SetItemsDimensionsCall_dimensionsStruct extends ethereum.Tuple {
  get x(): i32 {
    return this[0].toI32();
  }

  get y(): i32 {
    return this[1].toI32();
  }

  get width(): i32 {
    return this[2].toI32();
  }

  get height(): i32 {
    return this[3].toI32();
  }
}

export class SetSleevesCall extends ethereum.Call {
  get inputs(): SetSleevesCall__Inputs {
    return new SetSleevesCall__Inputs(this);
  }

  get outputs(): SetSleevesCall__Outputs {
    return new SetSleevesCall__Outputs(this);
  }
}

export class SetSleevesCall__Inputs {
  _call: SetSleevesCall;

  constructor(call: SetSleevesCall) {
    this._call = call;
  }

  get _sleeves(): Array<SetSleevesCall_sleevesStruct> {
    return this._call.inputValues[0].value.toTupleArray<
      SetSleevesCall_sleevesStruct
    >();
  }
}

export class SetSleevesCall__Outputs {
  _call: SetSleevesCall;

  constructor(call: SetSleevesCall) {
    this._call = call;
  }
}

export class SetSleevesCall_sleevesStruct extends ethereum.Tuple {
  get sleeveId(): BigInt {
    return this[0].toBigInt();
  }

  get wearableId(): BigInt {
    return this[1].toBigInt();
  }
}

export class StoreSvgCall extends ethereum.Call {
  get inputs(): StoreSvgCall__Inputs {
    return new StoreSvgCall__Inputs(this);
  }

  get outputs(): StoreSvgCall__Outputs {
    return new StoreSvgCall__Outputs(this);
  }
}

export class StoreSvgCall__Inputs {
  _call: StoreSvgCall;

  constructor(call: StoreSvgCall) {
    this._call = call;
  }

  get _svg(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _typesAndSizes(): Array<StoreSvgCall_typesAndSizesStruct> {
    return this._call.inputValues[1].value.toTupleArray<
      StoreSvgCall_typesAndSizesStruct
    >();
  }
}

export class StoreSvgCall__Outputs {
  _call: StoreSvgCall;

  constructor(call: StoreSvgCall) {
    this._call = call;
  }
}

export class StoreSvgCall_typesAndSizesStruct extends ethereum.Tuple {
  get svgType(): Bytes {
    return this[0].toBytes();
  }

  get sizes(): Array<BigInt> {
    return this[1].toBigIntArray();
  }
}

export class UpdateSvgCall extends ethereum.Call {
  get inputs(): UpdateSvgCall__Inputs {
    return new UpdateSvgCall__Inputs(this);
  }

  get outputs(): UpdateSvgCall__Outputs {
    return new UpdateSvgCall__Outputs(this);
  }
}

export class UpdateSvgCall__Inputs {
  _call: UpdateSvgCall;

  constructor(call: UpdateSvgCall) {
    this._call = call;
  }

  get _svg(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _typesAndIdsAndSizes(): Array<UpdateSvgCall_typesAndIdsAndSizesStruct> {
    return this._call.inputValues[1].value.toTupleArray<
      UpdateSvgCall_typesAndIdsAndSizesStruct
    >();
  }
}

export class UpdateSvgCall__Outputs {
  _call: UpdateSvgCall;

  constructor(call: UpdateSvgCall) {
    this._call = call;
  }
}

export class UpdateSvgCall_typesAndIdsAndSizesStruct extends ethereum.Tuple {
  get svgType(): Bytes {
    return this[0].toBytes();
  }

  get ids(): Array<BigInt> {
    return this[1].toBigIntArray();
  }

  get sizes(): Array<BigInt> {
    return this[2].toBigIntArray();
  }
}

export class SetSideViewDimensionsCall extends ethereum.Call {
  get inputs(): SetSideViewDimensionsCall__Inputs {
    return new SetSideViewDimensionsCall__Inputs(this);
  }

  get outputs(): SetSideViewDimensionsCall__Outputs {
    return new SetSideViewDimensionsCall__Outputs(this);
  }
}

export class SetSideViewDimensionsCall__Inputs {
  _call: SetSideViewDimensionsCall;

  constructor(call: SetSideViewDimensionsCall) {
    this._call = call;
  }

  get _sideViewDimensions(): Array<
    SetSideViewDimensionsCall_sideViewDimensionsStruct
  > {
    return this._call.inputValues[0].value.toTupleArray<
      SetSideViewDimensionsCall_sideViewDimensionsStruct
    >();
  }
}

export class SetSideViewDimensionsCall__Outputs {
  _call: SetSideViewDimensionsCall;

  constructor(call: SetSideViewDimensionsCall) {
    this._call = call;
  }
}

export class SetSideViewDimensionsCall_sideViewDimensionsStruct extends ethereum.Tuple {
  get itemId(): BigInt {
    return this[0].toBigInt();
  }

  get side(): string {
    return this[1].toString();
  }

  get dimensions(): SetSideViewDimensionsCall_sideViewDimensionsDimensionsStruct {
    return changetype<
      SetSideViewDimensionsCall_sideViewDimensionsDimensionsStruct
    >(this[2].toTuple());
  }
}

export class SetSideViewDimensionsCall_sideViewDimensionsDimensionsStruct extends ethereum.Tuple {
  get x(): i32 {
    return this[0].toI32();
  }

  get y(): i32 {
    return this[1].toI32();
  }

  get width(): i32 {
    return this[2].toI32();
  }

  get height(): i32 {
    return this[3].toI32();
  }
}

export class ChangeVrfCall extends ethereum.Call {
  get inputs(): ChangeVrfCall__Inputs {
    return new ChangeVrfCall__Inputs(this);
  }

  get outputs(): ChangeVrfCall__Outputs {
    return new ChangeVrfCall__Outputs(this);
  }
}

export class ChangeVrfCall__Inputs {
  _call: ChangeVrfCall;

  constructor(call: ChangeVrfCall) {
    this._call = call;
  }

  get _newFee(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _keyHash(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get _vrfCoordinator(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _link(): Address {
    return this._call.inputValues[3].value.toAddress();
  }
}

export class ChangeVrfCall__Outputs {
  _call: ChangeVrfCall;

  constructor(call: ChangeVrfCall) {
    this._call = call;
  }
}

export class OpenPortalsCall extends ethereum.Call {
  get inputs(): OpenPortalsCall__Inputs {
    return new OpenPortalsCall__Inputs(this);
  }

  get outputs(): OpenPortalsCall__Outputs {
    return new OpenPortalsCall__Outputs(this);
  }
}

export class OpenPortalsCall__Inputs {
  _call: OpenPortalsCall;

  constructor(call: OpenPortalsCall) {
    this._call = call;
  }

  get _tokenIds(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }
}

export class OpenPortalsCall__Outputs {
  _call: OpenPortalsCall;

  constructor(call: OpenPortalsCall) {
    this._call = call;
  }
}

export class RawFulfillRandomnessCall extends ethereum.Call {
  get inputs(): RawFulfillRandomnessCall__Inputs {
    return new RawFulfillRandomnessCall__Inputs(this);
  }

  get outputs(): RawFulfillRandomnessCall__Outputs {
    return new RawFulfillRandomnessCall__Outputs(this);
  }
}

export class RawFulfillRandomnessCall__Inputs {
  _call: RawFulfillRandomnessCall;

  constructor(call: RawFulfillRandomnessCall) {
    this._call = call;
  }

  get _requestId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _randomNumber(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class RawFulfillRandomnessCall__Outputs {
  _call: RawFulfillRandomnessCall;

  constructor(call: RawFulfillRandomnessCall) {
    this._call = call;
  }
}

export class RemoveLinkTokensCall extends ethereum.Call {
  get inputs(): RemoveLinkTokensCall__Inputs {
    return new RemoveLinkTokensCall__Inputs(this);
  }

  get outputs(): RemoveLinkTokensCall__Outputs {
    return new RemoveLinkTokensCall__Outputs(this);
  }
}

export class RemoveLinkTokensCall__Inputs {
  _call: RemoveLinkTokensCall;

  constructor(call: RemoveLinkTokensCall) {
    this._call = call;
  }

  get _to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _value(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class RemoveLinkTokensCall__Outputs {
  _call: RemoveLinkTokensCall;

  constructor(call: RemoveLinkTokensCall) {
    this._call = call;
  }
}

export class MigrateVouchersCall extends ethereum.Call {
  get inputs(): MigrateVouchersCall__Inputs {
    return new MigrateVouchersCall__Inputs(this);
  }

  get outputs(): MigrateVouchersCall__Outputs {
    return new MigrateVouchersCall__Outputs(this);
  }
}

export class MigrateVouchersCall__Inputs {
  _call: MigrateVouchersCall;

  constructor(call: MigrateVouchersCall) {
    this._call = call;
  }

  get _vouchersOwners(): Array<MigrateVouchersCall_vouchersOwnersStruct> {
    return this._call.inputValues[0].value.toTupleArray<
      MigrateVouchersCall_vouchersOwnersStruct
    >();
  }
}

export class MigrateVouchersCall__Outputs {
  _call: MigrateVouchersCall;

  constructor(call: MigrateVouchersCall) {
    this._call = call;
  }
}

export class MigrateVouchersCall_vouchersOwnersStruct extends ethereum.Tuple {
  get owner(): Address {
    return this[0].toAddress();
  }

  get ids(): Array<BigInt> {
    return this[1].toBigIntArray();
  }

  get values(): Array<BigInt> {
    return this[2].toBigIntArray();
  }
}

export class AddGotchiLendingCall extends ethereum.Call {
  get inputs(): AddGotchiLendingCall__Inputs {
    return new AddGotchiLendingCall__Inputs(this);
  }

  get outputs(): AddGotchiLendingCall__Outputs {
    return new AddGotchiLendingCall__Outputs(this);
  }
}

export class AddGotchiLendingCall__Inputs {
  _call: AddGotchiLendingCall;

  constructor(call: AddGotchiLendingCall) {
    this._call = call;
  }

  get _erc721TokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _initialCost(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _period(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _revenueSplit(): Array<i32> {
    return this._call.inputValues[3].value.toI32Array();
  }

  get _originalOwner(): Address {
    return this._call.inputValues[4].value.toAddress();
  }

  get _thirdParty(): Address {
    return this._call.inputValues[5].value.toAddress();
  }

  get _whitelistId(): BigInt {
    return this._call.inputValues[6].value.toBigInt();
  }

  get _revenueTokens(): Array<Address> {
    return this._call.inputValues[7].value.toAddressArray();
  }
}

export class AddGotchiLendingCall__Outputs {
  _call: AddGotchiLendingCall;

  constructor(call: AddGotchiLendingCall) {
    this._call = call;
  }
}

export class AgreeGotchiLendingCall extends ethereum.Call {
  get inputs(): AgreeGotchiLendingCall__Inputs {
    return new AgreeGotchiLendingCall__Inputs(this);
  }

  get outputs(): AgreeGotchiLendingCall__Outputs {
    return new AgreeGotchiLendingCall__Outputs(this);
  }
}

export class AgreeGotchiLendingCall__Inputs {
  _call: AgreeGotchiLendingCall;

  constructor(call: AgreeGotchiLendingCall) {
    this._call = call;
  }

  get _listingId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _erc721TokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _initialCost(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _period(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _revenueSplit(): Array<i32> {
    return this._call.inputValues[4].value.toI32Array();
  }
}

export class AgreeGotchiLendingCall__Outputs {
  _call: AgreeGotchiLendingCall;

  constructor(call: AgreeGotchiLendingCall) {
    this._call = call;
  }
}

export class CancelGotchiLendingCall extends ethereum.Call {
  get inputs(): CancelGotchiLendingCall__Inputs {
    return new CancelGotchiLendingCall__Inputs(this);
  }

  get outputs(): CancelGotchiLendingCall__Outputs {
    return new CancelGotchiLendingCall__Outputs(this);
  }
}

export class CancelGotchiLendingCall__Inputs {
  _call: CancelGotchiLendingCall;

  constructor(call: CancelGotchiLendingCall) {
    this._call = call;
  }

  get _listingId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class CancelGotchiLendingCall__Outputs {
  _call: CancelGotchiLendingCall;

  constructor(call: CancelGotchiLendingCall) {
    this._call = call;
  }
}

export class CancelGotchiLendingByTokenCall extends ethereum.Call {
  get inputs(): CancelGotchiLendingByTokenCall__Inputs {
    return new CancelGotchiLendingByTokenCall__Inputs(this);
  }

  get outputs(): CancelGotchiLendingByTokenCall__Outputs {
    return new CancelGotchiLendingByTokenCall__Outputs(this);
  }
}

export class CancelGotchiLendingByTokenCall__Inputs {
  _call: CancelGotchiLendingByTokenCall;

  constructor(call: CancelGotchiLendingByTokenCall) {
    this._call = call;
  }

  get _erc721TokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class CancelGotchiLendingByTokenCall__Outputs {
  _call: CancelGotchiLendingByTokenCall;

  constructor(call: CancelGotchiLendingByTokenCall) {
    this._call = call;
  }
}

export class ClaimAndEndGotchiLendingCall extends ethereum.Call {
  get inputs(): ClaimAndEndGotchiLendingCall__Inputs {
    return new ClaimAndEndGotchiLendingCall__Inputs(this);
  }

  get outputs(): ClaimAndEndGotchiLendingCall__Outputs {
    return new ClaimAndEndGotchiLendingCall__Outputs(this);
  }
}

export class ClaimAndEndGotchiLendingCall__Inputs {
  _call: ClaimAndEndGotchiLendingCall;

  constructor(call: ClaimAndEndGotchiLendingCall) {
    this._call = call;
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ClaimAndEndGotchiLendingCall__Outputs {
  _call: ClaimAndEndGotchiLendingCall;

  constructor(call: ClaimAndEndGotchiLendingCall) {
    this._call = call;
  }
}

export class ClaimGotchiLendingCall extends ethereum.Call {
  get inputs(): ClaimGotchiLendingCall__Inputs {
    return new ClaimGotchiLendingCall__Inputs(this);
  }

  get outputs(): ClaimGotchiLendingCall__Outputs {
    return new ClaimGotchiLendingCall__Outputs(this);
  }
}

export class ClaimGotchiLendingCall__Inputs {
  _call: ClaimGotchiLendingCall;

  constructor(call: ClaimGotchiLendingCall) {
    this._call = call;
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ClaimGotchiLendingCall__Outputs {
  _call: ClaimGotchiLendingCall;

  constructor(call: ClaimGotchiLendingCall) {
    this._call = call;
  }
}

export class CreateWhitelistCall extends ethereum.Call {
  get inputs(): CreateWhitelistCall__Inputs {
    return new CreateWhitelistCall__Inputs(this);
  }

  get outputs(): CreateWhitelistCall__Outputs {
    return new CreateWhitelistCall__Outputs(this);
  }
}

export class CreateWhitelistCall__Inputs {
  _call: CreateWhitelistCall;

  constructor(call: CreateWhitelistCall) {
    this._call = call;
  }

  get _name(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _whitelistAddresses(): Array<Address> {
    return this._call.inputValues[1].value.toAddressArray();
  }
}

export class CreateWhitelistCall__Outputs {
  _call: CreateWhitelistCall;

  constructor(call: CreateWhitelistCall) {
    this._call = call;
  }
}

export class UpdateWhitelistCall extends ethereum.Call {
  get inputs(): UpdateWhitelistCall__Inputs {
    return new UpdateWhitelistCall__Inputs(this);
  }

  get outputs(): UpdateWhitelistCall__Outputs {
    return new UpdateWhitelistCall__Outputs(this);
  }
}

export class UpdateWhitelistCall__Inputs {
  _call: UpdateWhitelistCall;

  constructor(call: UpdateWhitelistCall) {
    this._call = call;
  }

  get _whitelistId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _whitelistAddresses(): Array<Address> {
    return this._call.inputValues[1].value.toAddressArray();
  }
}

export class UpdateWhitelistCall__Outputs {
  _call: UpdateWhitelistCall;

  constructor(call: UpdateWhitelistCall) {
    this._call = call;
  }
}
